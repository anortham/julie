{
  "created_at": "2025-10-29T13:05:42.006462+00:00",
  "file_count": 672,
  "symbol_count": 8521,
  "indexed_files": [
    ".gitignore",
    "AGENTS.md",
    "CLAUDE.md",
    "CLEANUP_SUMMARY_2025-10-25.md",
    "Cargo.toml",
    "JULIE_AGENT_INSTRUCTIONS.md",
    "README.md",
    "TESTING.md",
    "TODO.md",
    "TREE_SITTER_WARNING.md",
    "UTF8_AUDIT.md",
    "UTF8_FIX.md",
    "build-binaries.sh",
    "docs/ARCHITECTURE.md",
    "docs/GPU_ACCELERATION_PLAN.md",
    "docs/INTELLIGENCE_LAYER.md",
    "docs/README.md",
    "docs/RELATIVE_PATHS_CONTRACT.md",
    "docs/SEARCH_FLOW.md",
    "docs/SMART_READ_DEMO.md",
    "fixtures/editing/controls/auto-fix/missing_paren.ts",
    "fixtures/editing/controls/auto-fix/multi_element_array.js",
    "fixtures/editing/controls/auto-fix/multi_property_object.js",
    "fixtures/editing/controls/auto-fix/nested_structures.js",
    "fixtures/editing/controls/auto-fix/rust_struct.rs",
    "fixtures/editing/controls/auto-fix/unclosed_string.py",
    "fixtures/editing/controls/fast-edit/complex_class_validation.ts",
    "fixtures/editing/controls/fast-edit/edge_cases_todo_replaced.py",
    "fixtures/editing/controls/fast-edit/simple_function_rename.rs",
    "fixtures/editing/controls/line-edit/line_edit_delete_comment.py",
    "fixtures/editing/controls/line-edit/line_edit_insert_import.py",
    "fixtures/editing/controls/line-edit/line_edit_replace_function.py",
    "fixtures/editing/controls/line-edit/line_edit_replace_function_only.py",
    "fixtures/editing/controls/refactor/ast_aware_userservice_rename.ts",
    "fixtures/editing/controls/refactor/ast_edge_cases_rename.ts",
    "fixtures/editing/controls/refactor/rename_userservice_to_accountservice.ts",
    "fixtures/editing/controls/refactor/replace_finduserbyid_body.ts",
    "fixtures/editing/controls/refactor/simple_rename_control.ts",
    "fixtures/editing/controls/refactor/user_service_to_account_service.ts",
    "fixtures/editing/sources/ast-aware/user_service.ts",
    "fixtures/editing/sources/ast_edge_cases.ts",
    "fixtures/editing/sources/ast_refactor_test.ts",
    "fixtures/editing/sources/broken/missing_paren.ts",
    "fixtures/editing/sources/broken/multi_element_array.js",
    "fixtures/editing/sources/broken/multi_property_object.js",
    "fixtures/editing/sources/broken/nested_structures.js",
    "fixtures/editing/sources/broken/rust_struct.rs",
    "fixtures/editing/sources/broken/unclosed_string.py",
    "fixtures/editing/sources/complex_class.ts",
    "fixtures/editing/sources/edge_cases.py",
    "fixtures/editing/sources/javascript/vue.config.js",
    "fixtures/editing/sources/line_edit_base.py",
    "fixtures/editing/sources/python/test_database.py",
    "fixtures/editing/sources/refactor_source.ts",
    "fixtures/editing/sources/simple_function.rs",
    "fixtures/editing/sources/simple_rename_test.ts",
    "fixtures/editing/sources/typescript/data-repository.ts",
    "fixtures/editing/sources/typescript/user-service.ts",
    "fixtures/real-world/bash/system-admin-script.sh",
    "fixtures/real-world/c/binary_search_tree.c",
    "fixtures/real-world/cpp/graph_algorithms.cpp",
    "fixtures/real-world/csharp-advanced/DevOpsController.cs",
    "fixtures/real-world/csharp-advanced/EnterpriseDataEmailModels.cs",
    "fixtures/real-world/csharp/Program.cs",
    "fixtures/real-world/css/flexbox-grid.css",
    "fixtures/real-world/dart/flutter_isolate_demo.dart",
    "fixtures/real-world/gdscript/player_controller.gd",
    "fixtures/real-world/go/main.go",
    "fixtures/real-world/html/popup-info-web-component.html",
    "fixtures/real-world/java/Main.java",
    "fixtures/real-world/java/Model.java",
    "fixtures/real-world/java/ModelUser.java",
    "fixtures/real-world/java/Utils.java",
    "fixtures/real-world/javascript/vue.config.js",
    "fixtures/real-world/kotlin/Main.kt",
    "fixtures/real-world/kotlin/Model.kt",
    "fixtures/real-world/kotlin/ModelUser.kt",
    "fixtures/real-world/kotlin/Utils.kt",
    "fixtures/real-world/lua/web_server_framework.lua",
    "fixtures/real-world/php/helper.php",
    "fixtures/real-world/php/index.php",
    "fixtures/real-world/powershell/system-health-check.ps1",
    "fixtures/real-world/python/test_database.py",
    "fixtures/real-world/razor/MainLayout.razor",
    "fixtures/real-world/razor/TipOfTheDayComponent.razor",
    "fixtures/real-world/regex/validation_patterns.regex",
    "fixtures/real-world/ruby/lib.rb",
    "fixtures/real-world/ruby/main.rb",
    "fixtures/real-world/ruby/models.rb",
    "fixtures/real-world/ruby/nested.rb",
    "fixtures/real-world/ruby/services.rb",
    "fixtures/real-world/ruby/variables.rb",
    "fixtures/real-world/rust/lib.rs",
    "fixtures/real-world/rust/main.rs",
    "fixtures/real-world/sql/postgresql-migrations.sql",
    "fixtures/real-world/swift/main.swift",
    "fixtures/real-world/swift/utils.swift",
    "fixtures/real-world/typescript/data-repository.ts",
    "fixtures/real-world/typescript/user-dashboard.tsx",
    "fixtures/real-world/typescript/user-service.ts",
    "fixtures/real-world/vue/App.vue",
    "fixtures/real-world/vue/HelloWorld.vue",
    "fixtures/real-world/vue/WelcomeItem.vue",
    "fixtures/real-world/zig/memory_allocator.zig",
    "fixtures/test-workspaces/README.md",
    "fixtures/test-workspaces/tiny-primary/src/lib.rs",
    "fixtures/test-workspaces/tiny-primary/src/main.rs",
    "fixtures/test-workspaces/tiny-reference/src/helper.rs",
    "fixtures/test-workspaces/tiny-reference/src/types.rs",
    "src/cli/mod.rs",
    "src/cli/output.rs",
    "src/cli/parallel.rs",
    "src/cli/progress.rs",
    "src/database/bulk_operations.rs",
    "src/database/embeddings.rs",
    "src/database/files.rs",
    "src/database/helpers.rs",
    "src/database/migrations.rs",
    "src/database/mod.rs",
    "src/database/relationships.rs",
    "src/database/schema.rs",
    "src/database/symbols/bulk.rs",
    "src/database/symbols/mod.rs",
    "src/database/symbols/queries.rs",
    "src/database/symbols/search.rs",
    "src/database/symbols/storage.rs",
    "src/database/types.rs",
    "src/database/workspace.rs",
    "src/embeddings/cross_language.rs",
    "src/embeddings/mod.rs",
    "src/embeddings/model_manager.rs",
    "src/embeddings/ort_model.rs",
    "src/embeddings/vector_store.rs",
    "src/extractors/base.rs",
    "src/extractors/bash/commands.rs",
    "src/extractors/bash/functions.rs",
    "src/extractors/bash/helpers.rs",
    "src/extractors/bash/mod.rs",
    "src/extractors/bash/relationships.rs",
    "src/extractors/bash/signatures.rs",
    "src/extractors/bash/types.rs",
    "src/extractors/bash/variables.rs",
    "src/extractors/c/declarations.rs",
    "src/extractors/c/helpers.rs",
    "src/extractors/c/identifiers.rs",
    "src/extractors/c/mod.rs",
    "src/extractors/c/relationships.rs",
    "src/extractors/c/signatures.rs",
    "src/extractors/c/types.rs",
    "src/extractors/cpp/declarations.rs",
    "src/extractors/cpp/functions.rs",
    "src/extractors/cpp/helpers.rs",
    "src/extractors/cpp/identifiers.rs",
    "src/extractors/cpp/mod.rs",
    "src/extractors/cpp/relationships.rs",
    "src/extractors/cpp/type_inference.rs",
    "src/extractors/cpp/types.rs",
    "src/extractors/csharp/helpers.rs",
    "src/extractors/csharp/identifiers.rs",
    "src/extractors/csharp/members.rs",
    "src/extractors/csharp/mod.rs",
    "src/extractors/csharp/operators.rs",
    "src/extractors/csharp/relationships.rs",
    "src/extractors/csharp/type_inference.rs",
    "src/extractors/csharp/types.rs",
    "src/extractors/css/animations.rs",
    "src/extractors/css/at_rules.rs",
    "src/extractors/css/helpers.rs",
    "src/extractors/css/identifiers.rs",
    "src/extractors/css/media.rs",
    "src/extractors/css/mod.rs",
    "src/extractors/css/properties.rs",
    "src/extractors/css/rules.rs",
    "src/extractors/dart/functions.rs",
    "src/extractors/dart/helpers.rs",
    "src/extractors/dart/members.rs",
    "src/extractors/dart/mod.rs",
    "src/extractors/dart/relationships.rs",
    "src/extractors/dart/signatures.rs",
    "src/extractors/dart/types.rs",
    "src/extractors/gdscript/classes.rs",
    "src/extractors/gdscript/enums.rs",
    "src/extractors/gdscript/functions.rs",
    "src/extractors/gdscript/helpers.rs",
    "src/extractors/gdscript/identifiers.rs",
    "src/extractors/gdscript/mod.rs",
    "src/extractors/gdscript/signals.rs",
    "src/extractors/gdscript/types.rs",
    "src/extractors/gdscript/variables.rs",
    "src/extractors/go/functions.rs",
    "src/extractors/go/helpers.rs",
    "src/extractors/go/identifiers.rs",
    "src/extractors/go/mod.rs",
    "src/extractors/go/relationships.rs",
    "src/extractors/go/signatures.rs",
    "src/extractors/go/specs.rs",
    "src/extractors/go/types.rs",
    "src/extractors/html/attributes.rs",
    "src/extractors/html/elements.rs",
    "src/extractors/html/fallback.rs",
    "src/extractors/html/helpers.rs",
    "src/extractors/html/identifiers.rs",
    "src/extractors/html/mod.rs",
    "src/extractors/html/relationships.rs",
    "src/extractors/html/scripts.rs",
    "src/extractors/html/types.rs",
    "src/extractors/java/annotations.rs",
    "src/extractors/java/classes.rs",
    "src/extractors/java/fields.rs",
    "src/extractors/java/helpers.rs",
    "src/extractors/java/identifiers.rs",
    "src/extractors/java/imports_packages.rs",
    "src/extractors/java/methods.rs",
    "src/extractors/java/mod.rs",
    "src/extractors/java/relationships.rs",
    "src/extractors/java/types.rs",
    "src/extractors/javascript/assignments.rs",
    "src/extractors/javascript/functions.rs",
    "src/extractors/javascript/helpers.rs",
    "src/extractors/javascript/identifiers.rs",
    "src/extractors/javascript/imports.rs",
    "src/extractors/javascript/mod.rs",
    "src/extractors/javascript/relationships.rs",
    "src/extractors/javascript/signatures.rs",
    "src/extractors/javascript/types.rs",
    "src/extractors/javascript/variables.rs",
    "src/extractors/javascript/visibility.rs",
    "src/extractors/kotlin/helpers.rs",
    "src/extractors/kotlin/identifiers.rs",
    "src/extractors/kotlin/mod.rs",
    "src/extractors/kotlin/properties.rs",
    "src/extractors/kotlin/relationships.rs",
    "src/extractors/kotlin/types.rs",
    "src/extractors/lua/classes.rs",
    "src/extractors/lua/core.rs",
    "src/extractors/lua/functions.rs",
    "src/extractors/lua/helpers.rs",
    "src/extractors/lua/identifiers.rs",
    "src/extractors/lua/mod.rs",
    "src/extractors/lua/relationships.rs",
    "src/extractors/lua/tables.rs",
    "src/extractors/lua/variables.rs",
    "src/extractors/mod.rs",
    "src/extractors/php/functions.rs",
    "src/extractors/php/helpers.rs",
    "src/extractors/php/identifiers.rs",
    "src/extractors/php/members.rs",
    "src/extractors/php/mod.rs",
    "src/extractors/php/namespaces.rs",
    "src/extractors/php/relationships.rs",
    "src/extractors/php/types.rs",
    "src/extractors/powershell/classes.rs",
    "src/extractors/powershell/commands.rs",
    "src/extractors/powershell/documentation.rs",
    "src/extractors/powershell/functions.rs",
    "src/extractors/powershell/helpers.rs",
    "src/extractors/powershell/identifiers.rs",
    "src/extractors/powershell/imports.rs",
    "src/extractors/powershell/mod.rs",
    "src/extractors/powershell/relationships.rs",
    "src/extractors/powershell/types.rs",
    "src/extractors/powershell/variables.rs",
    "src/extractors/python/assignments.rs",
    "src/extractors/python/decorators.rs",
    "src/extractors/python/functions.rs",
    "src/extractors/python/helpers.rs",
    "src/extractors/python/identifiers.rs",
    "src/extractors/python/imports.rs",
    "src/extractors/python/mod.rs",
    "src/extractors/python/relationships.rs",
    "src/extractors/python/signatures.rs",
    "src/extractors/python/types.rs",
    "src/extractors/razor/csharp.rs",
    "src/extractors/razor/directives.rs",
    "src/extractors/razor/helpers.rs",
    "src/extractors/razor/html.rs",
    "src/extractors/razor/identifiers.rs",
    "src/extractors/razor/mod.rs",
    "src/extractors/razor/relationships.rs",
    "src/extractors/razor/stubs.rs",
    "src/extractors/razor/type_inference.rs",
    "src/extractors/regex/classes.rs",
    "src/extractors/regex/flags.rs",
    "src/extractors/regex/groups.rs",
    "src/extractors/regex/helpers.rs",
    "src/extractors/regex/identifiers.rs",
    "src/extractors/regex/mod.rs",
    "src/extractors/regex/patterns.rs",
    "src/extractors/regex/signatures.rs",
    "src/extractors/ruby/assignments.rs",
    "src/extractors/ruby/calls.rs",
    "src/extractors/ruby/helpers.rs",
    "src/extractors/ruby/identifiers.rs",
    "src/extractors/ruby/mod.rs",
    "src/extractors/ruby/relationships.rs",
    "src/extractors/ruby/signatures.rs",
    "src/extractors/ruby/symbols.rs",
    "src/extractors/rust/functions.rs",
    "src/extractors/rust/helpers.rs",
    "src/extractors/rust/identifiers.rs",
    "src/extractors/rust/mod.rs",
    "src/extractors/rust/relationships.rs",
    "src/extractors/rust/signatures.rs",
    "src/extractors/rust/types.rs",
    "src/extractors/sql/constraints.rs",
    "src/extractors/sql/error_handling.rs",
    "src/extractors/sql/helpers.rs",
    "src/extractors/sql/mod.rs",
    "src/extractors/sql/relationships.rs",
    "src/extractors/sql/routines.rs",
    "src/extractors/sql/schemas.rs",
    "src/extractors/swift/callables.rs",
    "src/extractors/swift/enum_cases.rs",
    "src/extractors/swift/extensions.rs",
    "src/extractors/swift/identifiers.rs",
    "src/extractors/swift/mod.rs",
    "src/extractors/swift/properties.rs",
    "src/extractors/swift/protocol.rs",
    "src/extractors/swift/relationships.rs",
    "src/extractors/swift/signatures.rs",
    "src/extractors/swift/types.rs",
    "src/extractors/typescript/classes.rs",
    "src/extractors/typescript/functions.rs",
    "src/extractors/typescript/helpers.rs",
    "src/extractors/typescript/identifiers.rs",
    "src/extractors/typescript/imports_exports.rs",
    "src/extractors/typescript/inference.rs",
    "src/extractors/typescript/interfaces.rs",
    "src/extractors/typescript/mod.rs",
    "src/extractors/typescript/relationships.rs",
    "src/extractors/typescript/symbols.rs",
    "src/extractors/vue/component.rs",
    "src/extractors/vue/helpers.rs",
    "src/extractors/vue/identifiers.rs",
    "src/extractors/vue/mod.rs",
    "src/extractors/vue/parsing.rs",
    "src/extractors/vue/script.rs",
    "src/extractors/vue/style.rs",
    "src/extractors/vue/template.rs",
    "src/extractors/zig/error_handling.rs",
    "src/extractors/zig/functions.rs",
    "src/extractors/zig/helpers.rs",
    "src/extractors/zig/identifiers.rs",
    "src/extractors/zig/mod.rs",
    "src/extractors/zig/relationships.rs",
    "src/extractors/zig/type_inference.rs",
    "src/extractors/zig/types.rs",
    "src/extractors/zig/variables.rs",
    "src/handler.rs",
    "src/health.rs",
    "src/language.rs",
    "src/lib.rs",
    "src/main.rs",
    "src/startup.rs",
    "src/test_incremental_update.rs",
    "src/tests/cli/codesearch.rs",
    "src/tests/cli/output.rs",
    "src/tests/cli/parallel.rs",
    "src/tests/cli/progress.rs",
    "src/tests/cli/semantic.rs",
    "src/tests/core/database.rs",
    "src/tests/core/embeddings/cross_language.rs",
    "src/tests/core/embeddings/mod.rs",
    "src/tests/core/handler.rs",
    "src/tests/core/language.rs",
    "src/tests/core/tracing.rs",
    "src/tests/core/workspace_init.rs",
    "src/tests/extractors/base.rs",
    "src/tests/extractors/bash/doc_comments.rs",
    "src/tests/extractors/bash/mod.rs",
    "src/tests/extractors/c/advanced.rs",
    "src/tests/extractors/c/basics.rs",
    "src/tests/extractors/c/doxygen_comments.rs",
    "src/tests/extractors/c/identifier_extraction.rs",
    "src/tests/extractors/c/mod.rs",
    "src/tests/extractors/c/pointers.rs",
    "src/tests/extractors/c/preprocessor.rs",
    "src/tests/extractors/c/relationships.rs",
    "src/tests/extractors/cpp/classes.rs",
    "src/tests/extractors/cpp/concurrency.rs",
    "src/tests/extractors/cpp/doxygen_comments.rs",
    "src/tests/extractors/cpp/exceptions.rs",
    "src/tests/extractors/cpp/functions.rs",
    "src/tests/extractors/cpp/identifier_extraction.rs",
    "src/tests/extractors/cpp/mod.rs",
    "src/tests/extractors/cpp/modern.rs",
    "src/tests/extractors/cpp/namespaces.rs",
    "src/tests/extractors/cpp/robustness.rs",
    "src/tests/extractors/cpp/templates.rs",
    "src/tests/extractors/cpp/testing.rs",
    "src/tests/extractors/cpp/types.rs",
    "src/tests/extractors/csharp/core.rs",
    "src/tests/extractors/csharp/extractor.rs",
    "src/tests/extractors/csharp/identifier_extraction.rs",
    "src/tests/extractors/csharp/language_features.rs",
    "src/tests/extractors/csharp/metadata.rs",
    "src/tests/extractors/csharp/mod.rs",
    "src/tests/extractors/csharp/runtime.rs",
    "src/tests/extractors/css/advanced.rs",
    "src/tests/extractors/css/animations.rs",
    "src/tests/extractors/css/at_rules.rs",
    "src/tests/extractors/css/basic.rs",
    "src/tests/extractors/css/custom.rs",
    "src/tests/extractors/css/doc_comments.rs",
    "src/tests/extractors/css/identifier_extraction.rs",
    "src/tests/extractors/css/media_queries.rs",
    "src/tests/extractors/css/mod.rs",
    "src/tests/extractors/css/modern.rs",
    "src/tests/extractors/css/pseudo_elements.rs",
    "src/tests/extractors/css/responsive.rs",
    "src/tests/extractors/css/utilities.rs",
    "src/tests/extractors/dart/extractor.rs",
    "src/tests/extractors/dart/mod.rs",
    "src/tests/extractors/gdscript/classes.rs",
    "src/tests/extractors/gdscript/functions.rs",
    "src/tests/extractors/gdscript/identifier_extraction.rs",
    "src/tests/extractors/gdscript/mod.rs",
    "src/tests/extractors/gdscript/modern.rs",
    "src/tests/extractors/gdscript/patterns.rs",
    "src/tests/extractors/gdscript/resources.rs",
    "src/tests/extractors/gdscript/scenes.rs",
    "src/tests/extractors/gdscript/signals.rs",
    "src/tests/extractors/gdscript/ui.rs",
    "src/tests/extractors/go/mod.rs",
    "src/tests/extractors/html/doc_comments.rs",
    "src/tests/extractors/html/edge_cases.rs",
    "src/tests/extractors/html/forms.rs",
    "src/tests/extractors/html/identifier_extraction.rs",
    "src/tests/extractors/html/media.rs",
    "src/tests/extractors/html/mod.rs",
    "src/tests/extractors/html/script_style.rs",
    "src/tests/extractors/html/structure.rs",
    "src/tests/extractors/java/annotation_tests.rs",
    "src/tests/extractors/java/class_tests.rs",
    "src/tests/extractors/java/extractor.rs",
    "src/tests/extractors/java/generic_tests.rs",
    "src/tests/extractors/java/identifier_extraction.rs",
    "src/tests/extractors/java/interface_tests.rs",
    "src/tests/extractors/java/method_tests.rs",
    "src/tests/extractors/java/mod.rs",
    "src/tests/extractors/java/modern_java_tests.rs",
    "src/tests/extractors/java/package_import_tests.rs",
    "src/tests/extractors/javascript/mod.rs",
    "src/tests/extractors/javascript/relationships.rs",
    "src/tests/extractors/kotlin/mod.rs",
    "src/tests/extractors/lua/classes.rs",
    "src/tests/extractors/lua/control_flow.rs",
    "src/tests/extractors/lua/core.rs",
    "src/tests/extractors/lua/coroutines.rs",
    "src/tests/extractors/lua/doc_comments.rs",
    "src/tests/extractors/lua/error_handling.rs",
    "src/tests/extractors/lua/extractor.rs",
    "src/tests/extractors/lua/file_operations.rs",
    "src/tests/extractors/lua/functions.rs",
    "src/tests/extractors/lua/helpers.rs",
    "src/tests/extractors/lua/identifier_extraction.rs",
    "src/tests/extractors/lua/identifiers.rs",
    "src/tests/extractors/lua/metatables.rs",
    "src/tests/extractors/lua/mod.rs",
    "src/tests/extractors/lua/modules.rs",
    "src/tests/extractors/lua/oop_patterns.rs",
    "src/tests/extractors/lua/relationships.rs",
    "src/tests/extractors/lua/strings.rs",
    "src/tests/extractors/lua/tables.rs",
    "src/tests/extractors/lua/variables.rs",
    "src/tests/extractors/php/mod.rs",
    "src/tests/extractors/powershell/mod.rs",
    "src/tests/extractors/python/assignments.rs",
    "src/tests/extractors/python/decorators.rs",
    "src/tests/extractors/python/extractor.rs",
    "src/tests/extractors/python/functions.rs",
    "src/tests/extractors/python/helpers.rs",
    "src/tests/extractors/python/identifiers.rs",
    "src/tests/extractors/python/imports.rs",
    "src/tests/extractors/python/mod.rs",
    "src/tests/extractors/python/relationships.rs",
    "src/tests/extractors/python/signatures.rs",
    "src/tests/extractors/python/types.rs",
    "src/tests/extractors/razor/mod.rs",
    "src/tests/extractors/razor/relationships.rs",
    "src/tests/extractors/regex/classes.rs",
    "src/tests/extractors/regex/extractor.rs",
    "src/tests/extractors/regex/flags.rs",
    "src/tests/extractors/regex/groups.rs",
    "src/tests/extractors/regex/helpers.rs",
    "src/tests/extractors/regex/identifiers.rs",
    "src/tests/extractors/regex/mod.rs",
    "src/tests/extractors/regex/signatures.rs",
    "src/tests/extractors/ruby/doc_comments.rs",
    "src/tests/extractors/ruby/extractor.rs",
    "src/tests/extractors/ruby/mod.rs",
    "src/tests/extractors/rust/extractor.rs",
    "src/tests/extractors/rust/functions.rs",
    "src/tests/extractors/rust/helpers.rs",
    "src/tests/extractors/rust/identifiers.rs",
    "src/tests/extractors/rust/mod.rs",
    "src/tests/extractors/rust/relationships.rs",
    "src/tests/extractors/rust/signatures.rs",
    "src/tests/extractors/rust/types.rs",
    "src/tests/extractors/sql/ddl.rs",
    "src/tests/extractors/sql/dml.rs",
    "src/tests/extractors/sql/doc_comments.rs",
    "src/tests/extractors/sql/identifier_extraction.rs",
    "src/tests/extractors/sql/indexes.rs",
    "src/tests/extractors/sql/mod.rs",
    "src/tests/extractors/sql/procedures.rs",
    "src/tests/extractors/sql/relationships.rs",
    "src/tests/extractors/sql/schema.rs",
    "src/tests/extractors/sql/security.rs",
    "src/tests/extractors/sql/transactions.rs",
    "src/tests/extractors/swift/mod.rs",
    "src/tests/extractors/typescript/extractor.rs",
    "src/tests/extractors/typescript/functions.rs",
    "src/tests/extractors/typescript/helpers.rs",
    "src/tests/extractors/typescript/identifiers.rs",
    "src/tests/extractors/typescript/imports_exports.rs",
    "src/tests/extractors/typescript/inference.rs",
    "src/tests/extractors/typescript/mod.rs",
    "src/tests/extractors/typescript/relationships.rs",
    "src/tests/extractors/typescript/relative_paths.rs",
    "src/tests/extractors/typescript/symbols.rs",
    "src/tests/extractors/vue/mod.rs",
    "src/tests/extractors/vue/parsing.rs",
    "src/tests/extractors/zig/extractor.rs",
    "src/tests/extractors/zig/mod.rs",
    "src/tests/fixtures/julie_db.rs",
    "src/tests/fixtures/mod.rs",
    "src/tests/helpers/cleanup.rs",
    "src/tests/helpers/mod.rs",
    "src/tests/helpers/workspace.rs",
    "src/tests/integration/bulk_storage_atomicity.rs",
    "src/tests/integration/fts5_integrity.rs",
    "src/tests/integration/fts5_minimal_repro.rs",
    "src/tests/integration/fts5_rowid_corruption.rs",
    "src/tests/integration/fts5_sanitization.rs",
    "src/tests/integration/intelligence_tools.rs",
    "src/tests/integration/lock_contention.rs",
    "src/tests/integration/query_preprocessor_tests.rs",
    "src/tests/integration/real_world_validation.rs",
    "src/tests/integration/reference_workspace.rs",
    "src/tests/integration/search_regression_tests.rs",
    "src/tests/integration/stale_index_detection.rs",
    "src/tests/integration/tracing.rs",
    "src/tests/integration/watcher.rs",
    "src/tests/integration/workspace_isolation_smoke.rs",
    "src/tests/mod.rs",
    "src/tests/test_utils.rs",
    "src/tests/tools/ast_symbol_finder.rs",
    "src/tests/tools/editing/edit_lines.rs",
    "src/tests/tools/editing/fuzzy_replace.rs",
    "src/tests/tools/editing/mod.rs",
    "src/tests/tools/editing/transactional_editing_tests.rs",
    "src/tests/tools/exploration/mod.rs",
    "src/tests/tools/get_symbols.rs",
    "src/tests/tools/get_symbols_reference_workspace.rs",
    "src/tests/tools/get_symbols_relative_paths.rs",
    "src/tests/tools/get_symbols_smart_read.rs",
    "src/tests/tools/get_symbols_target_filtering.rs",
    "src/tests/tools/get_symbols_token.rs",
    "src/tests/tools/navigation/mod.rs",
    "src/tests/tools/refactoring/ast_aware.rs",
    "src/tests/tools/refactoring/edit_symbol.rs",
    "src/tests/tools/refactoring/extract_to_file_tests.rs",
    "src/tests/tools/refactoring/import_update_tests.rs",
    "src/tests/tools/refactoring/insert_relative_tests.rs",
    "src/tests/tools/refactoring/mod.rs",
    "src/tests/tools/refactoring/rename_symbol.rs",
    "src/tests/tools/refactoring/replace_symbol_body_tests.rs",
    "src/tests/tools/refactoring/scope_test.rs",
    "src/tests/tools/refactoring/smart_refactor.rs",
    "src/tests/tools/refactoring/smart_refactor_control.rs",
    "src/tests/tools/search/line_mode.rs",
    "src/tests/tools/search/mod.rs",
    "src/tests/tools/search/primary_workspace_bug.rs",
    "src/tests/tools/search/quality.rs",
    "src/tests/tools/search/race_condition.rs",
    "src/tests/tools/search/semantic_scoring_tests.rs",
    "src/tests/tools/search/tools.rs",
    "src/tests/tools/search_context_lines.rs",
    "src/tests/tools/search_quality/dogfood_tests.rs",
    "src/tests/tools/search_quality/helpers.rs",
    "src/tests/tools/search_quality/mod.rs",
    "src/tests/tools/smart_read.rs",
    "src/tests/tools/trace_call_path/comprehensive.rs",
    "src/tests/tools/trace_call_path/mod.rs",
    "src/tests/tools/trace_call_path/new_features.rs",
    "src/tests/tools/trace_call_path/workspace_isolation.rs",
    "src/tests/tools/workspace/isolation.rs",
    "src/tests/tools/workspace/management_token.rs",
    "src/tests/tools/workspace/mod_tests.rs",
    "src/tests/tools/workspace/registry.rs",
    "src/tests/tools/workspace/registry_service.rs",
    "src/tests/tools/workspace/utils.rs",
    "src/tests/utils/context_truncation.rs",
    "src/tests/utils/cross_language_intelligence.rs",
    "src/tests/utils/exact_match_boost/mod.rs",
    "src/tests/utils/exact_match_boost/tests.rs",
    "src/tests/utils/file_utils.rs",
    "src/tests/utils/path_relevance/mod.rs",
    "src/tests/utils/path_relevance/tests.rs",
    "src/tests/utils/progressive_reduction.rs",
    "src/tests/utils/query_expansion.rs",
    "src/tests/utils/token_estimation.rs",
    "src/tests/utils/utf8_boundary_safety.rs",
    "src/tests/utils/utf8_truncation.rs",
    "src/tools/ast_symbol_finder.rs",
    "src/tools/edit_lines.rs",
    "src/tools/editing.rs",
    "src/tools/exploration/find_logic/mod.rs",
    "src/tools/exploration/find_logic/search.rs",
    "src/tools/exploration/mod.rs",
    "src/tools/exploration/types.rs",
    "src/tools/fuzzy_replace.rs",
    "src/tools/mod.rs",
    "src/tools/navigation/fast_goto.rs",
    "src/tools/navigation/fast_refs.rs",
    "src/tools/navigation/mod.rs",
    "src/tools/navigation/reference_workspace.rs",
    "src/tools/navigation/resolution.rs",
    "src/tools/navigation/semantic_matching.rs",
    "src/tools/navigation/types.rs",
    "src/tools/refactoring/helpers.rs",
    "src/tools/refactoring/indentation.rs",
    "src/tools/refactoring/mod.rs",
    "src/tools/refactoring/operations.rs",
    "src/tools/refactoring/rename.rs",
    "src/tools/refactoring/types.rs",
    "src/tools/refactoring/utils.rs",
    "src/tools/search/formatting.rs",
    "src/tools/search/hybrid_search.rs",
    "src/tools/search/line_mode.rs",
    "src/tools/search/mod.rs",
    "src/tools/search/query.rs",
    "src/tools/search/query_preprocessor.rs",
    "src/tools/search/scoring.rs",
    "src/tools/search/semantic_search.rs",
    "src/tools/search/text_search.rs",
    "src/tools/search/types.rs",
    "src/tools/shared.rs",
    "src/tools/symbols.rs",
    "src/tools/trace_call_path.rs",
    "src/tools/workspace/commands/index.rs",
    "src/tools/workspace/commands/mod.rs",
    "src/tools/workspace/commands/registry.rs",
    "src/tools/workspace/discovery.rs",
    "src/tools/workspace/indexing/embeddings.rs",
    "src/tools/workspace/indexing/extractor.rs",
    "src/tools/workspace/indexing/incremental.rs",
    "src/tools/workspace/indexing/index.rs",
    "src/tools/workspace/indexing/mod.rs",
    "src/tools/workspace/indexing/processor.rs",
    "src/tools/workspace/language.rs",
    "src/tools/workspace/mod.rs",
    "src/tools/workspace/parser_pool.rs",
    "src/tools/workspace/paths.rs",
    "src/tools/workspace/utils.rs",
    "src/tracing/mod.rs",
    "src/utils/context_truncation.rs",
    "src/utils/cross_language_intelligence.rs",
    "src/utils/exact_match_boost.rs",
    "src/utils/mod.rs",
    "src/utils/path_relevance.rs",
    "src/utils/paths.rs",
    "src/utils/progressive_reduction.rs",
    "src/utils/query_expansion.rs",
    "src/utils/string_similarity.rs",
    "src/utils/token_estimation.rs",
    "src/watcher/mod.rs",
    "src/workspace/mod.rs",
    "src/workspace/registry.rs",
    "src/workspace/registry_service.rs",
    "tarpaulin.toml"
  ],
  "known_symbols": {
    "src/tools/navigation/resolution.rs": [
      "JulieServerHandler",
      "Result",
      "Symbol",
      "SymbolKind",
      "WorkspaceRegistryService",
      "compare_symbols_by_priority_and_context",
      "definition_priority",
      "resolve_workspace_filter"
    ],
    "fixtures/editing/sources/refactor_source.ts": [
      "./logger",
      "Anonymous",
      "DEFAULT_ROLES",
      "Permission",
      "Permission",
      "Role",
      "Role",
      "User",
      "User",
      "UserService",
      "UserService",
      "action",
      "cache",
      "constructor",
      "createUser",
      "createdAt",
      "delay",
      "email",
      "emailRegex",
      "existingUser",
      "export",
      "fetchUserFromDatabase",
      "findUserById",
      "generateId",
      "hasPermission",
      "id",
      "id",
      "logger",
      "name",
      "name",
      "permissions",
      "resource",
      "roles",
      "saveUserToDatabase",
      "updateUser",
      "updatedUser",
      "user",
      "user",
      "validateEmail",
      "validateEmail"
    ],
    "fixtures/real-world/ruby/main.rb": [
      "@value",
      "@value",
      "Calculator",
      "DemoClass",
      "DemoClass",
      "DemoClass",
      "UnknownClass",
      "demo",
      "helper_function",
      "initialize",
      "lib.rb",
      "print_value",
      "value"
    ],
    "src/extractors/php/members.rs": [
      "HashMap",
      "Node",
      "extract_constant",
      "extract_property",
      "extract_property_value",
      "find_type_node"
    ],
    "src/tests/utils/utf8_truncation.rs": [
      "BaseExtractor",
      "test_truncate_string_preserves_multibyte_chars",
      "test_truncate_string_with_emoji",
      "test_truncate_string_with_utf8",
      "tests"
    ],
    "src/tests/tools/refactoring/smart_refactor.rs": [
      "CallToolResult",
      "JulieServerHandler",
      "RefactoringTestFixture",
      "Result",
      "SmartRefactorTool",
      "TempDir",
      "create_test_file",
      "extract_function_tests",
      "extract_text_from_result",
      "fs",
      "integration_tests",
      "new",
      "operation_validation_tests",
      "read_file",
      "rename_symbol_tests",
      "test_end_to_end_rename_workflow_with_real_files",
      "test_extract_function_not_implemented",
      "test_multiple_file_rename_workflow",
      "test_rename_symbol_basic_functionality",
      "test_rename_symbol_dry_run",
      "test_rename_symbol_invalid_json",
      "test_rename_symbol_missing_parameters",
      "test_rename_symbol_no_references_found",
      "test_tool_creation_and_serialization",
      "test_unsupported_operation"
    ],
    "src/tests/integration/stale_index_detection.rs": [
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "Result",
      "TempDir",
      "create_test_handler",
      "fs",
      "index_workspace",
      "test_empty_database_needs_indexing",
      "test_fresh_index_no_reindex_needed",
      "test_multiple_stale_files",
      "test_new_file_not_in_database",
      "test_stale_index_file_modified_after_db"
    ],
    "src/tests/extractors/lua/identifier_extraction.rs": [
      "IdentifierKind",
      "LuaExtractor",
      "PathBuf",
      "PathBuf",
      "identifier_extraction_tests",
      "init_parser",
      "test_lua_chained_member_access",
      "test_lua_duplicate_calls_at_different_locations",
      "test_lua_function_calls",
      "test_lua_identifiers_have_containing_symbol",
      "test_lua_member_access"
    ],
    "src/extractors/razor/html.rs": [
      "HashMap",
      "Node",
      "create_external_component_symbols_if_needed",
      "extract_binding_attributes_from_element",
      "extract_component",
      "extract_component_name",
      "extract_component_parameters",
      "extract_html_attribute",
      "extract_html_attributes",
      "extract_html_element",
      "extract_html_tag_name",
      "extract_html_tag_name_from_node",
      "extract_razor_attribute"
    ],
    "fixtures/editing/controls/fast-edit/simple_function_rename.rs": [
      "HashMap",
      "fetch_user_info",
      "test_fetch_user_info",
      "tests"
    ],
    "fixtures/test-workspaces/tiny-reference/src/helper.rs": [
      "calculate_product",
      "format_greeting",
      "reference_marker_function"
    ],
    "src/tests/extractors/html/script_style.rs": [
      "script_style_tests",
      "test_extract_external_script_and_style_references",
      "test_extract_inline_script_tags",
      "test_extract_inline_style_tags",
      "test_extract_mixed_script_and_style_content"
    ],
    "src/extractors/regex/signatures.rs": [
      "BaseExtractor",
      "build_alternation_signature",
      "build_anchor_signature",
      "build_atomic_group_signature",
      "build_backreference_signature",
      "build_character_class_signature",
      "build_conditional_signature",
      "build_generic_signature",
      "build_group_signature",
      "build_literal_signature",
      "build_lookaround_signature",
      "build_pattern_signature",
      "build_predefined_class_signature",
      "build_quantifier_signature",
      "build_unicode_property_signature",
      "groups"
    ],
    "src/tests/tools/editing/edit_lines.rs": [
      "EditLinesTool",
      "EditLinesTool",
      "EditLinesTool",
      "EditLinesTool",
      "EditLinesTool",
      "EditLinesTool",
      "EditLinesTool",
      "EditLinesTool",
      "EditLinesTool",
      "EditLinesTool",
      "JulieServerHandler",
      "JulieServerHandler",
      "JulieServerHandler",
      "JulieServerHandler",
      "JulieServerHandler",
      "JulieServerHandler",
      "JulieServerHandler",
      "JulieServerHandler",
      "JulieServerHandler",
      "JulieServerHandler",
      "PathBuf",
      "Result",
      "TempDir",
      "create_unique_test_workspace",
      "edit_lines_tests",
      "fs",
      "load_control_file",
      "setup_test_file",
      "symlink",
      "test_edit_lines_delete_comment",
      "test_edit_lines_dry_run",
      "test_edit_lines_insert_import",
      "test_edit_lines_preserves_crlf_line_endings",
      "test_edit_lines_relative_path_uses_workspace_root",
      "test_edit_lines_replace_function",
      "test_path_traversal_prevention_absolute_path",
      "test_path_traversal_prevention_relative_traversal",
      "test_path_traversal_prevention_symlink_outside_workspace",
      "test_secure_path_resolution_valid_paths",
      "verify_exact_match"
    ],
    "src/database/symbols/mod.rs": [
      "bulk",
      "queries",
      "search",
      "storage"
    ],
    "src/tests/tools/search_quality/mod.rs": [
      "dogfood_tests",
      "helpers"
    ],
    "src/tools/search/line_mode.rs": [
      "JulieServerHandler",
      "Result",
      "collect_line_matches",
      "debug",
      "line_mode_search"
    ],
    "src/watcher/mod.rs": [
      "EmbeddingEngine",
      "ExtractorManager",
      "FileChangeEvent",
      "FileChangeType",
      "IncrementalIndexer",
      "IndexingStats",
      "RwLock",
      "StdMutex}",
      "SymbolDatabase",
      "SystemTime",
      "TokioMutex}",
      "VectorIndex",
      "build_ignore_patterns",
      "build_supported_extensions",
      "detect_language",
      "detect_language_by_extension",
      "detect_language_static",
      "handle_file_change",
      "handle_file_change_static",
      "handle_file_created_or_modified",
      "handle_file_created_or_modified_static",
      "handle_file_deleted",
      "handle_file_deleted_static",
      "handle_file_renamed",
      "handle_file_renamed_static",
      "hex",
      "new",
      "process_file_system_event_static",
      "process_pending_changes",
      "process_queue",
      "queue_file_change",
      "queue_file_change_static",
      "should_index_file",
      "should_index_file_static",
      "start_watching",
      "stop"
    ],
    "src/extractors/typescript/identifiers.rs": [
      "HashMap",
      "TypeScriptExtractor",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/tools/refactoring/mod.rs": [
      "DOC_COMMENT_LOOKBACK_BYTES",
      "DiffMatchPatch",
      "EditOperation",
      "EditSymbolTool",
      "EditingTransaction",
      "JsonSchema",
      "JulieServerHandler",
      "Parser",
      "RenameSymbolTool",
      "Result",
      "SmartRefactorTool",
      "TOP_OF_SCOPE_COMMENT_LINE_WINDOW",
      "ast_aware_replace",
      "call_tool",
      "call_tool",
      "call_tool",
      "collect_identifier_replacements",
      "create_result",
      "default_dry_run",
      "default_empty_json",
      "find_symbols_via_search",
      "find_symbols_via_treesitter",
      "fs",
      "get_tree_sitter_language",
      "helpers",
      "indentation",
      "mcp_tool",
      "operations",
      "rename",
      "rename_in_file",
      "smart_text_replace",
      "types",
      "utils"
    ],
    "src/extractors/javascript/functions.rs": [
      "HashMap",
      "Node",
      "extract_function",
      "extract_method",
      "json"
    ],
    "fixtures/editing/controls/refactor/rename_userservice_to_accountservice.ts": [
      "./logger",
      "AccountService",
      "AccountService",
      "Anonymous",
      "DEFAULT_ROLES",
      "Permission",
      "Permission",
      "Role",
      "Role",
      "User",
      "User",
      "action",
      "cache",
      "constructor",
      "createUser",
      "createdAt",
      "delay",
      "email",
      "emailRegex",
      "existingUser",
      "export",
      "fetchUserFromDatabase",
      "findUserById",
      "generateId",
      "hasPermission",
      "id",
      "id",
      "logger",
      "name",
      "name",
      "permissions",
      "resource",
      "roles",
      "saveUserToDatabase",
      "updateUser",
      "updatedUser",
      "user",
      "user",
      "validateEmail",
      "validateEmail"
    ],
    "src/tools/search/types.rs": [
      "LineMatch",
      "LineMatchStrategy"
    ],
    "fixtures/editing/sources/line_edit_base.py": [
      "calculate_sum",
      "data",
      "main",
      "result",
      "total"
    ],
    "src/tests/extractors/java/package_import_tests.rs": [
      "PathBuf",
      "package_import_tests",
      "test_extract_import_statements",
      "test_extract_package_declarations"
    ],
    "src/cli/parallel.rs": [
      "ExtractionConfig",
      "ExtractorManager",
      "ParallelExtractor",
      "PathBuf",
      "Symbol",
      "SymbolDatabase",
      "WalkDir",
      "default",
      "discover_files",
      "extract_directory",
      "extract_file",
      "extract_file_sync",
      "extract_identifiers_sync",
      "is_supported_extension",
      "new"
    ],
    "src/tests/extractors/lua/modules.rs": [
      "PathBuf",
      "PathBuf",
      "test_modules_and_require_system",
      "tests"
    ],
    "src/tests/extractors/regex/mod.rs": [
      "IdentifierKind",
      "PathBuf",
      "RegexExtractor",
      "classes",
      "doc_comment_tests",
      "extract_identifiers",
      "extract_symbols",
      "extractor",
      "flags",
      "groups",
      "helpers",
      "identifier_extraction_tests",
      "identifiers",
      "init_parser",
      "signatures",
      "test_extract_alternation",
      "test_extract_alternation_with_doc_comment",
      "test_extract_anchor_with_doc_comment",
      "test_extract_backreference_with_doc_comment",
      "test_extract_character_class_with_doc_comment",
      "test_extract_group_with_doc_comment",
      "test_extract_groups",
      "test_extract_lookahead_with_doc_comment",
      "test_extract_pattern_with_doc_comment",
      "test_extract_predefined_classes",
      "test_extract_quantifier_with_doc_comment",
      "test_extract_quantifiers",
      "test_extract_simple_patterns",
      "test_regex_chained_member_access",
      "test_regex_duplicate_calls_at_different_locations",
      "test_regex_function_calls",
      "test_regex_identifiers_have_containing_symbol",
      "test_regex_member_access",
      "test_symbol_metadata",
      "tests"
    ],
    "src/extractors/gdscript/types.rs": [
      "BaseExtractor",
      "Node",
      "extract_variable_type",
      "find_child_by_type",
      "infer_type_from_expression"
    ],
    "src/extractors/cpp/type_inference.rs": [
      "HashMap",
      "infer_function_return_type",
      "infer_types",
      "infer_variable_type"
    ],
    "src/tests/extractors/sql/procedures.rs": [
      "test_extract_stored_procedures_functions_and_triggers",
      "tests"
    ],
    "fixtures/editing/sources/ast_refactor_test.ts": [
      "Anonymous",
      "UserService",
      "UserService",
      "UserService",
      "constructor",
      "createUserService",
      "getUser",
      "getUserServiceStatus",
      "result",
      "userData",
      "userService"
    ],
    "fixtures/editing/sources/simple_function.rs": [
      "HashMap",
      "get_user_data",
      "test_get_user_data",
      "tests"
    ],
    "src/extractors/css/at_rules.rs": [
      "AtRuleExtractor",
      "HashMap",
      "Node",
      "extract_at_rule",
      "extract_at_rule_name"
    ],
    "src/tests/extractors/cpp/templates.rs": [
      "test_extract_inheritance_and_template_relationships",
      "test_extract_template_classes_and_functions",
      "test_extract_variadic_templates_sfinae_and_template_metaprogramming",
      "test_handle_large_cpp_codebases_with_complex_templates_efficiently",
      "tests"
    ],
    "src/workspace/mod.rs": [
      "Arc",
      "EmbeddingStore",
      "IncrementalIndexer",
      "JulieWorkspace",
      "RwLock",
      "SqliteDB",
      "VectorIndex",
      "WorkspaceConfig",
      "WorkspaceHealth",
      "cache_path",
      "check_disk_space",
      "check_permissions",
      "clone",
      "create_folder_structure",
      "db_path",
      "default",
      "detect_and_load",
      "find_workspace_root",
      "fs",
      "health_check",
      "indexes_root_path",
      "initialize",
      "initialize_all_components",
      "initialize_database",
      "initialize_embeddings",
      "initialize_file_watcher",
      "initialize_vector_store",
      "is_healthy",
      "load_config",
      "models_path",
      "new",
      "registry",
      "registry_service",
      "save_config",
      "start_file_watching",
      "validate_structure",
      "workspace_db_path",
      "workspace_index_path",
      "workspace_vectors_path"
    ],
    "src/extractors/zig/type_inference.rs": [
      "HashMap",
      "LazyLock",
      "Regex",
      "Symbol",
      "SymbolKind",
      "ZIG_TYPE_RE",
      "infer_types"
    ],
    "src/tools/workspace/commands/mod.rs": [
      "CallToolResult",
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "Result",
      "WorkspaceCommand",
      "call_tool",
      "index",
      "info",
      "registry"
    ],
    "src/tests/helpers/workspace.rs": [
      "PathBuf",
      "Result",
      "TempDir",
      "create_unique_test_workspace",
      "get_fixture_path"
    ],
    "src/extractors/rust/identifiers.rs": [
      "HashMap",
      "RustExtractor",
      "Tree",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "fixtures/real-world/zig/memory_allocator.zig": [
      "Allocator",
      "ArenaAllocator",
      "ArrayList",
      "BufNode",
      "Node",
      "Point",
      "PoolAllocator",
      "Self",
      "Self",
      "Self",
      "Self",
      "StackAllocator",
      "T",
      "T",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "aligned_len",
      "aligned_len",
      "aligned_len",
      "aligned_len",
      "aligned_len",
      "aligned_pos",
      "alloc",
      "alloc",
      "alloc",
      "alloc",
      "alloc",
      "allocFn",
      "allocated",
      "allocated_items",
      "allocator",
      "allocator",
      "allocator",
      "allocator",
      "allocator",
      "allocator",
      "allocator_type",
      "append",
      "arena",
      "arena",
      "arena allocator",
      "arena_alloc",
      "assert",
      "available",
      "backing_allocator",
      "backing_allocator",
      "backing_allocator",
      "backing_allocator",
      "buf",
      "buf",
      "buf",
      "buf",
      "buf",
      "buf1",
      "buf2",
      "buf_align",
      "buf_align",
      "buf_align",
      "buf_align",
      "buf_align",
      "buf_start",
      "buf_start",
      "buffer",
      "buffer1",
      "buffer2",
      "buffer_list",
      "buffer_size",
      "buffer_start",
      "buffer_start",
      "bytes_allocated",
      "capacity",
      "data",
      "data",
      "default_buffer_size",
      "deinit",
      "deinit",
      "deinit",
      "distance",
      "dx",
      "dy",
      "end_index",
      "ensureCapacity",
      "final_stats",
      "free",
      "free",
      "free",
      "freeFn",
      "free_list",
      "getBytesRemaining",
      "getBytesUsed",
      "getStats",
      "getTotalBytesAllocated",
      "gpa",
      "init",
      "init",
      "init",
      "init",
      "init",
      "item",
      "item",
      "item",
      "item",
      "item1",
      "item2",
      "items",
      "len",
      "len",
      "len",
      "list",
      "main",
      "maybe_node",
      "maybe_node",
      "new_buf",
      "new_buffer_size",
      "new_cap",
      "new_cap",
      "new_capacity",
      "new_len",
      "new_len",
      "new_memory",
      "new_node",
      "new_node",
      "next",
      "next",
      "next",
      "node_addr",
      "node_ptr",
      "node_ptr",
      "offset",
      "offset",
      "offset",
      "other",
      "points",
      "pool",
      "pool",
      "pool",
      "pool",
      "pool allocator basic operations",
      "pool_alloc",
      "pool_end",
      "pool_size",
      "pool_start",
      "pop",
      "pos",
      "ptr",
      "ptr",
      "ptr",
      "ptr",
      "ptr",
      "ptr",
      "ptr",
      "ptr",
      "ptr_align",
      "ptr_align",
      "ptr_align",
      "remaining",
      "reset",
      "resize",
      "resize",
      "result",
      "result",
      "ret_addr",
      "ret_addr",
      "ret_addr",
      "ret_addr",
      "ret_addr",
      "ret_addr",
      "ret_addr",
      "ret_addr",
      "s",
      "s",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "self",
      "slice1",
      "slice2",
      "stack",
      "stack",
      "stack allocator LIFO behavior",
      "stack_alloc",
      "stats",
      "stats",
      "std",
      "sum",
      "testing",
      "toSlice",
      "total",
      "total_items",
      "x",
      "x",
      "y",
      "y"
    ],
    "src/tests/extractors/python/signatures.rs": [
      "Visibility",
      "signatures",
      "test_infer_visibility_dunder",
      "test_infer_visibility_private",
      "test_infer_visibility_public"
    ],
    "src/tests/extractors/swift/mod.rs": [
      "IdentifierKind",
      "PathBuf",
      "SwiftExtractor",
      "Tree",
      "class_and_struct_extraction",
      "closures_and_function_types",
      "create_extractor_and_parse",
      "doc_comment_extraction",
      "enum_and_associated_values",
      "generics_and_type_constraints",
      "identifier_extraction",
      "property_wrappers_and_attributes",
      "protocol_and_extension_extraction",
      "swift_extractor_tests",
      "test_chained_member_access",
      "test_extract_class_with_single_line_doc_comment",
      "test_extract_classes_structs_and_their_members",
      "test_extract_closures_and_function_type_properties",
      "test_extract_enum_with_doc_comment",
      "test_extract_enums_with_cases_and_associated_values",
      "test_extract_function_calls",
      "test_extract_function_with_block_doc_comment",
      "test_extract_generic_types_and_functions_with_constraints",
      "test_extract_inheritance_and_protocol_conformance_relationships",
      "test_extract_member_access",
      "test_extract_method_with_doc_comment",
      "test_extract_property_wrappers_and_compiler_attributes",
      "test_extract_protocol_with_doc_comment",
      "test_extract_protocols_extensions_and_conformances",
      "test_extract_struct_with_doc_comment",
      "test_file_scoped_containing_symbol",
      "test_infer_types_from_swift_type_annotations_and_declarations",
      "test_no_duplicate_identifiers",
      "type_inference_and_relationships"
    ],
    "src/extractors/css/identifiers.rs": [
      "HashMap",
      "IdentifierExtractor",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/extractors/razor/relationships.rs": [
      "HashMap",
      "Node",
      "extract_component_relationships",
      "extract_element_relationships",
      "extract_first_string_literal",
      "extract_identifier_component_relationships",
      "extract_invocation_relationships",
      "extract_relationships",
      "extract_using_relationships",
      "find_component_target_for_invocation",
      "find_invocation_symbol",
      "is_component_symbol",
      "is_invocation_symbol",
      "resolve_calling_symbol",
      "symbol_type",
      "trim_quotes",
      "visit_relationships"
    ],
    "src/tests/extractors/javascript/mod.rs": [
      "IdentifierKind",
      "JavaScriptExtractor",
      "Parser",
      "PathBuf",
      "error_handling_and_strict_mode",
      "hoisting_and_scoping",
      "identifier_extraction",
      "init_parser",
      "javascript_extractor_tests",
      "jsdoc_comment_extraction",
      "legacy_javascript_patterns",
      "modern_javascript_features",
      "modern_modules_and_destructuring",
      "nodejs_and_browser_apis",
      "relationships",
      "test_chained_member_access",
      "test_extract_commonjs_modules_require_statements_and_global_apis",
      "test_extract_destructuring_rest_spread_and_template_literals",
      "test_extract_es6_plus_features",
      "test_extract_function_calls",
      "test_extract_function_declarations_prototypes_and_iife",
      "test_extract_member_access",
      "test_extract_try_catch_blocks_error_classes_and_strict_mode_indicators",
      "test_file_scoped_containing_symbol",
      "test_handle_var_hoisting_let_const_block_scope_and_function_hoisting",
      "test_jsdoc_class_comment",
      "test_jsdoc_function_comment",
      "test_jsdoc_import_statement",
      "test_jsdoc_multiple_comments",
      "test_jsdoc_property_comment",
      "test_jsdoc_with_no_comment",
      "test_no_duplicate_identifiers"
    ],
    "src/extractors/lua/identifiers.rs": [
      "HashMap",
      "LuaExtractor",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_containing_symbol_id",
      "helpers",
      "walk_tree_for_identifiers"
    ],
    "src/tests/extractors/python/extractor.rs": [
      "PathBuf",
      "PythonExtractor",
      "Visibility",
      "helpers",
      "signatures",
      "signatures",
      "signatures",
      "test_decorator_extraction",
      "test_extract_assignment_placeholder",
      "test_extract_identifiers_placeholder",
      "test_extract_imports_placeholder",
      "test_infer_visibility_dunder",
      "test_infer_visibility_private",
      "test_infer_visibility_public",
      "test_is_inside_enum_class",
      "test_python_extractor_initialization",
      "test_strip_string_delimiters_double",
      "test_strip_string_delimiters_no_delimiters",
      "test_strip_string_delimiters_single",
      "test_strip_string_delimiters_triple_double",
      "test_strip_string_delimiters_triple_single"
    ],
    "src/database/symbols/storage.rs": [
      "Result",
      "debug",
      "delete_symbols_for_file",
      "delete_symbols_for_file_in_workspace",
      "params",
      "store_symbols",
      "store_symbols_transactional"
    ],
    "fixtures/editing/controls/auto-fix/multi_element_array.js": [
      "colors"
    ],
    "src/extractors/dart/helpers.rs": [
      "Node",
      "RefCell",
      "check_node_for_override_annotation",
      "find_child_by_type",
      "find_override_annotation_in_subtree",
      "get_node_text",
      "is_abstract_class",
      "is_async_function",
      "is_const_constructor",
      "is_const_variable",
      "is_factory_constructor",
      "is_final_variable",
      "is_flutter_lifecycle_method",
      "is_flutter_widget",
      "is_override_method",
      "is_static_method",
      "set_dart_content_cache",
      "traverse_tree"
    ],
    "src/extractors/vue/component.rs": [
      "VueSection",
      "extract_component_name"
    ],
    "src/tools/workspace/indexing/index.rs": [
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "Path",
      "Result",
      "generate_embeddings_from_sqlite",
      "index_workspace_files"
    ],
    "src/tests/extractors/sql/dml.rs": [
      "extract_symbols",
      "test_extract_complex_queries_and_ctes",
      "tests"
    ],
    "src/tools/refactoring/indentation.rs": [
      "apply_indentation",
      "detect_min_indentation",
      "normalize_indentation",
      "reindent",
      "test_apply_indentation",
      "test_detect_min_indentation",
      "test_empty_lines_preserved",
      "test_normalize_indentation",
      "test_reindent_complete_pipeline",
      "tests"
    ],
    "fixtures/real-world/powershell/system-health-check.ps1": [
      "COMPUTERNAME",
      "COMPUTERNAME",
      "ErrorCount",
      "Get-Date",
      "Get-Date",
      "Get-Date",
      "Get-Date",
      "Get-Service",
      "Get-WmiObject",
      "Get-WmiObject",
      "Get-WmiObject",
      "HealthResults",
      "Invoke-HealthCheck",
      "Level",
      "Message",
      "New-HealthReport",
      "New-HealthReport",
      "New-Item",
      "Results",
      "Test-CriticalServices",
      "Test-DiskSpace",
      "Test-MemoryUsage",
      "Test-NetworkConnectivity",
      "USERNAME",
      "WarningCount",
      "Write-HealthLog",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "_",
      "availableMemory",
      "availableMemoryGB",
      "criticalServices",
      "disks",
      "freeSpaceGB",
      "healthResults",
      "logEntry",
      "memory",
      "networkResults",
      "networkResults",
      "pingResult",
      "results",
      "results.DiskSpace",
      "results.Memory",
      "results.Network",
      "results.Services",
      "service",
      "serviceResults",
      "serviceResults",
      "summary",
      "summary",
      "testHosts",
      "timestamp",
      "totalMemoryGB",
      "totalSpaceGB",
      "usedMemoryPercent"
    ],
    "src/extractors/sql/schemas.rs": [
      "HashMap",
      "Node",
      "Value",
      "extract_cte",
      "extract_domain",
      "extract_index",
      "extract_schema",
      "extract_sequence",
      "extract_table_definition",
      "extract_table_signature",
      "extract_trigger",
      "extract_type",
      "extract_view"
    ],
    "src/tools/search/semantic_search.rs": [
      "GENERIC_NAMES",
      "JulieServerHandler",
      "Result",
      "Symbol",
      "SymbolKind",
      "SymbolKind",
      "WorkspaceRegistryService",
      "WorkspaceRegistryService",
      "apply_all_boosts",
      "get_doc_comment_boost",
      "get_generic_penalty",
      "get_language_quality_boost",
      "get_symbol_kind_boost",
      "is_generic_symbol",
      "is_html_element",
      "is_vendor_symbol",
      "matches_glob_pattern",
      "semantic_search_impl"
    ],
    "src/extractors/gdscript/signals.rs": [
      "Node",
      "extract_signal_statement",
      "find_child_by_type"
    ],
    "src/extractors/java/types.rs": [
      "FIELD_MODIFIER_RE",
      "FIELD_TYPE_RE",
      "HashMap",
      "JavaExtractor",
      "LazyLock",
      "METHOD_MODIFIER_RE",
      "METHOD_RETURN_TYPE_RE",
      "Regex",
      "infer_types"
    ],
    "docs/ARCHITECTURE.md": [],
    "src/tests/tools/navigation/mod.rs": [
      "HashMap",
      "SymbolKind",
      "SymbolKind",
      "SymbolKind",
      "Visibility",
      "Visibility",
      "Visibility",
      "navigation_tools_tests",
      "test_fast_goto_large_codebase_needs_reduction",
      "test_fast_goto_respects_token_limits_with_context",
      "test_fast_goto_short_response_unchanged",
      "test_fast_refs_large_response_needs_reduction",
      "test_fast_refs_respects_token_limits",
      "test_fast_refs_short_response_unchanged",
      "test_reference_workspace_semantic_search_function_exists",
      "test_semantic_search_fallback_for_reference_workspaces",
      "test_semantic_search_fallback_for_references_in_reference_workspaces",
      "test_semantic_search_fallback_logic"
    ],
    "src/tests/extractors/dart/mod.rs": [
      "DartExtractor",
      "IdentifierKind",
      "Parser",
      "PathBuf",
      "SymbolKind",
      "annotations_and_metadata",
      "async_await_and_futures",
      "classes_and_constructors",
      "dart_extractor_tests",
      "doc_comments",
      "enums_and_functions",
      "error_handling_and_exceptions",
      "extractor",
      "flutter_widget_patterns",
      "identifier_extraction",
      "init_parser",
      "isolates_and_concurrency",
      "mixins_and_extensions",
      "streams_and_reactive_patterns",
      "test_dart_chained_member_access",
      "test_dart_duplicate_calls_at_different_locations",
      "test_dart_function_calls",
      "test_dart_identifiers_have_containing_symbol",
      "test_dart_member_access",
      "test_extract_annotations_and_metadata",
      "test_extract_async_functions_and_futures",
      "test_extract_class_with_single_line_dartdoc",
      "test_extract_classes_with_various_constructor_types",
      "test_extract_constructor_with_dartdoc",
      "test_extract_enums_and_top_level_functions",
      "test_extract_exception_handling_patterns",
      "test_extract_flutter_widget_classes_and_methods",
      "test_extract_function_with_block_dartdoc",
      "test_extract_isolates_and_concurrent_patterns",
      "test_extract_method_with_dartdoc",
      "test_extract_mixins_and_extensions",
      "test_extract_property_with_dartdoc",
      "test_extract_streams_and_rx_patterns",
      "test_infer_types_and_extract_relationships",
      "type_inference_and_relationships"
    ],
    "src/extractors/go/mod.rs": [
      "GoExtractor",
      "HashMap",
      "build_symbol_map",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbol",
      "extract_symbols",
      "functions",
      "helpers",
      "identifiers",
      "infer_types",
      "new",
      "prioritize_functions_over_fields",
      "relationships",
      "signatures",
      "specs",
      "types",
      "walk_tree"
    ],
    "src/extractors/powershell/commands.rs": [
      "Node",
      "Regex",
      "extract_command",
      "extract_command_signature",
      "extract_configuration_from_error",
      "extract_dsc_configuration",
      "extract_function_from_error",
      "find_command_name_node",
      "get_command_documentation"
    ],
    "src/tools/edit_lines.rs": [
      "CallToolResult",
      "EditLinesTool",
      "EditingTransaction",
      "JulieServerHandler",
      "PathBuf",
      "call_tool",
      "create_result",
      "default_dry_run",
      "detect_line_ending",
      "normalize_input_lines",
      "perform_delete",
      "perform_insert",
      "perform_replace",
      "resolve_file_path",
      "secure_path_resolution",
      "validate"
    ],
    "src/extractors/javascript/assignments.rs": [
      "HashMap",
      "Node",
      "extract_assignment",
      "json"
    ],
    "src/tests/extractors/vue/mod.rs": [
      "IdentifierKind",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "SymbolKind",
      "VueExtractor",
      "VueExtractor",
      "create_extractor",
      "parsing",
      "test_extract_relationships_returns_empty_array",
      "test_extract_script_section_symbols",
      "test_extract_style_symbols",
      "test_extract_template_symbols",
      "test_extract_vue_component_symbol",
      "test_extract_vue_css_comment_from_style",
      "test_extract_vue_html_comment_from_component",
      "test_extract_vue_jsdoc_from_computed_property",
      "test_extract_vue_jsdoc_from_data_function",
      "test_extract_vue_jsdoc_from_individual_methods",
      "test_extract_vue_jsdoc_from_props",
      "test_extract_vue_jsdoc_from_script_methods",
      "test_extract_vue_multiline_jsdoc",
      "test_handle_complex_sfc_with_all_sections",
      "test_handle_named_components",
      "test_infer_types_returns_empty_map",
      "test_vue_chained_member_access",
      "test_vue_complex_script_typescript",
      "test_vue_duplicate_calls_at_different_locations",
      "test_vue_empty_sections",
      "test_vue_function_calls",
      "test_vue_identifiers_have_containing_symbol",
      "test_vue_malformed_template",
      "test_vue_member_access",
      "test_vue_missing_sections",
      "test_vue_symbols_without_comments_have_none",
      "vue_doc_comment_tests",
      "vue_extractor_tests",
      "vue_identifier_extraction_tests"
    ],
    "src/extractors/php/mod.rs": [
      "HashMap",
      "PhpExtractor",
      "extract_function",
      "extract_identifier_from_node",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbols",
      "functions",
      "get_base",
      "get_base_mut",
      "helpers",
      "identifiers",
      "infer_types",
      "members",
      "namespaces",
      "new",
      "relationships",
      "types",
      "visit_node",
      "visit_relationships",
      "walk_tree_for_identifiers"
    ],
    "src/tests/helpers/mod.rs": [
      "cleanup",
      "workspace"
    ],
    "fixtures/real-world/lua/web_server_framework.lua": [
      "HttpServer",
      "HttpServer",
      "__index",
      "body",
      "body",
      "body",
      "body",
      "body",
      "body",
      "body",
      "client",
      "client_ip",
      "connection_pool",
      "content_length",
      "content_length",
      "content_length_match",
      "cors_middleware",
      "create_request",
      "create_response",
      "create_sample_server",
      "create_sample_server",
      "data",
      "delete",
      "email",
      "err",
      "format_response",
      "get",
      "handle_connection",
      "handle_request",
      "handler",
      "header",
      "headers",
      "headers",
      "headers",
      "headers",
      "headers_end",
      "headers_end",
      "host",
      "html",
      "http_response",
      "http_response",
      "http_response",
      "id",
      "instance",
      "ip",
      "json",
      "json",
      "json",
      "key",
      "key",
      "line",
      "listen",
      "logger_middleware",
      "lua_pattern",
      "match_route",
      "matches",
      "method",
      "method",
      "middleware",
      "middleware",
      "middleware_result",
      "name",
      "new",
      "param_names",
      "params",
      "params",
      "params",
      "params",
      "params",
      "parse_headers",
      "parse_json_body",
      "parse_query_params",
      "parsed_url",
      "path",
      "path",
      "pattern",
      "port",
      "post",
      "put",
      "query",
      "received",
      "request",
      "request",
      "request_count",
      "request_count",
      "request_data",
      "request_data",
      "response",
      "response",
      "response",
      "result",
      "route",
      "routes",
      "running",
      "running",
      "running",
      "server",
      "server",
      "socket",
      "status",
      "status",
      "status_code",
      "status_messages",
      "status_text",
      "stop",
      "success",
      "success",
      "text",
      "timestamp",
      "timestamp",
      "timestamp",
      "url",
      "use",
      "value",
      "value"
    ],
    "src/tests/core/language.rs": [
      "test_all_26_languages_supported",
      "test_extension_detection",
      "test_unsupported_language_fails"
    ],
    "src/tests/extractors/cpp/modern.rs": [
      "parse_cpp",
      "test_extract_lambdas_smart_pointers_and_modern_cpp_constructs",
      "tests"
    ],
    "src/tests/extractors/lua/relationships.rs": [
      "LuaExtractor",
      "PathBuf",
      "RelationshipKind",
      "init_parser",
      "test_extract_function_call_relationships"
    ],
    "src/tests/fixtures/julie_db.rs": [
      "FixtureMetadata",
      "HashMap",
      "INSTANCE",
      "JulieServerHandler",
      "JulieTestFixture",
      "ManageWorkspaceTool",
      "OnceLock",
      "Ordering",
      "PathBuf",
      "TempDir",
      "build",
      "build_julie_fixture",
      "build_metadata",
      "copy_to_temp",
      "db_path",
      "fs",
      "generate_workspace_id",
      "get_instance",
      "known_files",
      "known_symbols",
      "load",
      "test_fixture_copy_to_temp",
      "test_fixture_loads",
      "test_fixture_singleton",
      "tests",
      "wait_for_indexing"
    ],
    "src/tools/shared.rs": [
      "BLACKLISTED_DIRECTORIES",
      "BLACKLISTED_EXTENSIONS",
      "KNOWN_CODE_EXTENSIONS",
      "OptimizedResponse",
      "Serialize",
      "new",
      "optimize_for_tokens",
      "with_insights",
      "with_next_actions"
    ],
    "src/tests/tools/workspace/mod_tests.rs": [
      "CallToolResult",
      "JulieServerHandler",
      "JulieWorkspace",
      "ManageWorkspaceTool",
      "TempDir",
      "WorkspaceRegistryService",
      "extract_text_from_result",
      "fs",
      "test_add_workspace_updates_statistics",
      "test_concurrent_manage_workspace_index_does_not_lock_search_index",
      "test_force_reindex_clears_flag",
      "test_health_check",
      "test_incremental_indexing_detects_empty_database",
      "test_is_indexed_flag_with_empty_database",
      "test_is_indexed_flag_with_populated_database",
      "test_workspace_detection",
      "test_workspace_initialization"
    ],
    "fixtures/real-world/gdscript/player_controller.gd": [
      "ATTACKING",
      "DASHING",
      "DEAD",
      "FALLING",
      "HURT",
      "IDLE",
      "JUMPING",
      "PlayerController",
      "PlayerState",
      "RUNNING",
      "_change_state",
      "_end_dash",
      "_handle_dash_state",
      "_handle_hurt_state",
      "_handle_normal_movement",
      "_input",
      "_on_dash_timer_timeout",
      "_on_hit_box_body_entered",
      "_on_hurt_box_body_entered",
      "_physics_process",
      "_ready",
      "_set_modulate_alpha",
      "_start_dash",
      "_update_animations",
      "animation_player",
      "can_dash",
      "collect_item",
      "collision_shape",
      "current_health",
      "current_state",
      "dash_duration",
      "dash_speed",
      "dash_timer",
      "dash_timer_node",
      "die",
      "direction",
      "enemy_defeated",
      "facing_direction",
      "gravity",
      "heal",
      "health_changed",
      "hit_box",
      "hurt_box",
      "is_dashing",
      "item_collected",
      "jump_velocity",
      "max_health",
      "player_controller",
      "player_died",
      "speed",
      "sprite",
      "take_damage",
      "tween"
    ],
    "src/extractors/cpp/declarations.rs": [
      "Node",
      "build_direct_variable_signature",
      "build_field_signature",
      "build_variable_signature",
      "extract_constructor_from_declaration",
      "extract_conversion_operator",
      "extract_cpp_visibility",
      "extract_declaration",
      "extract_destructor_from_declaration",
      "extract_field",
      "extract_field_name_from_declarator",
      "extract_field_visibility",
      "extract_friend_declaration",
      "extract_namespace",
      "extract_template",
      "extract_using",
      "extract_visibility_from_node",
      "find_access_spec_before_node",
      "find_parent_class_or_struct",
      "functions",
      "helpers"
    ],
    "src/extractors/vue/helpers.rs": [
      "COMPONENT_USAGE_RE",
      "COMPUTED_OBJECT_RE",
      "CSS_CLASS_RE",
      "DATA_FUNCTION_RE",
      "DIRECTIVE_USAGE_RE",
      "FUNCTION_DEF_RE",
      "LANG_ATTR_RE",
      "LazyLock",
      "METHODS_OBJECT_RE",
      "PROPS_OBJECT_RE",
      "Regex",
      "SCRIPT_START_RE",
      "SECTION_END_RE",
      "STYLE_START_RE",
      "TEMPLATE_START_RE"
    ],
    "Cargo.toml": [],
    "src/extractors/typescript/inference.rs": [
      "HashMap",
      "Node",
      "Symbol",
      "TypeScriptExtractor",
      "collect_return_types",
      "infer_function_return_type",
      "infer_type_from_value",
      "infer_types",
      "infer_types_from_tree",
      "parse_content"
    ],
    "src/tests/extractors/java/class_tests.rs": [
      "PathBuf",
      "class_tests",
      "test_extract_class_definitions_with_modifiers"
    ],
    "src/tests/extractors/python/decorators.rs": [
      "test_decorator_extraction"
    ],
    "src/extractors/php/functions.rs": [
      "HashMap",
      "Node",
      "extract_function",
      "find_return_type"
    ],
    "src/extractors/rust/functions.rs": [
      "HashMap",
      "RustExtractor",
      "Value",
      "extract_function",
      "extract_function_parameters",
      "extract_impl",
      "extract_return_type",
      "process_impl_blocks"
    ],
    "src/tests/extractors/python/helpers.rs": [
      "helpers",
      "test_strip_string_delimiters_double",
      "test_strip_string_delimiters_no_delimiters",
      "test_strip_string_delimiters_single",
      "test_strip_string_delimiters_triple_double",
      "test_strip_string_delimiters_triple_single"
    ],
    "src/extractors/cpp/helpers.rs": [
      "BaseExtractor",
      "Node",
      "collect_modifiers_recursive",
      "extract_base_classes",
      "extract_declarator_name",
      "extract_storage_class",
      "extract_template_parameters",
      "extract_type_specifiers",
      "find_function_declarator_in_node",
      "find_parent_enum",
      "is_constant_declaration",
      "is_static_member_variable"
    ],
    "AGENTS.md": [],
    "src/database/relationships.rs": [
      "HashMap",
      "Result",
      "debug",
      "delete_relationships_for_file",
      "get_file_relationship_statistics",
      "get_outgoing_relationships",
      "get_relationship_type_statistics",
      "get_relationships_for_symbol",
      "get_relationships_to_symbol",
      "get_relationships_to_symbols",
      "params"
    ],
    "src/tests/extractors/html/forms.rs": [
      "test_extract_complex_forms_validation_and_interactive_elements",
      "tests"
    ],
    "src/extractors/java/mod.rs": [
      "HashMap",
      "JavaExtractor",
      "annotations",
      "base",
      "base_mut",
      "classes",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbol",
      "extract_symbols",
      "fields",
      "helpers",
      "identifiers",
      "imports_packages",
      "infer_types",
      "methods",
      "new",
      "relationships",
      "types",
      "visit_node_for_relationships",
      "walk_tree"
    ],
    "src/tests/cli/output.rs": [
      "test_json_output",
      "test_ndjson_streaming"
    ],
    "src/extractors/css/helpers.rs": [
      "BaseExtractor",
      "Node",
      "PropertyHelper",
      "extract_key_properties",
      "extract_properties",
      "find_declaration_block",
      "find_property_value",
      "is_unique_property"
    ],
    "src/extractors/swift/extensions.rs": [
      "HashMap",
      "Node",
      "SwiftExtractor",
      "create_symbol_options",
      "extract_extension",
      "extract_import",
      "extract_type_alias",
      "serde_json"
    ],
    "src/tests/extractors/c/identifier_extraction.rs": [
      "CExtractor",
      "IdentifierKind",
      "PathBuf",
      "identifier_extraction_tests",
      "init_parser",
      "test_chained_member_access",
      "test_extract_function_calls",
      "test_extract_member_access",
      "test_file_scoped_containing_symbol",
      "test_no_duplicate_identifiers"
    ],
    "src/tests/tools/refactoring/scope_test.rs": [
      "JulieServerHandler",
      "Result",
      "SmartRefactorTool",
      "TempDir",
      "extract_text",
      "fs",
      "test_extract_outer_function_with_nested_same_name",
      "test_extract_specifies_ambiguous_symbol"
    ],
    "fixtures/editing/sources/python/test_database.py": [
      "Any",
      "AsyncMock",
      "CallInfo",
      "CodeEntity",
      "CodeEntityFactory",
      "Dict",
      "List",
      "MillerDatabase",
      "Mock",
      "ParameterInfo",
      "Path",
      "ReturnInfo",
      "TestCodeEntityFactory",
      "TestConcurrency",
      "TestCrossLanguageFeatures",
      "TestDatabaseInitialization",
      "TestDatabaseStatistics",
      "TestEntityOperations",
      "TestErrorHandling",
      "TestGraphRelationships",
      "TestPerformance",
      "TestSearchOperations",
      "TypeInfo",
      "add_tasks",
      "asyncio",
      "backend_entity",
      "calls",
      "code_snippet",
      "count",
      "count",
      "count",
      "counts",
      "custom_embedding",
      "db",
      "db",
      "db",
      "db",
      "db_path",
      "duration",
      "end_time",
      "entities",
      "entities",
      "entities",
      "entities_set_1",
      "entities_set_2",
      "entity",
      "entity",
      "entity_data",
      "entity_data",
      "entity_data",
      "entity_data",
      "entity_names",
      "extends",
      "extends",
      "frontend_entity",
      "implements",
      "implements",
      "invalid_entity",
      "invalid_retrieved",
      "json",
      "json",
      "original_table",
      "params",
      "patch",
      "pytest",
      "pytest_asyncio",
      "result",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "retrieved",
      "retrieved",
      "retrieved",
      "retrieved",
      "retrieved",
      "returns",
      "sample_entities",
      "search_tasks",
      "semantic_duration",
      "shutil",
      "start_time",
      "start_time",
      "start_time",
      "stats",
      "stats",
      "stats",
      "stats",
      "stats",
      "temp_db",
      "temp_dir",
      "temp_dir",
      "temp_dir",
      "temp_dir",
      "tempfile",
      "test_add_entities_batch",
      "test_add_entities_batch_with_invalid_data",
      "test_add_entity_generates_embedding",
      "test_add_entity_with_existing_embedding",
      "test_add_entity_with_invalid_data",
      "test_api_endpoint_mapping",
      "test_batch_addition_performance",
      "test_concurrent_additions",
      "test_concurrent_searches",
      "test_create_class",
      "test_create_function",
      "test_database_table_mapping",
      "test_entity",
      "test_entity_with_call_relationships",
      "test_entity_with_type_relationships",
      "test_find_similar_code",
      "test_get_entity_by_id_not_found",
      "test_get_statistics_empty_db",
      "test_get_statistics_with_data",
      "test_hybrid_search",
      "test_index_size_calculation",
      "test_initialize_creates_directory",
      "test_initialize_creates_tantivy_indexes",
      "test_initialize_opens_existing_table",
      "test_initialize_with_mock_failure",
      "test_search_performance",
      "test_search_without_initialization",
      "test_semantic_search",
      "test_semantic_search_handles_exceptions",
      "test_statistics_handles_exceptions",
      "test_text_search",
      "test_text_search_handles_exceptions",
      "test_text_search_with_limit",
      "text_duration",
      "time",
      "time",
      "valid_retrieved"
    ],
    "src/tests/tools/refactoring/replace_symbol_body_tests.rs": [
      "JulieServerHandler",
      "Result",
      "SmartRefactorTool",
      "TempDir",
      "extract_text",
      "fs",
      "test_replace_python_method_body",
      "test_replace_rust_function_body",
      "test_replace_symbol_body_dry_run",
      "test_replace_symbol_body_missing_file",
      "test_replace_symbol_body_missing_parameters",
      "test_replace_symbol_body_missing_symbol",
      "test_replace_typescript_function_body"
    ],
    "src/tests/utils/exact_match_boost/tests.rs": [
      "ExactMatchBoost",
      "exact_match_boost_tests",
      "test_case_insensitive_matching",
      "test_empty_and_edge_cases",
      "test_exact_match_detection",
      "test_logarithmic_boost_calculation",
      "test_logarithmic_scaling_properties",
      "test_multi_word_query_boost",
      "test_prefix_and_substring_scoring",
      "test_realistic_search_scenarios"
    ],
    "src/tests/test_utils.rs": [
      "init_parser"
    ],
    "src/extractors/javascript/identifiers.rs": [
      "HashMap",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/cli/progress.rs": [
      "Instant",
      "ProgressEvent",
      "ProgressReporter",
      "complete",
      "error",
      "new",
      "report"
    ],
    "src/embeddings/vector_store.rs": [
      "HNSW_MAX_LAYERS",
      "HashMap",
      "Path",
      "Result",
      "SimilarityResult",
      "VectorStore",
      "add_vector_to_hnsw",
      "build_hnsw_index",
      "clear",
      "clear_hnsw_index",
      "get_dimensions",
      "has_hnsw_index",
      "insert_batch",
      "load_hnsw_index",
      "load_id_mapping",
      "new",
      "remove_vector_from_hnsw",
      "save_hnsw_index",
      "save_id_mapping",
      "search_similar_hnsw"
    ],
    "src/tests/extractors/sql/identifier_extraction.rs": [
      "PathBuf",
      "SqlExtractor",
      "identifier_extraction_tests",
      "init_parser",
      "init_parser",
      "test_sql_chained_member_access",
      "test_sql_duplicate_calls_at_different_locations",
      "test_sql_function_calls",
      "test_sql_identifiers_have_containing_symbol",
      "test_sql_member_access"
    ],
    "src/extractors/go/signatures.rs": [
      "build_function_signature",
      "build_function_signature_with_generics",
      "build_function_signature_with_return_types",
      "build_method_signature",
      "build_method_signature_with_return_types"
    ],
    "src/tests/extractors/lua/mod.rs": [
      "LuaExtractor",
      "Parser",
      "classes",
      "control_flow",
      "core",
      "coroutines",
      "doc_comments",
      "error_handling",
      "extractor",
      "file_operations",
      "functions",
      "helpers",
      "identifier_extraction",
      "identifiers",
      "init_parser",
      "metatables",
      "modules",
      "oop_patterns",
      "relationships",
      "strings",
      "tables",
      "variables"
    ],
    "src/tests/cli/semantic.rs": [
      "Command",
      "PathBuf",
      "Result",
      "TempDir",
      "cosine_similarity",
      "create_test_db",
      "embed_tests",
      "error_handling_tests",
      "get_binary_path",
      "performance_tests",
      "query_tests",
      "run_embed",
      "run_query",
      "serial",
      "test_embed_consistent_dimensions",
      "test_embed_corrupted_database",
      "test_embed_empty_database",
      "test_embed_generates_embeddings",
      "test_embed_invalid_database",
      "test_embed_output_creates_directory",
      "test_embed_readonly_output",
      "test_embed_reasonable_speed",
      "test_embed_respects_limit",
      "test_embed_with_hnsw_output",
      "test_query_cross_language_similarity",
      "test_query_different_text_different_embeddings",
      "test_query_empty_text",
      "test_query_generates_embedding",
      "test_query_json_format",
      "test_query_long_text",
      "test_query_model_parameter",
      "test_query_performance",
      "test_query_same_text_same_embedding",
      "test_query_semantic_similarity",
      "test_query_special_characters"
    ],
    "fixtures/editing/controls/refactor/user_service_to_account_service.ts": [
      "AccountService",
      "constructor",
      "data",
      "getName",
      "myService",
      "process",
      "service"
    ],
    "src/extractors/css/properties.rs": [
      "HashMap",
      "Node",
      "PropertyExtractor",
      "PropertyHelper",
      "extract_custom_property",
      "extract_supports_condition",
      "extract_supports_rule"
    ],
    "src/tests/extractors/sql/ddl.rs": [
      "test_extract_tables_columns_and_constraints",
      "tests"
    ],
    "src/extractors/swift/enum_cases.rs": [
      "HashMap",
      "Node",
      "SwiftExtractor",
      "extract_enum_case",
      "extract_enum_cases",
      "serde_json"
    ],
    "fixtures/editing/controls/line-edit/line_edit_replace_function_only.py": [
      "calculate_average",
      "data",
      "main",
      "result",
      "total"
    ],
    "src/extractors/kotlin/relationships.rs": [
      "HashMap",
      "Node",
      "Value",
      "extract_inheritance_relationships",
      "find_class_symbol"
    ],
    "src/extractors/vue/parsing.rs": [
      "VueSection",
      "VueSectionBuilder",
      "build",
      "fmt",
      "fmt",
      "parse_vue_sfc"
    ],
    "fixtures/real-world/razor/MainLayout.razor": [
      "@inherits",
      "@inherits",
      "BreadcrumbsComponent",
      "ChildContent",
      "ErrorBoundary",
      "ErrorContent",
      "FooterComponent",
      "HeaderComponent",
      "PortalWarningComponent",
      "RadzenComponents",
      "rendermode InteractiveWebAssembly",
      "rendermode InteractiveWebAssembly"
    ],
    "src/tests/extractors/cpp/classes.rs": [
      "test_extract_class_declarations_with_inheritance_and_access_specifiers",
      "test_extract_constructors_and_destructors_with_various_patterns",
      "test_extract_struct_and_union_declarations",
      "test_handle_friend_declarations_and_access_specifiers",
      "tests"
    ],
    "src/tests/extractors/regex/groups.rs": [
      "test_extract_group_name",
      "test_is_capturing_group"
    ],
    "src/extractors/kotlin/types.rs": [
      "HashMap",
      "Node",
      "Value",
      "extract_class",
      "extract_companion_object",
      "extract_enum_members",
      "extract_function",
      "extract_import",
      "extract_interface",
      "extract_object",
      "extract_package",
      "extract_type_alias",
      "helpers"
    ],
    "src/tests/cli/progress.rs": [
      "ProgressReporter",
      "test_progress_reporter"
    ],
    "src/extractors/swift/callables.rs": [
      "HashMap",
      "Node",
      "SwiftExtractor",
      "extract_deinitializer",
      "extract_function",
      "extract_initializer",
      "serde_json"
    ],
    "src/extractors/kotlin/properties.rs": [
      "HashMap",
      "Node",
      "Value",
      "extract_constructor_parameters",
      "extract_property",
      "helpers"
    ],
    "src/tools/workspace/paths.rs": [
      "ManageWorkspaceTool",
      "Result",
      "env",
      "find_workspace_root",
      "resolve_workspace_path"
    ],
    "src/utils/exact_match_boost.rs": [
      "ExactMatchBoost",
      "HashSet",
      "calculate_boost",
      "count_word_matches",
      "exact_match_boost",
      "is_exact_match",
      "is_prefix_match",
      "is_substring_match",
      "is_word_boundary_match",
      "new",
      "prefix_match_boost",
      "substring_match_boost",
      "tokenize_query",
      "tokenize_symbol",
      "word_boundary_match_boost"
    ],
    "src/extractors/zig/error_handling.rs": [
      "HashMap",
      "Node",
      "Regex",
      "extract_from_error_node"
    ],
    "fixtures/real-world/java/ModelUser.java": [
      "ModelUser",
      "main"
    ],
    "src/test_incremental_update.rs": [
      "add_numbers",
      "greet_user",
      "multiply_numbers"
    ],
    "src/database/bulk_operations.rs": [
      "BATCH_SIZE",
      "bulk_store_identifiers",
      "bulk_store_relationships",
      "create_identifier_indexes",
      "create_relationship_indexes",
      "drop_identifier_indexes",
      "drop_relationship_indexes",
      "incremental_update_atomic",
      "params",
      "store_relationships"
    ],
    "src/extractors/powershell/variables.rs": [
      "Node",
      "extract_variable",
      "extract_variable_reference",
      "extract_variable_signature",
      "find_variable_name_node"
    ],
    "src/tests/extractors/go/mod.rs": [
      "GoExtractor",
      "GoExtractor",
      "PathBuf",
      "PathBuf",
      "go_extractor_tests",
      "identifier_extraction",
      "init_parser",
      "init_parser",
      "test_chained_member_access",
      "test_extract_concurrency_primitives_and_patterns",
      "test_extract_const_with_go_doc_comment",
      "test_extract_constant_declarations",
      "test_extract_custom_error_types_and_patterns",
      "test_extract_function_calls",
      "test_extract_function_with_go_doc_comment",
      "test_extract_generic_types_and_constraints",
      "test_extract_import_declarations",
      "test_extract_import_with_go_doc_comment",
      "test_extract_interface_definitions",
      "test_extract_interfaces_type_assertions_and_switches",
      "test_extract_member_access",
      "test_extract_method_receiver_relationships",
      "test_extract_method_with_go_doc_comment",
      "test_extract_methods_with_receivers",
      "test_extract_package_declarations",
      "test_extract_standalone_functions",
      "test_extract_struct_definitions",
      "test_extract_test_functions_and_build_constraints",
      "test_extract_type_aliases",
      "test_extract_type_with_go_doc_comment",
      "test_extract_variable_declarations",
      "test_file_scoped_containing_symbol",
      "test_handle_channel_types_and_goroutines",
      "test_handle_comprehensive_go_code",
      "test_handle_edge_cases_and_malformed_code",
      "test_handle_large_go_files_with_many_symbols",
      "test_infer_types_from_go_annotations",
      "test_multi_line_go_doc_comments",
      "test_no_doc_comment_when_missing",
      "test_no_duplicate_identifiers"
    ],
    "src/tests/extractors/regex/identifiers.rs": [
      "extract_group_name",
      "test_extract_group_name",
      "tests"
    ],
    "src/tools/ast_symbol_finder.rs": [
      "ASTSymbolFinder",
      "ScopeRange",
      "SymbolContext",
      "SymbolDefinition",
      "SymbolKind",
      "SymbolOccurrence",
      "check_if_definition",
      "debug",
      "determine_context",
      "find_comment_occurrences",
      "find_definition_recursive",
      "find_symbol_definition",
      "find_symbol_occurrences",
      "find_symbol_scope",
      "is_symbol_node",
      "new",
      "node_kind_to_symbol_kind",
      "node_text",
      "walk_node_for_comment",
      "walk_node_for_symbol"
    ],
    "src/tools/workspace/indexing/incremental.rs": [
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "Result",
      "clean_orphaned_files",
      "filter_changed_files"
    ],
    "src/tests/extractors/html/identifier_extraction.rs": [
      "HTMLExtractor",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "identifier_extraction_tests",
      "init_parser",
      "test_html_chained_member_access",
      "test_html_duplicate_calls_at_different_locations",
      "test_html_function_calls",
      "test_html_identifiers_have_containing_symbol",
      "test_html_member_access"
    ],
    "src/tests/tools/trace_call_path/new_features.rs": [
      "TraceCallPathTool",
      "test_all_new_parameters_together",
      "test_cross_language_max_depth_default",
      "test_cross_language_max_depth_parameter",
      "test_output_format_parameter_json",
      "test_output_format_parameter_tree",
      "test_semantic_limit_default",
      "test_semantic_limit_parameter"
    ],
    "src/database/migrations.rs": [
      "LATEST_SCHEMA_VERSION",
      "apply_migration",
      "create_schema_version_table",
      "get_schema_version",
      "has_column",
      "migration_001_initial_schema",
      "migration_002_add_content_column",
      "migration_003_add_relationship_location",
      "params",
      "record_migration",
      "run_migrations"
    ],
    "src/extractors/java/imports_packages.rs": [
      "JavaExtractor",
      "Node",
      "extract_import",
      "extract_package"
    ],
    "src/tests/extractors/lua/control_flow.rs": [
      "PathBuf",
      "PathBuf",
      "test_control_structures_and_loops",
      "tests"
    ],
    "src/extractors/html/types.rs": [
      "HTMLTypes",
      "HashMap",
      "SymbolKind",
      "get_symbol_kind_for_element",
      "infer_types",
      "is_form_field",
      "is_semantic_element",
      "is_void_element"
    ],
    "fixtures/editing/sources/ast-aware/user_service.ts": [
      "UserService",
      "constructor",
      "data",
      "getName",
      "myService",
      "process",
      "service"
    ],
    "src/extractors/css/media.rs": [
      "HashMap",
      "MediaExtractor",
      "Node",
      "extract_media_query",
      "extract_media_rule"
    ],
    "fixtures/real-world/dart/flutter_isolate_demo.dart": [
      "Constructor",
      "Constructor",
      "Constructor",
      "Constructor",
      "Constructor",
      "DataTransferPage",
      "HomePage",
      "InfiniteProcessPage",
      "IsolateExampleApp",
      "PerformancePage",
      "_DataTransferPageState",
      "_HomePageState",
      "_InfiniteProcessPageState",
      "_PerformancePageState",
      "_calculateOnIsolate",
      "_calculateOnMainThread",
      "_controller",
      "_counter",
      "_heavyComputation",
      "_heavyComputationInIsolate",
      "_infiniteLoopEntryPoint",
      "_isCalculatingIsolate",
      "_isCalculatingMain",
      "_isProcessing",
      "_isRunning",
      "_isolate",
      "_isolateEntryPoint",
      "_isolateResult",
      "_mainThreadResult",
      "_processText",
      "_processTextInIsolate",
      "_processedText",
      "_receivePort",
      "_startInfiniteProcess",
      "_stopInfiniteProcess",
      "_tabController",
      "_textProcessingEntryPoint",
      "build",
      "build",
      "build",
      "build",
      "build",
      "createState",
      "createState",
      "createState",
      "createState",
      "dispose",
      "dispose",
      "dispose",
      "initState",
      "initState",
      "main",
      "setupWindow"
    ],
    "src/extractors/go/types.rs": [
      "HashMap",
      "Node",
      "extract_field",
      "extract_package",
      "extract_type_alias",
      "extract_type_declaration",
      "extract_type_spec"
    ],
    "src/tests/extractors/python/types.rs": [
      "test_is_inside_enum_class",
      "tests"
    ],
    "src/database/symbols/search.rs": [
      "HashMap",
      "HashMap",
      "Result",
      "count_symbols_for_workspace",
      "debug",
      "get_all_indexed_files",
      "get_all_symbols",
      "get_file_count_for_workspace",
      "get_file_statistics",
      "get_most_referenced_symbols",
      "get_symbol_count_for_workspace",
      "get_symbol_statistics",
      "get_symbols_batch",
      "get_symbols_by_name",
      "get_symbols_by_name_and_workspace",
      "get_symbols_by_semantic_group",
      "get_symbols_for_workspace",
      "get_symbols_without_embeddings",
      "get_total_symbol_count",
      "has_symbols_for_workspace",
      "query_symbols_by_kind",
      "query_symbols_by_language",
      "query_symbols_by_name_pattern"
    ],
    "src/tests/core/embeddings/cross_language.rs": [
      "test_architectural_pattern_detection",
      "test_calculate_structure_similarity",
      "test_extract_common_properties",
      "test_has_name_similarity",
      "test_levenshtein_distance",
      "test_names_are_similar",
      "test_normalize_name",
      "tests"
    ],
    "src/tests/extractors/lua/metatables.rs": [
      "PathBuf",
      "PathBuf",
      "test_metatables_and_metamethods",
      "tests"
    ],
    "src/tests/extractors/rust/identifiers.rs": [
      "test_identifier_extraction",
      "tests"
    ],
    "src/tests/tools/refactoring/extract_to_file_tests.rs": [
      "JulieServerHandler",
      "Result",
      "SmartRefactorTool",
      "TempDir",
      "extract_text",
      "fs",
      "test_extract_missing_parameters",
      "test_extract_missing_symbol",
      "test_extract_python_class_to_new_file",
      "test_extract_rust_function_to_new_file",
      "test_extract_symbol_to_file_dry_run",
      "test_extract_to_existing_file_appends",
      "test_extract_typescript_function_to_new_file"
    ],
    "fixtures/test-workspaces/README.md": [],
    "fixtures/editing/controls/fast-edit/edge_cases_todo_replaced.py": [
      "DataProcessor",
      "Dict",
      "List",
      "Optional",
      "__init__",
      "data",
      "json",
      "process_data",
      "validate_json"
    ],
    "src/tests/tools/workspace/isolation.rs": [
      "JulieServerHandler",
      "Result",
      "Symbol",
      "SymbolDatabase",
      "SymbolKind",
      "TempDir",
      "TempDir",
      "WorkspaceRegistryService",
      "WorkspaceType",
      "fs",
      "fs",
      "test_force_reindex_preserves_reference_workspaces",
      "test_reference_workspaces_get_hnsw_indexes",
      "workspace_isolation"
    ],
    "src/tests/integration/fts5_sanitization.rs": [
      "SymbolDatabase",
      "TempDir",
      "test_fts5_column_specifier_in_query",
      "test_fts5_hash_symbol_in_query",
      "test_fts5_intentional_operators_preserved",
      "test_fts5_special_characters"
    ],
    "src/tests/extractors/lua/classes.rs": [
      "test_class_detection_basic"
    ],
    "src/tests/extractors/base.rs": [
      "test_context_configuration",
      "test_context_extraction_edge_cases",
      "test_context_without_line_numbers",
      "test_id_generation",
      "test_line_truncation",
      "test_symbol_creation"
    ],
    "src/extractors/dart/relationships.rs": [
      "Node",
      "extract_class_relationships",
      "extract_method_call_relationships",
      "extract_relationships"
    ],
    "src/extractors/go/helpers.rs": [
      "Node",
      "extract_interface_body",
      "extract_receiver_type_from_param",
      "extract_return_type_from_signature",
      "extract_type_from_node",
      "extract_variable_type_from_signature",
      "get_node_text",
      "is_public"
    ],
    "src/tests/extractors/ruby/extractor.rs": [
      "PathBuf",
      "RubyExtractor",
      "ruby_extractor_tests",
      "test_ruby_extractor_creation"
    ],
    "src/tests/integration/bulk_storage_atomicity.rs": [
      "Result",
      "TempDir",
      "Visibility",
      "create_test_relationship",
      "create_test_symbol",
      "fs",
      "test_bulk_store_files_atomicity",
      "test_bulk_store_relationships_atomicity",
      "test_bulk_store_symbols_is_atomic",
      "test_incremental_update_cleanup_atomicity"
    ],
    "src/tests/tools/exploration/mod.rs": [],
    "src/extractors/swift/mod.rs": [
      "SwiftExtractor",
      "callables",
      "enum_cases",
      "extensions",
      "extract_symbols",
      "identifiers",
      "new",
      "properties",
      "protocol",
      "relationships",
      "signatures",
      "types",
      "visit_node"
    ],
    "src/tests/extractors/lua/helpers.rs": [
      "LuaExtractor",
      "Parser",
      "PathBuf",
      "find_node_by_kind",
      "init_parser",
      "test_contains_function_definition_false",
      "test_find_child_by_type_returns_none_for_missing_type",
      "test_helpers_in_extraction_context",
      "test_infer_type_from_expression_number",
      "test_infer_type_from_expression_require_call",
      "test_infer_type_from_expression_string",
      "test_infer_type_from_expression_table",
      "test_infer_type_from_expression_unknown"
    ],
    "src/tests/tools/workspace/utils.rs": [
      "TempDir",
      "calculate_dir_size",
      "fs",
      "test_calculate_dir_size_empty",
      "test_calculate_dir_size_in_spawn_blocking",
      "test_calculate_dir_size_nested",
      "test_calculate_dir_size_with_files"
    ],
    "src/handler.rs": [
      "Arc",
      "AtomicBool",
      "CHECK_INTERVAL_SECS",
      "EmbeddingEngine",
      "IDLE_TIMEOUT_SECS",
      "IndexingStatus",
      "JulieServerHandler",
      "JulieTools",
      "RwLock",
      "async_trait",
      "default",
      "ensure_embedding_engine",
      "ensure_vector_store",
      "ensure_workspace",
      "generate_workspace_id",
      "get_workspace",
      "get_workspace_path",
      "handle_call_tool_request",
      "handle_list_tools_request",
      "initialize_workspace",
      "initialize_workspace_with_force",
      "new",
      "new",
      "start_embedding_cleanup_task",
      "tool_lock_is_free"
    ],
    "src/extractors/lua/core.rs": [
      "Node",
      "functions",
      "tables",
      "traverse_tree",
      "variables"
    ],
    "src/tests/extractors/css/pseudo_elements.rs": [
      "SymbolKind",
      "test_extract_pseudo_elements_and_pseudo_classes",
      "tests"
    ],
    "docs/SEARCH_FLOW.md": [],
    "fixtures/editing/controls/auto-fix/missing_paren.ts": [
      "Anonymous",
      "calculateTotal",
      "calculateTotal",
      "discounted",
      "subtotal"
    ],
    "fixtures/editing/sources/broken/unclosed_string.py": [
      "greet_user",
      "message"
    ],
    "src/database/types.rs": [
      "DatabaseStats",
      "EmbeddingInfo",
      "FileInfo",
      "FileSearchResult",
      "WorkspaceCleanupStats",
      "WorkspaceUsageStats"
    ],
    "src/extractors/powershell/identifiers.rs": [
      "HashMap",
      "Node",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_command_name_node",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/extractors/sql/constraints.rs": [
      "HashMap",
      "Node",
      "Value",
      "create_constraint_symbol",
      "extract_column_constraints",
      "extract_constraints_from_alter_table",
      "extract_table_columns",
      "extract_table_constraints"
    ],
    "src/tests/tools/get_symbols_smart_read.rs": [
      "CallToolResult",
      "JulieServerHandler",
      "Result",
      "TempDir",
      "create_test_rust_file",
      "extract_symbols_from_result",
      "extract_text_from_result",
      "fs",
      "test_default_behavior_strips_context",
      "test_file_read_error_handling",
      "test_mode_full_all_symbols",
      "test_mode_minimal_top_level_only",
      "test_mode_structure_always_strips",
      "test_structure_mode_strips_context",
      "test_target_with_minimal_mode",
      "test_utf8_decode_error_handling"
    ],
    "src/tests/tools/search_quality/helpers.rs": [
      "CallToolResult",
      "FastSearchTool",
      "JulieServerHandler",
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "Ordering",
      "Symbol",
      "assert_contains_path",
      "assert_contains_symbol_kind",
      "assert_exact_count",
      "assert_first_result",
      "assert_max_results",
      "assert_min_results",
      "assert_not_contains_path",
      "format_results",
      "parse_search_results",
      "search_content",
      "search_definitions",
      "setup_handler_with_fixture"
    ],
    "src/tests/tools/get_symbols.rs": [
      "CallToolResult",
      "JulieServerHandler",
      "Result",
      "TempDir",
      "extract_text_from_result",
      "fs",
      "test_get_symbols_normalizes_various_path_formats",
      "test_get_symbols_with_absolute_path",
      "test_get_symbols_with_limit_parameter",
      "test_get_symbols_with_relative_path"
    ],
    "src/tests/integration/real_world_validation.rs": [
      "HashMap",
      "JulieServerHandler",
      "Path",
      "PathBuf",
      "REAL_WORLD_TEST_DIR",
      "REAL_WORLD_TEST_DIR",
      "SmartRefactorTool",
      "TempDir",
      "atomic_cleanup_julie_dir",
      "extract_identifier_after_keyword",
      "extract_response_text",
      "extract_symbols_from_real_file",
      "fs",
      "fs",
      "get_files_with_extension",
      "get_files_with_extension",
      "init_parser",
      "real_world_refactoring_tests",
      "real_world_tests",
      "test_bash_real_world_files",
      "test_c_real_world_files",
      "test_cpp_real_world_files",
      "test_cross_language_real_world_integration",
      "test_csharp_real_world_files",
      "test_css_real_world_files",
      "test_dart_real_world_files",
      "test_gdscript_real_world_files",
      "test_go_real_world_files",
      "test_html_real_world_files",
      "test_java_real_world_files",
      "test_javascript_real_world_files",
      "test_kotlin_real_world_files",
      "test_lua_real_world_files",
      "test_php_real_world_files",
      "test_powershell_real_world_files",
      "test_python_real_world_files",
      "test_razor_real_world_files",
      "test_real_world_file",
      "test_regex_real_world_files",
      "test_rename_symbol_on_real_file",
      "test_rename_symbol_real_javascript_files",
      "test_rename_symbol_real_python_files",
      "test_rename_symbol_real_typescript_files",
      "test_ruby_real_world_files",
      "test_rust_real_world_files",
      "test_sql_real_world_files",
      "test_swift_real_world_files",
      "test_typescript_real_world_files",
      "test_vue_real_world_files",
      "test_zig_real_world_files"
    ],
    "src/tools/workspace/commands/index.rs": [
      "AsyncMutex",
      "HashMap",
      "JulieServerHandler",
      "LOCKS",
      "ManageWorkspaceTool",
      "PathBuf",
      "Result",
      "StdMutex, OnceLock}",
      "WorkspaceRegistryService",
      "WorkspaceType",
      "env",
      "handle_index_command",
      "indexing_lock_cache"
    ],
    "src/utils/mod.rs": [
      "Path",
      "Path",
      "Result",
      "context_truncation",
      "cross_language_intelligence",
      "detect_language",
      "exact_match_boost",
      "file_utils",
      "fs",
      "is_supported_file",
      "language",
      "path_relevance",
      "paths",
      "progressive_reduction",
      "query_expansion",
      "read_file_content",
      "secure_path_resolution",
      "string_similarity",
      "token_estimation"
    ],
    "src/tests/extractors/html/doc_comments.rs": [
      "extract_symbols",
      "test_comment_on_meta_element",
      "test_element_without_comment_has_no_doc_comment",
      "test_extract_html_comment_from_custom_element",
      "test_extract_html_comment_from_element",
      "test_extract_html_comment_from_script_element",
      "test_extract_html_comment_from_style_element",
      "test_multiline_block_comment_on_element",
      "test_single_line_html_comment",
      "tests"
    ],
    "src/extractors/csharp/operators.rs": [
      "Node",
      "extract_conversion_operator",
      "extract_indexer",
      "extract_operator",
      "helpers"
    ],
    "src/tests/extractors/csharp/core.rs": [
      "PathBuf",
      "test_class_extraction",
      "test_constructor_extraction",
      "test_field_and_event_extraction",
      "test_interface_and_struct_extraction",
      "test_method_extraction",
      "test_namespace_and_using_extraction",
      "test_property_extraction",
      "tests"
    ],
    "src/tests/extractors/gdscript/functions.rs": [
      "SymbolKind",
      "test_extract_function_definitions_callbacks_and_signals",
      "test_extract_gdscript_doc_from_function",
      "tests"
    ],
    "src/tests/extractors/lua/error_handling.rs": [
      "PathBuf",
      "PathBuf",
      "test_error_handling_and_pcall_patterns",
      "tests"
    ],
    "src/tools/editing.rs": [
      "EditingTransaction",
      "HashMap",
      "MultiFileTransaction",
      "Result",
      "Uuid",
      "add_file",
      "begin",
      "commit",
      "commit_all",
      "drop",
      "drop",
      "emergency_cleanup",
      "fs",
      "new",
      "rollback",
      "rollback_partial_commit",
      "set_content"
    ],
    "src/extractors/c/identifiers.rs": [
      "CExtractor",
      "HashMap",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/tests/utils/query_expansion.rs": [
      "test_expand_query",
      "test_expand_query_single_word",
      "test_to_camelcase",
      "test_to_fuzzy_query",
      "test_to_lowercase_camelcase",
      "test_to_or_query",
      "test_to_snake_case",
      "test_to_wildcard_query"
    ],
    "src/extractors/base.rs": [
      "BaseExtractor",
      "ContextConfig",
      "ExtractionResults",
      "HashMap",
      "Identifier",
      "IdentifierKind",
      "Node",
      "Relationship",
      "RelationshipKind",
      "Symbol",
      "SymbolKind",
      "SymbolOptions",
      "TypeInfo",
      "Visibility",
      "create_identifier",
      "create_relationship",
      "create_symbol",
      "default",
      "extract_code_context",
      "extract_documentation",
      "extract_identifier_name",
      "extract_visibility",
      "find_child_by_type",
      "find_child_by_types",
      "find_children_by_type",
      "find_containing_symbol",
      "find_doc_comment",
      "find_nodes_by_type",
      "find_nodes_by_type_recursive",
      "find_parent_of_type",
      "fmt",
      "fmt",
      "fmt",
      "fmt",
      "from_string",
      "from_string",
      "from_string",
      "generate_id",
      "get_children_of_type",
      "get_context_config",
      "get_field_text",
      "get_node_text",
      "get_results",
      "has_error",
      "md5",
      "new",
      "reset",
      "set_context_config",
      "traverse_tree",
      "truncate_string",
      "walk_tree"
    ],
    "src/tools/navigation/fast_goto.rs": [
      "DefinitionResult",
      "FastGotoResult",
      "FastGotoTool",
      "JsonSchema",
      "JulieServerHandler",
      "Result",
      "Symbol",
      "call_tool",
      "create_result",
      "database_find_definitions_in_reference",
      "debug",
      "default_workspace",
      "find_definitions",
      "format_optimized_results",
      "generate_naming_variants",
      "mcp_tool",
      "reference_workspace",
      "semantic_matching"
    ],
    "src/extractors/lua/mod.rs": [
      "LuaExtractor",
      "Tree",
      "base",
      "base_mut",
      "classes",
      "core",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbols",
      "functions",
      "helpers",
      "identifiers",
      "new",
      "relationships",
      "tables",
      "variables"
    ],
    "fixtures/editing/controls/refactor/replace_finduserbyid_body.ts": [
      "./logger",
      "Anonymous",
      "DEFAULT_ROLES",
      "Permission",
      "Permission",
      "Role",
      "Role",
      "User",
      "User",
      "UserService",
      "UserService",
      "action",
      "cache",
      "cachedUser",
      "constructor",
      "createUser",
      "createdAt",
      "delay",
      "email",
      "emailRegex",
      "existingUser",
      "export",
      "fetchUserFromDatabase",
      "findUserById",
      "generateId",
      "hasPermission",
      "id",
      "id",
      "logger",
      "name",
      "name",
      "permissions",
      "resource",
      "roles",
      "saveUserToDatabase",
      "updateUser",
      "updatedUser",
      "user",
      "user",
      "validateEmail",
      "validateEmail"
    ],
    "fixtures/real-world/kotlin/ModelUser.kt": [
      "ModelUser",
      "main",
      "model",
      "test_repo"
    ],
    "src/extractors/html/attributes.rs": [
      "AttributeHandler",
      "BaseExtractor",
      "HashMap",
      "Regex",
      "build_element_signature",
      "get_important_attributes",
      "get_priority_attributes_for_tag",
      "is_interesting_attribute",
      "parse_attributes_from_text",
      "should_include_text_content"
    ],
    "src/extractors/typescript/relationships.rs": [
      "TypeScriptExtractor",
      "extract_call_relationships",
      "extract_inheritance_relationships",
      "extract_relationships",
      "find_containing_function"
    ],
    "src/extractors/regex/groups.rs": [
      "extract_group_name",
      "is_capturing_group"
    ],
    "src/extractors/regex/classes.rs": [
      "is_negated_class"
    ],
    "src/extractors/sql/mod.rs": [
      "HashMap",
      "SQL_TYPE_RE",
      "SqlExtractor",
      "Tree",
      "constraints",
      "error_handling",
      "extract_identifier_from_node",
      "extract_identifiers",
      "extract_relationships",
      "extract_select_aliases",
      "extract_symbols",
      "extract_view_columns",
      "extract_view_columns_from_error_node",
      "find_containing_symbol_id",
      "helpers",
      "infer_types",
      "new",
      "relationships",
      "routines",
      "schemas",
      "visit_node",
      "walk_tree_for_identifiers"
    ],
    "src/extractors/powershell/helpers.rs": [
      "BaseExtractor",
      "Node",
      "extract_enum_member_value",
      "extract_function_name_from_param_block",
      "extract_inheritance",
      "extract_parameter_attributes",
      "extract_property_type",
      "extract_return_type",
      "find_class_name_node",
      "find_command_name_node",
      "find_configuration_name_node",
      "find_enum_member_name_node",
      "find_enum_name_node",
      "find_function_name_node",
      "find_method_name_node",
      "find_nodes_by_type",
      "find_parameter_name_node",
      "find_property_name_node",
      "find_variable_name_node",
      "has_attribute",
      "has_modifier",
      "has_parameter_attribute"
    ],
    "fixtures/editing/controls/line-edit/line_edit_replace_function.py": [
      "calculate_average",
      "data",
      "main",
      "result",
      "total"
    ],
    "src/tests/extractors/java/interface_tests.rs": [
      "PathBuf",
      "interface_tests",
      "test_extract_interface_definitions",
      "test_extract_interface_methods"
    ],
    "fixtures/real-world/go/main.go": [
      "DemoStruct",
      "Field",
      "Helper",
      "UsingHelper",
      "fmt",
      "main",
      "main"
    ],
    "src/tests/extractors/vue/parsing.rs": [
      "parse_vue_sfc",
      "test_parse_vue_sfc_basic",
      "test_parse_vue_sfc_with_lang_attributes",
      "test_parse_vue_sfc_without_closing_tags"
    ],
    "src/utils/token_estimation.rs": [
      "CHARS_PER_TOKEN",
      "CHAR_WEIGHT",
      "CJK_CHARS_PER_TOKEN",
      "TokenEstimator",
      "WORDS_PER_TOKEN_MULTIPLIER",
      "WORD_WEIGHT",
      "contains_cjk",
      "default",
      "estimate_string",
      "estimate_string_hybrid",
      "estimate_words",
      "new"
    ],
    "src/tests/extractors/rust/signatures.rs": [
      "test_signature_extraction",
      "tests"
    ],
    "src/extractors/gdscript/mod.rs": [
      "GDScriptExtractor",
      "classes",
      "determine_effective_parent_id",
      "enums",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbols",
      "functions",
      "helpers",
      "identifiers",
      "new",
      "signals",
      "traverse_node",
      "types",
      "variables"
    ],
    "src/tests/integration/query_preprocessor_tests.rs": [
      "fts5_sanitization",
      "integration_tests",
      "pattern_query_processing",
      "query_type_detection",
      "snake_case_tokenization_bug",
      "standard_query_processing",
      "symbol_query_processing",
      "test_allow_embedded_wildcard",
      "test_allow_glob_wildcards",
      "test_allow_trailing_wildcard",
      "test_camelcase_doesnt_need_token_workaround",
      "test_csharp_nullable_type_sanitization",
      "test_detect_camelcase_symbol_query",
      "test_detect_constant_symbol_query",
      "test_detect_filename_with_path",
      "test_detect_glob_pattern",
      "test_detect_nested_glob_pattern",
      "test_detect_operator_query",
      "test_detect_pattern_with_brackets",
      "test_detect_pattern_with_code_syntax",
      "test_detect_simple_filename_as_glob",
      "test_detect_simple_symbol_query",
      "test_detect_snake_case_symbol_query",
      "test_detect_standard_text_query",
      "test_end_to_end_invalid_query_rejection",
      "test_end_to_end_pattern_sanitization",
      "test_end_to_end_symbol_search",
      "test_glob_pattern_dot_sanitization",
      "test_preserve_code_operators",
      "test_preserve_optional_chaining",
      "test_preserve_scope_resolution",
      "test_process_async_keyword_pattern",
      "test_process_attribute_pattern",
      "test_process_function_keyword",
      "test_process_impl_trait_pattern",
      "test_process_interface_keyword",
      "test_process_lambda_operator",
      "test_process_multi_word_query",
      "test_process_phrase_query",
      "test_process_simple_symbol",
      "test_process_symbol_with_noise_words",
      "test_reject_pure_wildcard_double_star",
      "test_reject_pure_wildcard_question",
      "test_reject_pure_wildcard_star",
      "test_reject_pure_wildcard_triple_star",
      "test_sanitize_leading_wildcard",
      "test_sanitize_regex_alternation",
      "test_sanitize_regex_end_anchor",
      "test_sanitize_regex_escaped_dot",
      "test_sanitize_regex_pattern_with_dot_star",
      "test_search_deleted_should_find_handle_file_deleted",
      "test_search_partial_snake_case_token",
      "test_search_scope_resolution_with_separator",
      "test_search_snake_case_function_name",
      "wildcard_validation"
    ],
    "fixtures/real-world/python/test_database.py": [
      "Any",
      "AsyncMock",
      "CallInfo",
      "CodeEntity",
      "CodeEntityFactory",
      "Dict",
      "List",
      "MillerDatabase",
      "Mock",
      "ParameterInfo",
      "Path",
      "ReturnInfo",
      "TestCodeEntityFactory",
      "TestConcurrency",
      "TestCrossLanguageFeatures",
      "TestDatabaseInitialization",
      "TestDatabaseStatistics",
      "TestEntityOperations",
      "TestErrorHandling",
      "TestGraphRelationships",
      "TestPerformance",
      "TestSearchOperations",
      "TypeInfo",
      "add_tasks",
      "asyncio",
      "backend_entity",
      "calls",
      "code_snippet",
      "count",
      "count",
      "count",
      "counts",
      "custom_embedding",
      "db",
      "db",
      "db",
      "db",
      "db_path",
      "duration",
      "end_time",
      "entities",
      "entities",
      "entities",
      "entities_set_1",
      "entities_set_2",
      "entity",
      "entity",
      "entity_data",
      "entity_data",
      "entity_data",
      "entity_data",
      "entity_names",
      "extends",
      "extends",
      "frontend_entity",
      "implements",
      "implements",
      "invalid_entity",
      "invalid_retrieved",
      "json",
      "json",
      "original_table",
      "params",
      "patch",
      "pytest",
      "pytest_asyncio",
      "result",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "results",
      "retrieved",
      "retrieved",
      "retrieved",
      "retrieved",
      "retrieved",
      "returns",
      "sample_entities",
      "search_tasks",
      "semantic_duration",
      "shutil",
      "start_time",
      "start_time",
      "start_time",
      "stats",
      "stats",
      "stats",
      "stats",
      "stats",
      "temp_db",
      "temp_dir",
      "temp_dir",
      "temp_dir",
      "temp_dir",
      "tempfile",
      "test_add_entities_batch",
      "test_add_entities_batch_with_invalid_data",
      "test_add_entity_generates_embedding",
      "test_add_entity_with_existing_embedding",
      "test_add_entity_with_invalid_data",
      "test_api_endpoint_mapping",
      "test_batch_addition_performance",
      "test_concurrent_additions",
      "test_concurrent_searches",
      "test_create_class",
      "test_create_function",
      "test_database_table_mapping",
      "test_entity",
      "test_entity_with_call_relationships",
      "test_entity_with_type_relationships",
      "test_find_similar_code",
      "test_get_entity_by_id_not_found",
      "test_get_statistics_empty_db",
      "test_get_statistics_with_data",
      "test_hybrid_search",
      "test_index_size_calculation",
      "test_initialize_creates_directory",
      "test_initialize_creates_tantivy_indexes",
      "test_initialize_opens_existing_table",
      "test_initialize_with_mock_failure",
      "test_search_performance",
      "test_search_without_initialization",
      "test_semantic_search",
      "test_semantic_search_handles_exceptions",
      "test_statistics_handles_exceptions",
      "test_text_search",
      "test_text_search_handles_exceptions",
      "test_text_search_with_limit",
      "text_duration",
      "time",
      "time",
      "valid_retrieved"
    ],
    "src/extractors/java/classes.rs": [
      "HashMap",
      "JavaExtractor",
      "Node",
      "extract_class",
      "extract_enum",
      "extract_enum_constant",
      "extract_interface",
      "extract_record",
      "helpers",
      "serde_json"
    ],
    "fixtures/editing/controls/auto-fix/unclosed_string.py": [
      "greet_user",
      "message"
    ],
    "src/tools/workspace/language.rs": [
      "ManageWorkspaceTool",
      "Path",
      "detect_language"
    ],
    "src/tests/extractors/typescript/mod.rs": [
      "IdentifierKind",
      "Parser",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "SymbolKind",
      "TypeScriptExtractor",
      "extractor",
      "functions",
      "helpers",
      "identifier_extraction",
      "identifiers",
      "imports_exports",
      "inference",
      "init_parser",
      "init_tsx_parser",
      "relationships",
      "relative_paths",
      "symbols",
      "test_chained_member_access",
      "test_extract_class_declarations",
      "test_extract_function_call_relationships",
      "test_extract_function_calls",
      "test_extract_function_declarations",
      "test_extract_inheritance_relationships",
      "test_extract_member_access",
      "test_extract_variable_and_property_declarations",
      "test_file_scoped_containing_symbol",
      "test_handle_function_return_types",
      "test_infer_basic_types",
      "test_no_duplicate_identifiers",
      "test_track_accurate_symbol_positions",
      "test_tsx_class_component_with_relationships",
      "test_tsx_jsx_elements_do_not_interfere",
      "test_tsx_react_component_symbols",
      "test_typescript_advanced_types",
      "test_typescript_decorators_and_metadata",
      "test_typescript_jsx_and_tsx",
      "test_typescript_module_augmentation",
      "test_typescript_utility_types",
      "tsx_specific_tests",
      "typescript_extractor_tests"
    ],
    "src/extractors/gdscript/classes.rs": [
      "HashMap",
      "Node",
      "Value",
      "collect_inheritance_info",
      "extract_class_definition",
      "extract_class_name_statement",
      "find_child_by_type"
    ],
    "fixtures/real-world/c/binary_search_tree.c": [
      "BST",
      "Node",
      "anonymous",
      "count_nodes",
      "create_node",
      "current",
      "delete",
      "delete_recursive",
      "destroy_bst",
      "find_max",
      "find_min",
      "find_minimum",
      "found",
      "free_tree",
      "height",
      "i",
      "i",
      "init_bst",
      "initial_size",
      "inorder_traversal",
      "insert",
      "insert_recursive",
      "left_height",
      "main",
      "min_node",
      "new_node",
      "node",
      "node",
      "node",
      "num_search",
      "num_values",
      "original_root",
      "preorder_traversal",
      "right_height",
      "search",
      "search_recursive",
      "search_values",
      "stdbool.h",
      "stdio.h",
      "stdlib.h",
      "temp",
      "temp",
      "temp",
      "tree",
      "tree",
      "values"
    ],
    "src/extractors/go/specs.rs": [
      "Node",
      "extract_const_spec",
      "extract_const_symbols",
      "extract_import_spec",
      "extract_import_symbols",
      "extract_var_spec",
      "extract_var_symbols"
    ],
    "src/extractors/typescript/interfaces.rs": [
      "Node",
      "TypeScriptExtractor",
      "extract_enum",
      "extract_interface",
      "extract_namespace",
      "extract_property",
      "extract_type_alias"
    ],
    "src/tests/extractors/css/at_rules.rs": [
      "SymbolKind",
      "extract_symbols",
      "test_extract_media_keyframes_import_and_other_at_rules",
      "tests"
    ],
    "src/extractors/powershell/types.rs": [
      "BOOL_VAR_RE",
      "FLOAT_RE",
      "HashMap",
      "INTEGER_RE",
      "LazyLock",
      "Regex",
      "TYPE_ANNOTATION_RE",
      "TYPE_BRACKET_RE",
      "infer_types",
      "is_type_bracket"
    ],
    "src/tests/extractors/lua/variables.rs": [
      "test_variable_extraction_basic"
    ],
    "fixtures/real-world/rust/main.rs": [
      "add",
      "main"
    ],
    "src/extractors/c/helpers.rs": [
      "BaseExtractor",
      "collect_all_identifiers",
      "contains_struct",
      "extract_enum_name",
      "extract_function_name",
      "extract_function_name_from_declaration",
      "extract_include_path",
      "extract_macro_name",
      "extract_struct_name",
      "extract_variable_name",
      "find_deepest_identifier",
      "find_function_declarator",
      "find_node_by_type",
      "find_variable_declarators",
      "is_array_variable",
      "is_const_variable",
      "is_extern_variable",
      "is_static_function",
      "is_system_header",
      "is_typedef_declaration",
      "is_valid_typedef_name",
      "is_volatile_variable",
      "looks_like_typedef_name"
    ],
    "src/extractors/php/namespaces.rs": [
      "HashMap",
      "Node",
      "extract_namespace",
      "extract_use",
      "extract_variable_assignment"
    ],
    "src/tests/extractors/cpp/exceptions.rs": [
      "test_extract_exception_handling_and_raii_patterns",
      "tests"
    ],
    "src/tests/core/tracing.rs": [
      "EmbeddingEngine",
      "HashMap",
      "SymbolDatabase",
      "create_test_symbol",
      "create_test_tracer",
      "test_layer_detection",
      "test_revolutionary_cross_language_tracing",
      "tests"
    ],
    "src/tests/extractors/zig/mod.rs": [
      "IdentifierKind",
      "PathBuf",
      "PathBuf",
      "SymbolKind",
      "SymbolKind",
      "SymbolKind",
      "SymbolKind",
      "ZigExtractor",
      "ZigExtractor",
      "async_and_concurrency",
      "comptime_and_metaprogramming",
      "error_handling_and_optionals",
      "extract_relationships",
      "extract_symbols",
      "extract_symbols",
      "extract_symbols",
      "extract_symbols",
      "extractor",
      "init_parser",
      "init_parser",
      "test_extract_async_functions_and_event_loops",
      "test_extract_comptime_metaprogramming_and_generics",
      "test_extract_error_handling_unions_and_optionals",
      "test_extract_functions_with_error_handling_and_optionals",
      "test_extract_memory_management_and_c_interop",
      "test_extract_structs_unions_and_enums",
      "test_extract_test_functions_and_build_configurations",
      "test_infer_types_and_extract_relationships",
      "test_zig_chained_member_access",
      "test_zig_duplicate_calls_at_different_locations",
      "test_zig_function_calls",
      "test_zig_identifiers_have_containing_symbol",
      "test_zig_member_access",
      "zig_extractor_tests",
      "zig_identifier_extraction_tests"
    ],
    "src/extractors/cpp/types.rs": [
      "Node",
      "extract_class",
      "extract_enum",
      "extract_enum_member",
      "extract_struct",
      "extract_union",
      "helpers"
    ],
    "fixtures/real-world/ruby/models.rb": [
      "<<self",
      "@email",
      "@email",
      "@email",
      "@id",
      "@id",
      "@id",
      "@items",
      "@items",
      "@name",
      "@name",
      "@name",
      "@name",
      "@price",
      "@price",
      "@price",
      "@total",
      "@total",
      "@total",
      "Item",
      "Item",
      "ItemHelpers",
      "ItemHelpers",
      "ItemHelpers",
      "Order",
      "Order",
      "UnknownClass",
      "UnknownClass",
      "UnknownClass",
      "UnknownClass",
      "UnknownModule",
      "User",
      "User",
      "add_item",
      "calculate_tax",
      "calculate_total",
      "default_user",
      "description",
      "discounted_price",
      "format_price",
      "from_hash",
      "full_info",
      "id",
      "id",
      "info",
      "info",
      "initialize",
      "initialize",
      "initialize",
      "tax",
      "to_hash",
      "total_with_tax"
    ],
    "src/tests/extractors/cpp/concurrency.rs": [
      "parse_cpp",
      "test_extract_threading_async_and_synchronization_primitives",
      "tests"
    ],
    "src/tests/extractors/lua/file_operations.rs": [
      "PathBuf",
      "PathBuf",
      "test_file_io_and_path_operations",
      "tests"
    ],
    "src/extractors/regex/patterns.rs": [
      "HashMap",
      "Node",
      "Value",
      "create_metadata",
      "extract_alternation",
      "extract_anchor",
      "extract_atomic_group",
      "extract_backreference",
      "extract_character_class",
      "extract_comment",
      "extract_conditional",
      "extract_generic_pattern",
      "extract_group",
      "extract_literal",
      "extract_lookaround",
      "extract_pattern",
      "extract_predefined_class",
      "extract_quantifier",
      "extract_unicode_property"
    ],
    "src/tests/extractors/regex/classes.rs": [
      "is_negated_class",
      "test_is_negated_class"
    ],
    "src/tests/extractors/javascript/relationships.rs": [
      "PathBuf",
      "RelationshipKind",
      "test_extract_call_relationships",
      "test_extract_inheritance_relationships"
    ],
    "src/tests/integration/tracing.rs": [
      "Arc",
      "EmbeddingEngine",
      "HashMap",
      "SearchEngine",
      "SymbolDatabase",
      "create_auth_service_login",
      "create_csharp_auth_controller",
      "create_csharp_user_service",
      "create_login_button_symbol",
      "create_mock_tracer",
      "create_users_table_symbol",
      "cross_language_tracing_tests",
      "dogfooding_tests",
      "tempfile",
      "test_api_pattern_matching",
      "test_complete_frontend_to_database_trace",
      "test_confidence_scoring",
      "test_cycle_detection",
      "test_direct_relationship_tracing",
      "test_error_handling",
      "test_fixtures",
      "test_layer_detection",
      "test_semantic_cross_language_matching",
      "test_trace_julie_indexing_flow",
      "test_trace_julie_search_flow",
      "test_trace_summary_generation",
      "test_tracing_performance"
    ],
    "src/tests/extractors/css/responsive.rs": [
      "SymbolKind",
      "test_extract_responsive_utilities_and_flexible_layouts",
      "tests"
    ],
    "src/tests/extractors/python/mod.rs": [
      "IdentifierKind",
      "PathBuf",
      "PythonExtractor",
      "Tree",
      "assignments",
      "create_extractor_and_parse",
      "create_extractor_and_parse",
      "decorators",
      "extractor",
      "functions",
      "helpers",
      "identifier_extraction",
      "identifiers",
      "imports",
      "python_extractor_tests",
      "relationships",
      "signatures",
      "test_chained_member_access",
      "test_comprehensive_python_code",
      "test_extract_basic_class_definitions",
      "test_extract_class_methods",
      "test_extract_classes_with_decorators",
      "test_extract_decorated_functions",
      "test_extract_function_calls",
      "test_extract_function_definitions_with_type_hints",
      "test_extract_import_statements",
      "test_extract_imports_with_comments",
      "test_extract_inheritance_relationships",
      "test_extract_lambda_functions",
      "test_extract_member_access",
      "test_extract_method_call_relationships",
      "test_extract_modern_python_features",
      "test_extract_multiple_assignments",
      "test_extract_variable_assignments_with_type_hints",
      "test_extract_variables_with_docstring_comments",
      "test_file_scoped_containing_symbol",
      "test_infer_types_from_annotations",
      "test_no_duplicate_identifiers",
      "types"
    ],
    "src/tests/extractors/css/doc_comments.rs": [
      "extract_symbols",
      "test_comment_before_supports_rule",
      "test_extract_css_comment_from_custom_property",
      "test_extract_css_comment_from_keyframes",
      "test_extract_css_comment_from_media_query",
      "test_extract_css_comment_from_rule",
      "test_multiline_block_comment_on_rule",
      "test_rule_without_comment_has_no_doc_comment",
      "tests"
    ],
    "UTF8_FIX.md": [],
    "src/extractors/ruby/assignments.rs": [
      "Node",
      "extract_assignment",
      "extract_assignment_symbols",
      "extract_parallel_assignment_fallback",
      "handle_parallel_assignment",
      "infer_symbol_kind_from_assignment"
    ],
    "src/tests/extractors/c/mod.rs": [
      "CExtractor",
      "PathBuf",
      "advanced",
      "basics",
      "doxygen_comments",
      "extract_symbols",
      "extract_symbols_with_name",
      "identifier_extraction",
      "init_parser",
      "parse_c",
      "pointers",
      "preprocessor",
      "relationships"
    ],
    "src/tests/extractors/lua/doc_comments.rs": [
      "LuaExtractor",
      "PathBuf",
      "SymbolKind",
      "extract_symbols",
      "test_extract_luadoc_block_comment_from_table",
      "test_extract_luadoc_from_local_function",
      "test_extract_luadoc_from_variable",
      "test_extract_luadoc_single_line_comment_from_function",
      "test_extract_luadoc_with_param_tags",
      "test_luadoc_block_comment_multiline",
      "test_no_doc_comment_for_undocumented_function",
      "tests"
    ],
    "src/extractors/vue/style.rs": [
      "BaseExtractor",
      "CSS_CLASS_RE",
      "SymbolKind",
      "VueSection",
      "extract_style_symbols"
    ],
    "src/tests/extractors/sql/indexes.rs": [
      "SymbolKind",
      "test_extract_indexes_and_performance_optimizations",
      "tests"
    ],
    "src/extractors/ruby/identifiers.rs": [
      "HashMap",
      "extract_identifier_from_node",
      "extract_identifiers",
      "extract_method_name_from_call",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/tests/extractors/typescript/helpers.rs": [
      "Node",
      "PathBuf",
      "find_function",
      "has_modifier",
      "test_has_modifier",
      "tests"
    ],
    "src/tools/workspace/indexing/extractor.rs": [
      "ManageWorkspaceTool",
      "Result",
      "Tree",
      "debug",
      "extract_symbols_with_existing_tree",
      "should_extract_symbols"
    ],
    "src/extractors/razor/helpers.rs": [
      "Node",
      "Visibility",
      "determine_visibility",
      "extract_attributes",
      "extract_method_parameters",
      "extract_modifiers",
      "extract_namespace_name",
      "extract_property_type",
      "extract_return_type",
      "find_child_by_type",
      "find_child_by_types",
      "is_valid_node"
    ],
    "fixtures/real-world/csharp-advanced/EnterpriseDataEmailModels.cs": [
      "AttachmentsHtml",
      "AttachmentsHtml",
      "DataTeamNotificationEmailModel",
      "DenialReason",
      "DevOpsUrl",
      "LongDescription",
      "LongDescription",
      "LongDescription",
      "LongDescription",
      "LongDescription",
      "LongDescription",
      "PrimaryDataSponsorEmailModel",
      "RequestApprovalEmailModel",
      "RequestDenialEmailModel",
      "RequestorConfirmationEmailModel",
      "RiskManagementApprovalEmailModel",
      "SecondaryDataSponsorEmailModel",
      "ShortDescription",
      "ShortDescription",
      "ShortDescription",
      "ShortDescription",
      "ShortDescription",
      "ShortDescription",
      "WorkItemId",
      "WorkItemId",
      "WorkItemId",
      "WorkItemId",
      "WorkItemId",
      "WorkItemUrl",
      "WorkItemUrl"
    ],
    "src/extractors/bash/variables.rs": [
      "Node",
      "extract_declaration",
      "extract_variable",
      "is_environment_variable",
      "is_exported_variable"
    ],
    "src/tests/extractors/csharp/language_features.rs": [
      "PathBuf",
      "test_advanced_generic_and_type_features",
      "test_linq_and_lambda_expressions",
      "test_modern_csharp_async_await_patterns",
      "test_modern_csharp_pattern_matching",
      "test_relationship_extraction",
      "tests"
    ],
    "src/tests/integration/lock_contention.rs": [
      "Arc",
      "Duration",
      "JulieServerHandler",
      "Result",
      "test_concurrent_tool_execution_during_indexing",
      "test_database_access_during_hnsw_build",
      "test_database_lock_released_before_hnsw_build",
      "test_lock_hold_time_is_minimal",
      "test_workspace_access_during_vector_store_init",
      "timeout"
    ],
    "src/tests/extractors/gdscript/mod.rs": [
      "GDScriptExtractor",
      "PathBuf",
      "classes",
      "extract_symbols",
      "extract_symbols_and_relationships",
      "functions",
      "identifier_extraction",
      "init_parser",
      "modern",
      "patterns",
      "resources",
      "scenes",
      "signals",
      "ui"
    ],
    "src/tests/core/database.rs": [
      "BaseExtractor",
      "Connection",
      "HashMap",
      "Parser",
      "PathBuf",
      "TempDir",
      "test_bulk_store_symbols_for_existing_file_paths",
      "test_complete_symbol_field_persistence",
      "test_cross_language_semantic_grouping",
      "test_database_creation",
      "test_debug_foreign_key_constraint",
      "test_extractor_database_integration",
      "test_file_info_storage",
      "test_fts5_corruption_with_insert_or_replace",
      "test_fts5_rebuild_after_replace",
      "test_fts_file_pattern_normalization",
      "test_fts_search_file_content",
      "test_fts_search_ranks_by_relevance",
      "test_fts_search_with_file_pattern_and_language",
      "test_fts_triggers_work_after_migration",
      "test_individual_table_creation",
      "test_migration_adds_content_column",
      "test_migration_fresh_database_at_latest_version",
      "test_migration_from_legacy_v1_database",
      "test_migration_idempotent",
      "test_migration_version_table_exists",
      "test_minimal_database_creation",
      "test_relationship_with_id_field",
      "test_sanitize_fts5_query_dot_character",
      "test_store_file_with_content",
      "test_symbol_storage_and_retrieval",
      "test_symbol_with_metadata_and_semantic_fields"
    ],
    "src/tools/refactoring/utils.rs": [
      "SmartRefactorTool",
      "dedent_code",
      "detect_base_indentation",
      "detect_language",
      "optimize_response"
    ],
    "src/extractors/vue/identifiers.rs": [
      "HashMap",
      "create_identifier_with_offset",
      "extract_identifier_from_node_with_content",
      "extract_identifiers",
      "find_containing_symbol_id",
      "get_node_text_from_content",
      "parse_script_section",
      "walk_tree_for_identifiers_with_content"
    ],
    "src/extractors/java/methods.rs": [
      "JavaExtractor",
      "Node",
      "extract_constructor",
      "extract_method",
      "helpers"
    ],
    "src/extractors/ruby/calls.rs": [
      "Node",
      "extract_attr_accessor",
      "extract_call",
      "extract_def_delegator",
      "extract_define_method",
      "extract_method_name_from_call",
      "extract_require"
    ],
    "src/tests/core/handler.rs": [
      "Arc",
      "Duration",
      "JulieServerHandler",
      "McpServer",
      "NoopServer",
      "Result",
      "SdkResult",
      "ServerHandler",
      "client_info",
      "send",
      "send_batch",
      "server_info",
      "set_client_details",
      "start",
      "stderr_message",
      "tool_lock_not_held_during_tool_execution",
      "wait_for_initialization"
    ],
    "src/extractors/ruby/signatures.rs": [
      "Node",
      "build_class_signature",
      "build_method_signature",
      "build_module_signature",
      "build_singleton_method_signature",
      "extract_return_statements_from_body"
    ],
    "src/extractors/cpp/functions.rs": [
      "Node",
      "extract_basic_return_type",
      "extract_const_qualifier",
      "extract_function",
      "extract_function_modifiers",
      "extract_function_name",
      "extract_function_parameters",
      "extract_method",
      "extract_method_modifiers",
      "extract_noexcept_specifier",
      "extract_trailing_return_type",
      "is_constructor"
    ],
    "src/tests/extractors/typescript/symbols.rs": [
      "PathBuf",
      "SymbolKind",
      "TypeScriptExtractor",
      "test_visit_all_symbol_kinds"
    ],
    "src/extractors/swift/types.rs": [
      "HashMap",
      "Node",
      "SwiftExtractor",
      "extract_class",
      "extract_enum",
      "extract_protocol",
      "extract_struct",
      "serde_json"
    ],
    "src/tests/extractors/razor/mod.rs": [
      "IdentifierKind",
      "PathBuf",
      "RazorExtractor",
      "extract_relationships",
      "extract_symbols",
      "init_parser",
      "razor_extractor_tests",
      "razor_identifier_extraction_tests",
      "relationships",
      "test_extract_component_parameters_events_and_lifecycle_methods",
      "test_extract_component_relationships_and_dependencies",
      "test_extract_html_comment_from_razor_html",
      "test_extract_layout_inheritance_sections_and_viewimports",
      "test_extract_page_directives_model_bindings_and_basic_syntax",
      "test_extract_razor_comment_from_csharp_method_xml_doc",
      "test_extract_razor_comment_from_page_directive",
      "test_extract_two_way_binding_event_handlers_and_form_validation",
      "test_infer_types_from_razor_code_blocks_and_csharp_syntax",
      "test_razor_chained_member_access",
      "test_razor_duplicate_calls_at_different_locations",
      "test_razor_function_calls",
      "test_razor_identifiers_have_containing_symbol",
      "test_razor_member_access"
    ],
    "src/extractors/zig/functions.rs": [
      "HashMap",
      "Node",
      "extract_function",
      "extract_function_signature",
      "extract_parameter",
      "extract_test",
      "is_inline_function"
    ],
    "src/tools/refactoring/types.rs": [
      "AutoFixResult",
      "DelimiterError",
      "JsonSchema",
      "RefactorOperation",
      "SmartRefactorResult",
      "SyntaxError"
    ],
    "src/extractors/php/helpers.rs": [
      "Node",
      "PhpExtractor",
      "Visibility",
      "determine_visibility",
      "extract_modifiers",
      "find_child",
      "find_child_text"
    ],
    "src/extractors/bash/functions.rs": [
      "HashSet",
      "LazyLock",
      "Node",
      "PARAM_NUMBER_RE",
      "Regex",
      "extract_function",
      "extract_positional_parameters"
    ],
    "fixtures/test-workspaces/tiny-reference/src/types.rs": [
      "ReferenceProduct",
      "discounted_price",
      "new",
      "process_reference_data"
    ],
    "src/tests/extractors/zig/extractor.rs": [
      "PathBuf",
      "SymbolKind",
      "ZigExtractor",
      "test_zig_basic_extraction",
      "test_zig_doc_comment_on_const",
      "test_zig_doc_comment_on_enum",
      "test_zig_doc_comment_on_function",
      "test_zig_doc_comment_on_struct",
      "test_zig_no_doc_comment_when_missing",
      "test_zig_struct_extraction"
    ],
    "src/extractors/dart/members.rs": [
      "HashMap",
      "Node",
      "extract_field",
      "extract_getter",
      "extract_setter"
    ],
    "src/tests/extractors/razor/relationships.rs": [
      "RelationshipKind",
      "test_component_identifier_relationship",
      "test_component_invoke_async_relationship_targets_component_symbol",
      "test_injected_service_identifier_does_not_create_component_relationship",
      "test_method_invocation_relationship"
    ],
    "src/tests/integration/fts5_integrity.rs": [
      "Result",
      "Symbol",
      "SymbolDatabase",
      "TempDir",
      "Visibility",
      "create_test_symbol",
      "fs",
      "test_files_fts5_integrity_check_detects_missing_entries",
      "test_fts5_integrity_check_detects_missing_entries",
      "test_fts5_integrity_check_with_healthy_database"
    ],
    "src/tests/extractors/html/media.rs": [
      "test_extract_multimedia_elements_svg_canvas_and_embedded_content",
      "tests"
    ],
    "src/tests/tools/editing/mod.rs": [
      "DirGuard",
      "EditingTransaction",
      "change_to",
      "commit_creates_temp_file_in_same_directory_for_relative_paths",
      "drop",
      "edit_lines",
      "env",
      "fs",
      "fuzzy_replace",
      "transactional_editing_tests"
    ],
    "src/tests/tools/editing/transactional_editing_tests.rs": [
      "PathBuf",
      "Result",
      "TempDir",
      "TransactionalTestFixture",
      "create_test_file",
      "fs",
      "get_temp_dir",
      "new",
      "test_atomic_write_no_partial_corruption",
      "test_concurrent_transactions_safe",
      "test_emergency_cleanup_orphaned_temp_files",
      "test_large_file_memory_efficiency",
      "test_multi_file_transaction_all_succeed",
      "test_multi_file_transaction_failure_rollback",
      "test_single_file_transaction_commit",
      "test_single_file_transaction_rollback",
      "transactional_editing_tests",
      "verify_no_backup_files"
    ],
    "src/tests/tools/search/semantic_scoring_tests.rs": [
      "HashMap",
      "apply_all_boosts",
      "create_html_element_symbol",
      "create_symbol",
      "create_symbol_with_doc",
      "get_doc_comment_boost",
      "get_language_quality_boost",
      "test_doc_comment_boost_calculation",
      "test_documented_class_beats_generic_html",
      "test_generic_symbol_detection",
      "test_language_quality_boost"
    ],
    "src/extractors/gdscript/identifiers.rs": [
      "HashMap",
      "Node",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "fixtures/real-world/ruby/services.rb": [
      "@items",
      "@items",
      "@items",
      "@users",
      "@users",
      "@users",
      "@users[id]",
      "ItemService",
      "ItemService",
      "ItemService",
      "ItemService",
      "Services",
      "Services",
      "Services",
      "Services",
      "Services",
      "Services",
      "UnknownClass",
      "UnknownClass",
      "UnknownModule",
      "User",
      "UserService",
      "UserService",
      "UserService",
      "UserService",
      "add_item",
      "create_service_container",
      "create_user",
      "delete_user",
      "find_item",
      "get_user",
      "initialize",
      "initialize",
      "item_service_instance",
      "lib.rb",
      "models.rb",
      "user",
      "user_service_instance",
      "users",
      "validate_user_data"
    ],
    "src/tests/extractors/cpp/robustness.rs": [
      "parse_cpp",
      "test_handle_malformed_code_complex_nesting_and_preprocessor_directives",
      "tests"
    ],
    "JULIE_AGENT_INSTRUCTIONS.md": [],
    "src/tests/utils/path_relevance/tests.rs": [
      "Path",
      "PathRelevanceScorer",
      "path_relevance_tests",
      "test_combined_scoring_scenarios",
      "test_directory_scoring_verified_weights",
      "test_no_penalty_when_searching_test",
      "test_penalty_when_not_searching_test",
      "test_production_boost",
      "test_realistic_codesearch_scenarios",
      "test_search_context_awareness",
      "test_test_file_detection"
    ],
    "src/extractors/php/relationships.rs": [
      "HashMap",
      "Node",
      "extract_class_relationships",
      "extract_interface_relationships",
      "find_class_symbol",
      "find_interface_symbol"
    ],
    "fixtures/editing/controls/line-edit/line_edit_delete_comment.py": [
      "calculate_sum",
      "data",
      "main",
      "result",
      "total"
    ],
    "src/extractors/ruby/symbols.rs": [
      "Node",
      "extract_alias",
      "extract_class",
      "extract_constant",
      "extract_method",
      "extract_module",
      "extract_singleton_class",
      "extract_singleton_method",
      "extract_variable",
      "signatures"
    ],
    "src/tests/extractors/java/extractor.rs": [
      "JavaExtractor",
      "PathBuf",
      "init_parser",
      "test_extract_javadoc_on_class",
      "test_extract_javadoc_on_enum",
      "test_extract_javadoc_on_field",
      "test_extract_javadoc_on_interface",
      "test_extract_javadoc_on_method",
      "test_no_javadoc_when_missing"
    ],
    "src/tests/extractors/c/basics.rs": [
      "test_extract_advanced_variadic_functions",
      "test_extract_basic_c_structures_and_declarations",
      "test_extract_complex_typedef_chains",
      "test_extract_static_extern_linkage_patterns",
      "tests"
    ],
    "src/extractors/lua/helpers.rs": [
      "BaseExtractor",
      "Node",
      "contains_function_definition",
      "find_child_by_type",
      "infer_type_from_expression"
    ],
    "fixtures/editing/sources/broken/rust_struct.rs": [
      "UserConfig"
    ],
    "src/tests/extractors/html/edge_cases.rs": [
      "edge_cases_tests",
      "test_extract_case_insensitive_tags",
      "test_extract_empty_and_whitespace",
      "test_extract_malformed_attributes",
      "test_extract_minimal_html",
      "test_extract_nested_quotes_and_escaping",
      "test_extract_unclosed_tags"
    ],
    "src/utils/context_truncation.rs": [
      "ContextTruncator",
      "default",
      "identify_essential_lines",
      "new",
      "smart_truncate",
      "truncate_lines"
    ],
    "fixtures/editing/sources/ast_edge_cases.ts": [
      "ExtendedUserService",
      "OtherService",
      "UserService",
      "UserService",
      "UserService",
      "UserService",
      "UserService",
      "UserService",
      "UserServiceType",
      "extendedMethod",
      "getService",
      "handleUser",
      "initializeUserService",
      "name",
      "processUsers",
      "userService",
      "userServiceConfig"
    ],
    "src/extractors/typescript/symbols.rs": [
      "Symbol",
      "TypeScriptExtractor",
      "extract_symbols",
      "visit_node"
    ],
    "TESTING.md": [],
    "fixtures/editing/sources/edge_cases.py": [
      "DataProcessor",
      "Dict",
      "List",
      "Optional",
      "__init__",
      "data",
      "json",
      "process_data",
      "validate_json"
    ],
    "src/extractors/bash/relationships.rs": [
      "Node",
      "extract_command_relationships",
      "extract_command_substitution_relationships",
      "extract_file_relationships"
    ],
    "src/tests/extractors/cpp/mod.rs": [
      "CppExtractor",
      "PathBuf",
      "classes",
      "concurrency",
      "doxygen_comments",
      "exceptions",
      "extract_symbols",
      "extract_symbols_and_relationships",
      "functions",
      "identifier_extraction",
      "init_parser",
      "modern",
      "namespaces",
      "parse_cpp",
      "robustness",
      "templates",
      "testing",
      "types"
    ],
    "src/tests/extractors/java/modern_java_tests.rs": [
      "PathBuf",
      "modern_java_tests",
      "test_extract_lambda_expressions",
      "test_extract_records",
      "test_extract_streams_and_optionals",
      "test_extract_text_blocks"
    ],
    "src/tests/tools/search/race_condition.rs": [
      "Arc",
      "Duration",
      "FastSearchTool",
      "GetSymbolsTool",
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "Result",
      "TempDir",
      "test_concurrent_searches_during_indexing",
      "test_fast_search_not_blocked_by_db_lock",
      "test_parallel_fast_search_with_get_symbols",
      "test_reference_workspace_reindex_does_not_lock",
      "test_reference_workspace_search",
      "test_search_after_indexing_complete",
      "test_search_during_initial_indexing",
      "tests",
      "timeout"
    ],
    "src/tools/search/mod.rs": [
      "FastSearchTool",
      "JsonSchema",
      "JulieServerHandler",
      "OptimizedResponse",
      "Result",
      "SystemStatus",
      "call_tool",
      "debug",
      "default_context_lines",
      "default_limit",
      "default_output",
      "default_search_method",
      "default_search_target",
      "default_workspace",
      "formatting",
      "hybrid_search",
      "line_mode",
      "mcp_tool",
      "preprocess_fallback_query",
      "query",
      "query_preprocessor",
      "resolve_workspace_filter",
      "scoring",
      "semantic_search",
      "text_search",
      "types"
    ],
    "src/tools/symbols.rs": [
      "GetSymbolsTool",
      "JsonSchema",
      "JulieServerHandler",
      "Result",
      "WorkspaceRegistryService",
      "call_tool",
      "default_limit",
      "default_max_depth",
      "default_mode",
      "default_workspace",
      "extract_code_bodies",
      "get_symbols_from_reference",
      "mcp_tool",
      "resolve_workspace_filter",
      "warn"
    ],
    "src/tests/extractors/typescript/identifiers.rs": [
      "IdentifierKind",
      "PathBuf",
      "TypeScriptExtractor",
      "test_extract_chained_member_access",
      "test_extract_function_calls",
      "test_extract_member_access"
    ],
    "src/tracing/mod.rs": [
      "ArchitecturalLayer",
      "ConfidenceScore",
      "ConnectionType",
      "CrossLanguageTracer",
      "DataFlowTrace",
      "EmbeddingEngine",
      "Result",
      "Symbol",
      "SymbolDatabase",
      "SymbolKind",
      "SymbolKind",
      "SymbolKind",
      "TraceOptions",
      "TraceStep",
      "Uuid",
      "calculate_confidence",
      "create_mock_backend_symbol",
      "create_mock_database_symbol",
      "default",
      "detect_layer",
      "find_direct_relationship",
      "find_next_step",
      "find_or_create_mock_symbol",
      "find_pattern_match",
      "find_semantic_connection",
      "get_flow_summary",
      "is_cross_layer_trace",
      "new",
      "trace_data_flow"
    ],
    "src/tests/tools/refactoring/smart_refactor_control.rs": [
      "Result",
      "Result",
      "SMART_REFACTOR_TEST_CASES",
      "SmartRefactorTestCase",
      "fs",
      "inner_test",
      "load_smart_refactor_control_file",
      "run_single_smart_refactor_control_test",
      "setup_smart_refactor_test_environment",
      "setup_smart_refactor_test_file",
      "simulate_rename_operation",
      "simulate_replace_symbol_body_operation",
      "smart_refactor_control_tests",
      "test_all_smart_refactor_control_scenarios",
      "test_ast_aware_rename_preserves_strings_and_comments",
      "test_doc_comment_updates_respect_flag",
      "test_smart_refactor_dry_run_safety",
      "test_smart_refactor_parameter_validation",
      "verify_smart_refactor_result"
    ],
    "src/extractors/go/identifiers.rs": [
      "HashMap",
      "Node",
      "extract_identifier_from_node",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/extractors/swift/signatures.rs": [
      "Node",
      "SwiftExtractor",
      "Visibility",
      "determine_visibility",
      "extract_generic_parameters",
      "extract_inheritance",
      "extract_initializer_parameters",
      "extract_modifiers",
      "extract_parameters",
      "extract_property_type",
      "extract_return_type",
      "extract_variable_type",
      "extract_where_clause"
    ],
    "src/utils/query_expansion.rs": [
      "expand_query",
      "expand_query_permissive",
      "to_camelcase",
      "to_fuzzy_query",
      "to_lowercase_camelcase",
      "to_or_query",
      "to_snake_case",
      "to_wildcard_query"
    ],
    "src/tests/tools/ast_symbol_finder.rs": [
      "Parser",
      "test_find_symbol_occurrences_typescript"
    ],
    "src/tests/tools/workspace/registry.rs": [
      "test_cross_platform_path_consistency",
      "test_generate_workspace_id",
      "test_sanitize_name",
      "test_windows_case_normalization",
      "test_windows_different_drives",
      "test_windows_path_normalization",
      "test_windows_path_with_spaces",
      "test_windows_short_path_names",
      "test_windows_unc_path",
      "test_workspace_entry_expiration"
    ],
    "src/extractors/python/helpers.rs": [
      "Node",
      "PythonExtractor",
      "extract_argument_list",
      "strip_string_delimiters"
    ],
    "fixtures/editing/sources/broken/nested_structures.js": [
      "Anonymous",
      "credentials",
      "host",
      "password",
      "port",
      "username"
    ],
    "src/extractors/zig/identifiers.rs": [
      "HashMap",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/extractors/zig/variables.rs": [
      "HashMap",
      "Node",
      "Regex",
      "extract_enum_assignment",
      "extract_error_set_assignment",
      "extract_function_type_assignment",
      "extract_generic_type_constructor",
      "extract_standard_variable",
      "extract_struct_assignment",
      "extract_union_assignment",
      "extract_variable"
    ],
    "src/tests/tools/refactoring/insert_relative_tests.rs": [
      "JulieServerHandler",
      "Result",
      "SmartRefactorTool",
      "TempDir",
      "extract_text",
      "fs",
      "test_insert_after_python_function",
      "test_insert_after_rust_struct",
      "test_insert_before_typescript_function",
      "test_insert_dry_run",
      "test_insert_invalid_position",
      "test_insert_missing_parameters",
      "test_insert_missing_symbol",
      "test_insert_preserves_indentation"
    ],
    "src/extractors/cpp/relationships.rs": [
      "HashMap",
      "extract_inheritance_from_class",
      "extract_relationships",
      "helpers",
      "walk_tree_for_relationships"
    ],
    "src/tools/search/formatting.rs": [
      "OptimizedResponse",
      "Symbol",
      "format_optimized_results",
      "truncate_code_context"
    ],
    "src/extractors/rust/helpers.rs": [
      "BaseExtractor",
      "ImplBlockInfo",
      "Node",
      "extract_derived_traits",
      "extract_doc_from_attribute",
      "extract_extern_modifier",
      "extract_visibility",
      "find_containing_function",
      "find_doc_comment",
      "get_preceding_attributes",
      "has_async_keyword",
      "has_unsafe_keyword",
      "is_inside_impl"
    ],
    "src/extractors/zig/helpers.rs": [
      "BaseExtractor",
      "Node",
      "is_export_function",
      "is_inside_struct",
      "is_public_declaration",
      "is_public_function"
    ],
    "src/main.rs": [
      "Arc",
      "Context",
      "Context",
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "WorkspaceRegistryService",
      "env",
      "fs",
      "get_workspace_root",
      "load_agent_instructions",
      "main",
      "perform_auto_indexing",
      "update_workspace_statistics"
    ],
    "src/tests/extractors/typescript/imports_exports.rs": [
      "PathBuf",
      "SymbolKind",
      "TypeScriptExtractor",
      "test_extract_export_named",
      "test_extract_import_named",
      "tests"
    ],
    "src/tests/tools/search/tools.rs": [
      "FastSearchTool",
      "OptimizedResponse",
      "Visibility",
      "format_optimized_results",
      "search_tools_tests",
      "test_context_truncation_with_long_code",
      "test_multi_word_query_routing_bug",
      "test_progressive_reduction_integration",
      "test_short_response_unchanged",
      "test_token_limit_early_termination"
    ],
    "src/extractors/razor/csharp.rs": [
      "HashMap",
      "Node",
      "extract_class",
      "extract_csharp_symbols",
      "extract_method",
      "extract_namespace",
      "extract_property",
      "extract_using",
      "visit_csharp_node"
    ],
    "src/tests/extractors/cpp/types.rs": [
      "test_extract_enums_and_scoped_enums",
      "test_extract_variables_and_constants_with_various_storage_classes",
      "test_infer_types_from_cpp_type_annotations_and_auto",
      "tests"
    ],
    "src/extractors/python/decorators.rs": [
      "Node",
      "PythonExtractor",
      "extract_decorators"
    ],
    "src/extractors/bash/mod.rs": [
      "BashExtractor",
      "Tree",
      "commands",
      "extract_identifier_from_node",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbol_from_node",
      "extract_symbols",
      "find_containing_symbol_id",
      "functions",
      "helpers",
      "infer_types",
      "new",
      "relationships",
      "signatures",
      "types",
      "variables",
      "walk_tree_for_identifiers",
      "walk_tree_for_relationships",
      "walk_tree_for_symbols"
    ],
    "fixtures/editing/controls/refactor/simple_rename_control.ts": [
      "AccountService",
      "AccountService",
      "getName",
      "service"
    ],
    "src/extractors/sql/helpers.rs": [
      "CREATE_VIEW_RE",
      "DECLARE_VAR_RE",
      "INCLUDE_CLAUSE_RE",
      "INDEX_COLUMN_RE",
      "LazyLock",
      "ON_CLAUSE_RE",
      "Regex",
      "SQL_TYPE_RE",
      "USING_CLAUSE_RE",
      "VAR_DECL_RE"
    ],
    "src/health.rs": [
      "HealthChecker",
      "JulieServerHandler",
      "SystemStatus",
      "are_embeddings_ready",
      "check_system_readiness",
      "debug",
      "get_detailed_health_report",
      "get_status_message",
      "has_embedding_files",
      "is_ready_for_search",
      "registry"
    ],
    "src/database/schema.rs": [
      "Result",
      "create_embeddings_table",
      "create_files_fts_table",
      "create_files_fts_triggers",
      "create_files_table",
      "create_identifiers_table",
      "create_relationships_table",
      "create_symbols_fts_table",
      "create_symbols_fts_triggers",
      "create_symbols_table",
      "create_workspaces_table",
      "debug",
      "disable_files_fts_triggers",
      "disable_symbols_fts_triggers",
      "enable_files_fts_triggers",
      "enable_symbols_fts_triggers",
      "initialize_schema",
      "rebuild_files_fts",
      "rebuild_symbols_fts"
    ],
    "src/extractors/javascript/helpers.rs": [
      "Node",
      "extract_parameters",
      "extract_require_source",
      "get_declaration_type",
      "has_default_import",
      "has_namespace_import",
      "has_private_fields",
      "is_async",
      "is_computed_property",
      "is_const_declaration",
      "is_default_export",
      "is_generator",
      "is_let_declaration",
      "is_named_export",
      "is_require_call"
    ],
    "src/extractors/dart/signatures.rs": [
      "Node",
      "extract_class_signature",
      "extract_constructor_signature",
      "extract_function_signature",
      "extract_variable_signature"
    ],
    "src/extractors/dart/mod.rs": [
      "DartExtractor",
      "HashMap",
      "LazyLock",
      "Regex",
      "TYPE_SIGNATURE_RE",
      "extract_enum_constants_from_error",
      "extract_enum_constants_from_error_recursive",
      "extract_enum_constants_from_text",
      "extract_identifier_from_node",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbols",
      "find_containing_symbol_id",
      "functions",
      "helpers",
      "infer_types",
      "members",
      "new",
      "relationships",
      "signatures",
      "types",
      "visit_node",
      "walk_tree_for_identifiers"
    ],
    "src/extractors/go/functions.rs": [
      "Node",
      "extract_from_error_node",
      "extract_function",
      "extract_method",
      "extract_parameter_declaration",
      "extract_parameter_list"
    ],
    "src/extractors/javascript/relationships.rs": [
      "JavaScriptExtractor",
      "extract_call_relationships",
      "extract_inheritance_relationships",
      "extract_relationships",
      "find_containing_function"
    ],
    "src/extractors/php/identifiers.rs": [
      "HashMap",
      "Node",
      "PhpExtractor",
      "extract_identifier_from_node",
      "find_containing_symbol_id"
    ],
    "src/tests/extractors/lua/oop_patterns.rs": [
      "PathBuf",
      "PathBuf",
      "test_advanced_oop_and_design_patterns",
      "tests"
    ],
    "src/extractors/cpp/identifiers.rs": [
      "CppExtractor",
      "HashMap",
      "Node",
      "extract_identifier_from_node",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/database/helpers.rs": [
      "Result",
      "begin_transaction",
      "commit_transaction",
      "get_stats",
      "rollback_transaction",
      "row_to_relationship",
      "row_to_symbol"
    ],
    "src/tests/extractors/gdscript/signals.rs": [
      "SymbolKind",
      "test_extract_signals_and_signal_connections",
      "tests"
    ],
    "src/extractors/go/relationships.rs": [
      "HashMap",
      "Node",
      "extract_embedding_relationships",
      "extract_method_relationships_from_node",
      "walk_tree_for_relationships"
    ],
    "src/tests/extractors/java/annotation_tests.rs": [
      "PathBuf",
      "annotation_tests",
      "test_extract_annotation_definitions",
      "test_extract_annotation_usage",
      "test_extract_builtin_annotations"
    ],
    "src/tests/extractors/rust/functions.rs": [
      "test_function_extraction",
      "test_function_parameters",
      "test_impl_block_processing",
      "tests"
    ],
    "src/tests/extractors/sql/transactions.rs": [
      "SymbolKind",
      "test_extract_transactions_and_concurrency_control",
      "tests"
    ],
    "src/tools/mod.rs": [
      "EditLinesTool",
      "EditingTransaction",
      "FastSearchTool",
      "FindLogicTool",
      "FuzzyReplaceTool",
      "GetSymbolsTool",
      "ManageWorkspaceTool",
      "TraceCallPathTool",
      "ast_symbol_finder",
      "edit_lines",
      "editing",
      "exploration",
      "fuzzy_replace",
      "navigation",
      "refactoring",
      "search",
      "shared",
      "symbols",
      "tool_box",
      "trace_call_path",
      "workspace"
    ],
    "src/extractors/regex/flags.rs": [
      "extract_alternation_options",
      "extract_backref_group_name",
      "extract_condition",
      "extract_group_number",
      "extract_unicode_property_name",
      "get_anchor_type",
      "get_lookaround_direction",
      "get_predefined_class_category",
      "is_positive_lookaround"
    ],
    "src/extractors/javascript/imports.rs": [
      "HashMap",
      "Node",
      "create_import_symbol",
      "extract_import_specifiers",
      "json"
    ],
    "src/extractors/rust/mod.rs": [
      "ImplBlockInfo",
      "RustExtractor",
      "add_impl_block",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbol",
      "extract_symbols",
      "functions",
      "get_base_mut",
      "get_impl_blocks",
      "helpers",
      "identifiers",
      "is_inside_impl",
      "new",
      "process_impl_blocks",
      "relationships",
      "signatures",
      "types",
      "walk_tree"
    ],
    "src/tests/extractors/c/pointers.rs": [
      "pointer_tests",
      "test_extract_complex_structs_and_unions",
      "test_extract_function_pointers",
      "test_extract_pointer_arithmetic_and_memory",
      "test_extract_pointer_declarations"
    ],
    "src/tools/exploration/types.rs": [
      "BusinessLogicSymbol",
      "FindLogicResult",
      "Serialize"
    ],
    "src/tests/utils/context_truncation.rs": [
      "ContextTruncator",
      "test_long_context_truncated",
      "test_short_context_unchanged",
      "test_smart_truncation_handles_edge_cases",
      "test_smart_truncation_handles_no_truncation_needed",
      "test_smart_truncation_preserves_class_definitions",
      "test_smart_truncation_preserves_function_signatures",
      "test_smart_truncation_preserves_struct_definitions"
    ],
    "src/extractors/css/rules.rs": [
      "HashMap",
      "Node",
      "PropertyHelper",
      "RuleExtractor",
      "build_rule_signature",
      "extract_rule"
    ],
    "src/extractors/dart/types.rs": [
      "HashMap",
      "Node",
      "extract_enum",
      "extract_enum_constant",
      "extract_extension",
      "extract_mixin",
      "extract_typedef"
    ],
    "src/extractors/csharp/helpers.rs": [
      "Node",
      "determine_visibility",
      "extract_base_list",
      "extract_field_type",
      "extract_modifiers",
      "extract_property_type",
      "extract_return_type",
      "extract_type_parameters",
      "get_csharp_visibility_string"
    ],
    "fixtures/real-world/vue/App.vue": [
      "App",
      "HelloWorld",
      "RouterLink",
      "RouterLink",
      "RouterView",
      "logo",
      "logo",
      "router-link-exact-active",
      "wrapper"
    ],
    "src/extractors/html/relationships.rs": [
      "HTMLHelpers",
      "HashMap",
      "Node",
      "RelationshipExtractor",
      "extract_element_relationships",
      "extract_script_relationships",
      "find_element_symbol"
    ],
    "fixtures/editing/sources/typescript/data-repository.ts": [
      "Anonymous",
      "Anonymous",
      "Anonymous",
      "Anonymous",
      "Anonymous",
      "BaseRepository",
      "CONFIG",
      "CacheManager",
      "CacheManager",
      "DatabaseDriver",
      "DatabaseDriver",
      "Entity",
      "Entity",
      "QueryOptions",
      "QueryOptions",
      "ValidationResult",
      "ValidationResult",
      "ValidationUtils",
      "asyncRetry",
      "asyncRetry",
      "attempt",
      "buildQuery",
      "cache",
      "clear",
      "conditions",
      "constructor",
      "constructor",
      "createdAt",
      "driver",
      "errors",
      "errors",
      "export",
      "firstKey",
      "get",
      "has",
      "id",
      "isEmail",
      "isEmail",
      "isInRange",
      "isInRange",
      "isRequired",
      "isRequired",
      "isValid",
      "lastError",
      "limit",
      "maxSize",
      "offset",
      "orderBy",
      "query",
      "result",
      "set",
      "size",
      "tableName",
      "updatedAt",
      "validateEntity",
      "validateEntity",
      "where"
    ],
    "src/extractors/sql/routines.rs": [
      "HashMap",
      "Node",
      "Value",
      "extract_declare_variables",
      "extract_parameters_from_error_node",
      "extract_procedure_signature",
      "extract_stored_procedure"
    ],
    "src/tests/extractors/csharp/extractor.rs": [
      "CSharpExtractor",
      "PathBuf",
      "test_basic_class_extraction",
      "test_enum_extraction",
      "test_interface_extraction",
      "test_property_extraction",
      "test_xml_doc_comment_extraction"
    ],
    "src/tests/extractors/rust/mod.rs": [
      "IdentifierKind",
      "Parser",
      "PathBuf",
      "RustExtractor",
      "advanced_generics_and_type_parameters",
      "comprehensive_rust_features",
      "constants_and_statics",
      "doc_comment_extraction",
      "enum_extraction",
      "extractor",
      "function_extraction",
      "functions",
      "helpers",
      "identifier_extraction_tests",
      "identifiers",
      "init_parser",
      "macro_extraction",
      "module_extraction",
      "relationships",
      "rust_extractor_tests",
      "signatures",
      "struct_extraction",
      "test_associated_type_with_doc_comment",
      "test_const_with_doc_comment",
      "test_enum_with_doc_comment",
      "test_extract_basic_struct_definitions",
      "test_extract_const_and_static_declarations",
      "test_extract_enum_definitions_with_variants",
      "test_extract_generic_structs_traits_and_functions_with_constraints",
      "test_extract_macro_definitions",
      "test_extract_methods_from_impl_blocks",
      "test_extract_methods_from_impl_blocks_without_local_struct_definition",
      "test_extract_module_definitions",
      "test_extract_standalone_functions_with_various_signatures",
      "test_extract_trait_definitions",
      "test_extract_unsafe_blocks_raw_pointers_and_ffi_functions",
      "test_extract_use_declarations_and_imports",
      "test_function_with_single_line_doc_comment",
      "test_handle_comprehensive_rust_code",
      "test_rust_chained_member_access",
      "test_rust_duplicate_calls_at_different_locations",
      "test_rust_function_calls",
      "test_rust_identifiers_have_containing_symbol",
      "test_rust_member_access",
      "test_struct_with_multi_line_doc_comment",
      "test_symbol_without_doc_comment",
      "test_trait_with_doc_comment",
      "test_workspace_root",
      "trait_extraction",
      "types",
      "unsafe_code_and_ffi",
      "use_statement_extraction"
    ],
    "src/tools/workspace/utils.rs": [
      "Path",
      "Result",
      "calculate_dir_size"
    ],
    "src/tests/extractors/python/imports.rs": [
      "test_extract_imports_placeholder"
    ],
    "fixtures/editing/sources/simple_rename_test.ts": [
      "UserService",
      "UserService",
      "getName",
      "service"
    ],
    "src/extractors/bash/helpers.rs": [
      "Node",
      "collect_parameter_nodes",
      "find_command_name_node",
      "find_name_node",
      "find_variable_name_node",
      "get_children_of_type",
      "walk_tree"
    ],
    "fixtures/editing/controls/auto-fix/rust_struct.rs": [
      "UserConfig",
      "create_config"
    ],
    "fixtures/real-world/ruby/nested.rb": [
      "@name",
      "@name",
      "@value",
      "DeeplyNested",
      "DeeplyNested",
      "ModuleClass",
      "ModuleClass",
      "NestedClass",
      "NestedClass",
      "NestedClass",
      "NestedModule",
      "NestedModule",
      "OuterClass",
      "OuterClass",
      "OuterClass",
      "OuterClass",
      "UnknownClass",
      "UnknownClass",
      "UnknownClass",
      "UnknownClass",
      "UnknownModule",
      "deep_method",
      "find_me",
      "initialize",
      "initialize",
      "inner_function",
      "module_class_method",
      "module_method",
      "nested",
      "nested_method",
      "outer",
      "outer_method",
      "result",
      "result"
    ],
    "src/tests/extractors/typescript/relationships.rs": [
      "PathBuf",
      "RelationshipKind",
      "TypeScriptExtractor",
      "extract_relationships",
      "test_extract_call_relationships",
      "test_extract_inheritance_relationships"
    ],
    "src/tests/helpers/cleanup.rs": [
      "Duration",
      "Path",
      "Result",
      "atomic_cleanup_julie_dir",
      "fs",
      "io"
    ],
    "src/extractors/regex/helpers.rs": [
      "SymbolKind",
      "calculate_complexity",
      "clean_regex_line",
      "determine_pattern_kind",
      "is_escaped_literal",
      "is_regex_pattern",
      "is_valid_regex_pattern"
    ],
    "src/extractors/regex/identifiers.rs": [
      "HashMap",
      "Node",
      "extract_group_name",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_containing_symbol_id",
      "flags",
      "walk_tree_for_identifiers"
    ],
    "src/tests/extractors/c/relationships.rs": [
      "RelationshipKind",
      "parse_c",
      "test_extract_function_call_relationships"
    ],
    "src/startup.rs": [
      "HashSet",
      "JulieServerHandler",
      "Path",
      "SystemTime",
      "WorkspaceRegistryService",
      "check_if_indexing_needed",
      "get_database_mtime",
      "get_max_file_mtime_in_workspace",
      "is_code_file",
      "is_ignored_path",
      "scan_workspace_files"
    ],
    "src/database/files.rs": [
      "Path",
      "blake3",
      "bulk_store_files",
      "calculate_file_hash",
      "create_file_indexes",
      "create_file_info",
      "delete_file_record",
      "delete_file_record_in_workspace",
      "drop_file_indexes",
      "get_all_file_contents",
      "get_file_content",
      "get_file_hash",
      "get_file_hashes_for_workspace",
      "get_file_symbol_count",
      "get_recent_files",
      "params",
      "search_file_content_fts",
      "store_file_info",
      "store_file_with_content",
      "update_file_hash"
    ],
    "src/tools/refactoring/helpers.rs": [
      "looks_like_doc_comment",
      "replace_identifier_with_boundaries"
    ],
    "src/extractors/javascript/visibility.rs": [
      "Node",
      "Visibility",
      "extract_visibility"
    ],
    "src/tests/extractors/sql/relationships.rs": [
      "test_type_inference_and_relationships",
      "tests"
    ],
    "src/utils/string_similarity.rs": [
      "find_closest_match",
      "levenshtein_distance",
      "test_find_closest_match",
      "test_find_closest_match_workspace_ids",
      "test_levenshtein_distance",
      "test_workspace_with_spaces",
      "tests"
    ],
    "src/extractors/rust/relationships.rs": [
      "HashMap",
      "RustExtractor",
      "extract_call_relationships",
      "extract_field_type_references",
      "extract_impl_relationships",
      "extract_relationships",
      "extract_type_relationships",
      "find_containing_function",
      "walk_tree_for_relationships"
    ],
    "src/tests/mod.rs": [
      "PYTHON_SAMPLE",
      "Path",
      "RUST_SAMPLE",
      "Result",
      "TYPESCRIPT_SAMPLE",
      "TempDir",
      "ast_symbol_finder",
      "base",
      "bash",
      "bulk_storage_atomicity",
      "c",
      "cli",
      "codesearch",
      "context_truncation",
      "core",
      "cpp",
      "create_test_file",
      "create_test_workspace",
      "cross_language_intelligence",
      "csharp",
      "css",
      "dart",
      "database",
      "editing",
      "embeddings",
      "exact_match_boost",
      "exploration",
      "extractors",
      "fixtures",
      "fs",
      "fts5_integrity",
      "fts5_minimal_repro",
      "fts5_rowid_corruption",
      "fts5_sanitization",
      "gdscript",
      "get_symbols",
      "get_symbols_reference_workspace",
      "get_symbols_relative_paths",
      "get_symbols_smart_read",
      "get_symbols_target_filtering",
      "get_symbols_token",
      "go",
      "handler",
      "helpers",
      "html",
      "integration",
      "isolation",
      "java",
      "javascript",
      "kotlin",
      "language",
      "lock_contention",
      "lua",
      "management_token",
      "mod_tests",
      "navigation",
      "output",
      "parallel",
      "path_relevance",
      "php",
      "powershell",
      "progress",
      "progressive_reduction",
      "python",
      "query_expansion",
      "query_preprocessor_tests",
      "razor",
      "real_world_validation",
      "refactoring",
      "reference_workspace",
      "regex",
      "registry",
      "registry_service",
      "ruby",
      "rust",
      "search",
      "search_context_lines",
      "search_quality",
      "search_regression_tests",
      "semantic",
      "smart_read",
      "sql",
      "stale_index_detection",
      "swift",
      "test_code",
      "test_helpers",
      "test_utils",
      "token_estimation",
      "tools",
      "trace_call_path",
      "tracing",
      "typescript",
      "utf8_boundary_safety",
      "utf8_truncation",
      "utils",
      "utils",
      "vue",
      "watcher",
      "workspace",
      "workspace_init",
      "workspace_isolation_smoke",
      "zig"
    ],
    "fixtures/real-world/bash/system-admin-script.sh": [
      "$0",
      "$1",
      "$1",
      "$1",
      "$2",
      "$2",
      "CONFIG_VARS[\"$key\"]",
      "DISK_USAGE",
      "IFS",
      "IFS",
      "IFS",
      "LZS_APP",
      "LZS_PREFIX",
      "LZS_URLPREFIX",
      "LZS_VERSION",
      "NETWORK_INTERFACES",
      "action",
      "check_disk_usage",
      "command",
      "config_file",
      "database",
      "for block",
      "for block",
      "get_system_info",
      "hostname",
      "if block",
      "if block",
      "if block",
      "if block",
      "if block",
      "if block",
      "interface_count",
      "load_avg",
      "load_config",
      "main",
      "mysql_operations",
      "network_info",
      "operation",
      "partition",
      "service_manager",
      "service_name",
      "threshold",
      "uptime",
      "usage",
      "while block",
      "while block",
      "while block"
    ],
    "src/extractors/razor/stubs.rs": [
      "HashMap",
      "Node",
      "extract_assignment",
      "extract_element_access",
      "extract_field",
      "extract_invocation",
      "extract_local_function",
      "extract_local_variable",
      "extract_variable_declaration"
    ],
    "src/extractors/razor/type_inference.rs": [
      "HashMap",
      "LazyLock",
      "RAZOR_TYPE_PATTERN1",
      "RAZOR_TYPE_PATTERN2",
      "RAZOR_TYPE_PATTERN3",
      "Regex",
      "infer_types"
    ],
    "src/tests/extractors/csharp/mod.rs": [
      "CSharpExtractor",
      "Parser",
      "VisibilityExt",
      "core",
      "extractor",
      "get_csharp_visibility",
      "identifier_extraction",
      "init_parser",
      "language_features",
      "metadata",
      "runtime",
      "to_string",
      "to_string"
    ],
    "fixtures/real-world/css/flexbox-grid.css": [],
    "src/extractors/powershell/functions.rs": [
      "FUNCTION_NAME_RE",
      "LazyLock",
      "Node",
      "Regex",
      "documentation",
      "extract_advanced_function",
      "extract_advanced_function_signature",
      "extract_function",
      "extract_function_parameters",
      "extract_function_signature",
      "extract_parameter_signature",
      "extract_script_parameter_signature"
    ],
    "fixtures/real-world/kotlin/Model.kt": [
      "Model",
      "name",
      "test_repo"
    ],
    "src/extractors/swift/relationships.rs": [
      "HashMap",
      "Node",
      "SwiftExtractor",
      "add_inheritance_relationship",
      "extract_inheritance_relationships",
      "extract_relationships",
      "find_type_symbol",
      "infer_types",
      "serde_json",
      "visit_node_for_relationships"
    ],
    "src/tests/extractors/python/functions.rs": [
      "test_determine_function_kind_placeholder",
      "tests"
    ],
    "src/tests/tools/refactoring/ast_aware.rs": [
      "Result",
      "SmartRefactorTool",
      "test_ast_aware_rename_changes_only_identifiers",
      "test_ast_aware_rename_skips_comments",
      "test_ast_aware_rename_skips_string_literals"
    ],
    "src/tests/tools/workspace/registry_service.rs": [
      "Arc",
      "Barrier",
      "EmbeddingStatus",
      "TempDir",
      "WorkspaceRegistryService",
      "WorkspaceType",
      "test_concurrent_registry_saves_do_not_conflict_on_temp_file",
      "test_get_all_workspaces_empty",
      "test_get_all_workspaces_multiple",
      "test_get_primary_workspace_id",
      "test_get_workspace_by_id",
      "test_get_workspace_by_path",
      "test_registry_creation",
      "test_registry_persistence",
      "test_unregister_workspace",
      "test_update_embedding_status",
      "test_update_last_accessed",
      "test_update_workspace_statistics",
      "test_workspace_registration"
    ],
    "src/tools/navigation/semantic_matching.rs": [
      "Arc",
      "JulieServerHandler",
      "Result",
      "RwLock",
      "SymbolDatabase",
      "VectorStore",
      "debug",
      "find_semantic_definitions",
      "find_semantic_definitions_with_store",
      "find_semantic_references"
    ],
    "src/tools/search/scoring.rs": [
      "HashMap",
      "calculate_search_confidence",
      "generate_search_insights",
      "suggest_next_actions"
    ],
    "fixtures/editing/sources/complex_class.ts": [
      "User",
      "UserManager",
      "addUser",
      "constructor",
      "email",
      "getUserById",
      "id",
      "name",
      "users",
      "validateUser"
    ],
    "src/tests/tools/search/primary_workspace_bug.rs": [
      "FastSearchTool",
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "Result",
      "TempDir",
      "test_fast_search_recognizes_indexed_primary_workspace",
      "test_fast_search_with_explicit_workspace_id"
    ],
    "src/extractors/dart/functions.rs": [
      "HashMap",
      "Node",
      "extract_class",
      "extract_constructor",
      "extract_function",
      "extract_method",
      "extract_variable",
      "signatures"
    ],
    "src/tools/refactoring/operations.rs": [
      "CallToolResult",
      "EditingTransaction",
      "EditingTransaction",
      "EditingTransaction",
      "JsonValue",
      "JulieServerHandler",
      "Parser",
      "Parser",
      "Parser",
      "Path",
      "SmartRefactorTool",
      "add_import_to_top",
      "find_any_symbol",
      "find_function_or_method",
      "fs",
      "fs",
      "fs",
      "generate_import_statement",
      "handle_extract_symbol_to_file",
      "handle_insert_relative_to_symbol",
      "handle_replace_symbol_body",
      "is_function_or_method"
    ],
    "src/extractors/java/helpers.rs": [
      "Node",
      "determine_visibility",
      "extract_extended_interfaces",
      "extract_implemented_interfaces",
      "extract_modifiers",
      "extract_superclass",
      "extract_throws_clause",
      "extract_type_parameters"
    ],
    "src/tests/extractors/cpp/namespaces.rs": [
      "test_extract_namespace_declarations_and_include_statements",
      "tests"
    ],
    "fixtures/editing/controls/auto-fix/nested_structures.js": [
      "Anonymous",
      "config",
      "credentials",
      "database",
      "host",
      "password",
      "port",
      "processData",
      "username"
    ],
    "fixtures/editing/controls/refactor/ast_aware_userservice_rename.ts": [
      "AccountService",
      "AccountService",
      "AccountService",
      "Anonymous",
      "constructor",
      "createUserService",
      "getUser",
      "getUserServiceStatus",
      "result",
      "userData",
      "userService"
    ],
    "src/extractors/bash/signatures.rs": [
      "BaseExtractor",
      "HashMap",
      "Node",
      "extract_command_signature",
      "extract_control_flow_signature",
      "extract_function_signature",
      "extract_variable_documentation",
      "extract_variable_signature",
      "get_command_documentation"
    ],
    "src/extractors/c/declarations.rs": [
      "CExtractor",
      "HashMap",
      "Regex",
      "Value",
      "create_metadata_map",
      "extract_declaration",
      "extract_enum",
      "extract_enum_value_symbols",
      "extract_from_expression_statement",
      "extract_function_declaration",
      "extract_function_definition",
      "extract_function_pointer_typedef_name",
      "extract_include",
      "extract_linkage_specification",
      "extract_macro",
      "extract_struct",
      "extract_type_definition",
      "extract_typedef_from_declaration",
      "extract_typedef_name_from_declaration",
      "extract_typedef_name_from_type_definition",
      "extract_variable_declaration",
      "fix_function_pointer_typedef_names",
      "fix_struct_alignment_attributes",
      "helpers",
      "reconstruct_struct_signature_with_alignment",
      "signatures",
      "types"
    ],
    "src/extractors/csharp/members.rs": [
      "Node",
      "extract_constructor",
      "extract_delegate",
      "extract_destructor",
      "extract_event",
      "extract_field",
      "extract_method",
      "extract_property",
      "helpers"
    ],
    "src/extractors/swift/identifiers.rs": [
      "HashMap",
      "Node",
      "SwiftExtractor",
      "extract_identifier_from_node",
      "extract_identifiers",
      "extract_rightmost_identifier",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/tests/extractors/css/modern.rs": [
      "extract_symbols",
      "test_extract_css_grid_flexbox_and_modern_layout_properties",
      "tests"
    ],
    "src/extractors/python/identifiers.rs": [
      "HashMap",
      "PythonExtractor",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/extractors/bash/commands.rs": [
      "Node",
      "extract_command",
      "extract_control_flow"
    ],
    "fixtures/editing/sources/broken/missing_paren.ts": [
      "Anonymous",
      "calculateTotal",
      "calculateTotal",
      "discounted",
      "subtotal"
    ],
    "src/tools/workspace/mod.rs": [
      "LanguageParserPool",
      "calculate_dir_size",
      "commands",
      "discovery",
      "indexing",
      "language",
      "parser_pool",
      "paths",
      "utils"
    ],
    "src/extractors/mod.rs": [
      "ExtractorManager",
      "Parser",
      "Parser",
      "Parser",
      "Path",
      "Path",
      "Path",
      "base",
      "bash",
      "c",
      "cpp",
      "csharp",
      "css",
      "dart",
      "default",
      "extract_identifiers",
      "extract_identifiers_for_language",
      "extract_relationships",
      "extract_relationships_for_language",
      "extract_symbols",
      "extract_symbols_for_language",
      "gdscript",
      "get_tree_sitter_language",
      "go",
      "html",
      "java",
      "javascript",
      "kotlin",
      "lua",
      "new",
      "php",
      "powershell",
      "python",
      "razor",
      "regex",
      "ruby",
      "rust",
      "sql",
      "supported_languages",
      "swift",
      "typescript",
      "vue",
      "zig"
    ],
    "src/tests/extractors/html/structure.rs": [
      "test_extract_document_structure_semantic_elements_and_attributes",
      "tests"
    ],
    "src/extractors/css/animations.rs": [
      "AnimationExtractor",
      "HashMap",
      "Node",
      "extract_animation_name",
      "extract_keyframes",
      "extract_keyframes_name",
      "extract_keyframes_rule"
    ],
    "build-binaries.sh": [
      "PLATFORM",
      "PLATFORM",
      "PLATFORM",
      "PLATFORM",
      "cargo",
      "cargo",
      "if block",
      "if block"
    ],
    "src/tests/integration/search_regression_tests.rs": [
      "SymbolDatabase",
      "TempDir",
      "fts5_syntax_regression",
      "glob_pattern_regression",
      "matches_glob_pattern",
      "test_fts5_asterisk_character_in_query",
      "test_fts5_dot_character_in_query",
      "test_fts5_regex_metacharacters",
      "test_glob_pattern_extension_patterns_work",
      "test_glob_pattern_full_path_with_doublestar",
      "test_glob_pattern_path_separator_handling",
      "test_glob_pattern_paths_with_spaces",
      "test_glob_pattern_specific_filename_alone",
      "test_glob_pattern_specific_filename_with_doublestar",
      "test_glob_pattern_wildcard_prefix_specific_filename"
    ],
    "src/tests/tools/trace_call_path/workspace_isolation.rs": [
      "TraceCallPathTool",
      "Visibility",
      "document_semantic_neighbors_architectural_bug",
      "make_symbol",
      "tempdir",
      "test_naming_variants_respect_workspace_database",
      "test_semantic_search_respects_workspace_isolation"
    ],
    "src/tests/extractors/c/doxygen_comments.rs": [
      "extract_symbols",
      "test_extract_doxygen_from_enum",
      "test_extract_doxygen_from_function_declaration",
      "test_extract_doxygen_from_function_definition",
      "test_extract_doxygen_from_global_variable",
      "test_extract_doxygen_from_struct_with_fields",
      "test_extract_doxygen_from_typedef",
      "test_extract_doxygen_triple_slash_from_struct",
      "test_extract_multiple_doc_comment_lines",
      "test_no_doc_comment_when_missing",
      "tests"
    ],
    "src/extractors/c/relationships.rs": [
      "CExtractor",
      "HashMap",
      "extract_function_call_relationships",
      "extract_include_relationships",
      "extract_relationships_from_node",
      "find_containing_symbol",
      "helpers"
    ],
    "src/utils/progressive_reduction.rs": [
      "ProgressiveReducer",
      "calculate_count",
      "default",
      "new",
      "reduce"
    ],
    "src/tests/extractors/powershell/mod.rs": [
      "IdentifierKind",
      "PathBuf",
      "PowerShellExtractor",
      "Tree",
      "azure_and_windows_devops_commands",
      "classes_and_methods",
      "create_extractor_and_parse",
      "doc_comment_extraction",
      "dsc_and_configuration_management",
      "error_handling_and_edge_cases",
      "error_handling_and_exception_management",
      "functions_and_advanced_functions",
      "identifier_extraction",
      "modules_and_imports",
      "powershell_extractor_tests",
      "test_extract_azure_and_windows_devops_commands",
      "test_extract_powershell_class_with_comment_based_help",
      "test_extract_powershell_classes_and_methods",
      "test_extract_powershell_devops_pipeline_commands",
      "test_extract_powershell_dsc_configurations_and_resources",
      "test_extract_powershell_enum_with_comment_based_help",
      "test_extract_powershell_error_handling_and_try_catch",
      "test_extract_powershell_function_with_comment_based_help",
      "test_extract_powershell_function_with_single_line_comments",
      "test_extract_powershell_functions_and_advanced_functions",
      "test_extract_powershell_method_with_comment_based_help",
      "test_extract_powershell_modules_and_imports",
      "test_extract_powershell_variables_and_automatic_variables",
      "test_extract_powershell_workflows_and_parallel_features",
      "test_handle_empty_files_gracefully",
      "test_handle_malformed_powershell_gracefully",
      "test_powershell_chained_member_access",
      "test_powershell_doc_comments_with_multiline_blocks",
      "test_powershell_duplicate_calls_at_different_locations",
      "test_powershell_function_calls",
      "test_powershell_function_without_doc_comment",
      "test_powershell_identifiers_have_containing_symbol",
      "test_powershell_member_access",
      "variables_and_automatic_variables",
      "workflows_and_parallel_processing"
    ],
    "TODO.md": [],
    "fixtures/editing/sources/typescript/user-service.ts": [
      "./logger",
      "Anonymous",
      "DEFAULT_ROLES",
      "Permission",
      "Permission",
      "Role",
      "Role",
      "User",
      "User",
      "UserService",
      "UserService",
      "action",
      "cache",
      "constructor",
      "createUser",
      "createdAt",
      "delay",
      "email",
      "emailRegex",
      "existingUser",
      "export",
      "fetchUserFromDatabase",
      "findUserById",
      "generateId",
      "hasPermission",
      "id",
      "id",
      "logger",
      "name",
      "name",
      "permissions",
      "resource",
      "roles",
      "saveUserToDatabase",
      "updateUser",
      "updatedUser",
      "user",
      "user",
      "validateEmail",
      "validateEmail"
    ],
    "src/tests/extractors/rust/relationships.rs": [
      "test_relationship_extraction"
    ],
    "src/extractors/python/imports.rs": [
      "Node",
      "PythonExtractor",
      "create_import_symbol",
      "extract_alias",
      "extract_imports",
      "extract_single_import"
    ],
    "src/extractors/c/mod.rs": [
      "CExtractor",
      "Tree",
      "declarations",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbols",
      "helpers",
      "identifiers",
      "new",
      "relationships",
      "signatures",
      "types",
      "visit_node"
    ],
    "src/database/workspace.rs": [
      "Result",
      "delete_workspace_data",
      "get_last_activity_time",
      "get_workspace_usage_stats",
      "info"
    ],
    "src/tests/tools/get_symbols_reference_workspace.rs": [
      "CallToolResult",
      "JulieServerHandler",
      "Result",
      "TempDir",
      "extract_text_from_result",
      "fs",
      "test_get_symbols_reference_workspace",
      "test_get_symbols_reference_workspace_filtering"
    ],
    "src/extractors/sql/relationships.rs": [
      "HashMap",
      "Node",
      "Value",
      "extract_foreign_key_relationship",
      "extract_join_relationships",
      "extract_relationships_internal",
      "extract_table_references"
    ],
    "src/tests/tools/refactoring/rename_symbol.rs": [
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "RenameSymbolTool",
      "Result",
      "TempDir",
      "fs",
      "test_rename_symbol_basic",
      "test_rename_symbol_dry_run",
      "test_rename_symbol_multiple_files",
      "test_rename_symbol_validation_empty_names",
      "test_rename_symbol_validation_same_name"
    ],
    "src/tests/extractors/ruby/doc_comments.rs": [
      "PathBuf",
      "RubyExtractor",
      "SymbolKind",
      "Tree",
      "create_extractor_and_parse",
      "doc_comment_tests",
      "test_doc_comment_stops_at_non_doc_comment",
      "test_extract_constant_rdoc",
      "test_extract_constructor_rdoc",
      "test_extract_rdoc_from_class",
      "test_extract_rdoc_with_multiple_lines",
      "test_extract_yard_from_method",
      "test_extract_yard_from_module",
      "test_no_doc_comment_when_missing"
    ],
    "src/database/embeddings.rs": [
      "HashMap",
      "Result",
      "bulk_store_embeddings",
      "count_embeddings",
      "delete_embedding",
      "delete_embeddings_for_symbol",
      "get_embedding_for_symbol",
      "get_embedding_vector",
      "load_all_embeddings",
      "params",
      "store_embedding_metadata",
      "store_embedding_vector"
    ],
    "src/extractors/php/types.rs": [
      "HashMap",
      "Node",
      "extract_class",
      "extract_enum",
      "extract_enum_case",
      "extract_interface",
      "extract_trait",
      "find_backing_type"
    ],
    "src/extractors/python/types.rs": [
      "HashMap",
      "Node",
      "PythonExtractor",
      "extract_class",
      "extract_docstring",
      "is_inside_enum_class"
    ],
    "src/extractors/vue/template.rs": [
      "BaseExtractor",
      "SymbolKind",
      "VueSection",
      "extract_template_symbols"
    ],
    "src/tests/extractors/bash/doc_comments.rs": [
      "BashExtractor",
      "Parser",
      "PathBuf",
      "extract_symbols",
      "init_parser",
      "test_bash_function_without_doc_comment",
      "test_bash_multi_line_doc_comment",
      "test_extract_bash_exported_variable_doc_comment",
      "test_extract_bash_function_doc_comment",
      "test_extract_bash_variable_doc_comment"
    ],
    "src/tests/extractors/regex/helpers.rs": [
      "SymbolKind",
      "test_calculate_complexity",
      "test_determine_pattern_kind",
      "test_is_valid_regex_pattern"
    ],
    "fixtures/real-world/csharp/Program.cs": [
      "Add",
      "Calculator",
      "Divide",
      "Main",
      "Multiply",
      "Program",
      "Subtract",
      "System",
      "TestProject"
    ],
    "src/tests/extractors/regex/signatures.rs": [
      "test_build_character_class_signature",
      "test_build_pattern_signature",
      "tests"
    ],
    "src/workspace/registry_service.rs": [
      "AsyncMutex",
      "ComprehensiveCleanupReport",
      "OrphanedIndexInfo",
      "Uuid",
      "WorkspaceCleanupReport",
      "WorkspaceRegistryService",
      "backup_registry_path",
      "cleanup_expired_workspaces",
      "cleanup_expired_workspaces_with_data",
      "cleanup_orphaned_indexes",
      "comprehensive_cleanup",
      "detect_orphaned_indexes",
      "empty",
      "enforce_size_limits",
      "fs",
      "get_all_workspaces",
      "get_expired_workspaces",
      "get_or_create_registry",
      "get_primary_workspace_id",
      "get_workspace",
      "get_workspace_by_path",
      "invalidate_cache",
      "load_registry",
      "load_registry_from_disk",
      "load_registry_locked",
      "mark_indexes_as_orphaned",
      "new",
      "register_workspace",
      "registry_path",
      "save_registry",
      "save_registry_internal",
      "serde_json",
      "try_load_registry_file",
      "unregister_workspace",
      "update_embedding_status",
      "update_index_size",
      "update_last_accessed",
      "update_registry_statistics",
      "update_workspace_statistics"
    ],
    "src/extractors/typescript/functions.rs": [
      "HashMap",
      "Node",
      "TypeScriptExtractor",
      "build_function_signature",
      "extract_function",
      "extract_method",
      "extract_parameters",
      "extract_type_parameters",
      "extract_variable",
      "find_parent_class_id",
      "helpers"
    ],
    "src/tests/utils/utf8_boundary_safety.rs": [
      "test_c_align_macro_extraction_with_utf8",
      "test_cpp_destructor_name_extraction_with_utf8",
      "test_html_doctype_parsing_with_utf8",
      "test_regex_named_group_extraction_with_utf8",
      "test_regex_unicode_property_with_utf8",
      "test_utf8_boundary_checks_dont_break_ascii",
      "test_utf8_boundary_edge_cases",
      "tests"
    ],
    "src/extractors/kotlin/helpers.rs": [
      "Node",
      "determine_class_kind",
      "determine_visibility",
      "extract_modifiers",
      "extract_parameters",
      "extract_primary_constructor_signature",
      "extract_property_delegation",
      "extract_property_initializer",
      "extract_property_type",
      "extract_receiver_type",
      "extract_return_type",
      "extract_super_types",
      "extract_type_parameters",
      "extract_where_clause"
    ],
    "src/tests/utils/path_relevance/mod.rs": [
      "Path",
      "PathRelevanceScorer",
      "test_combined_scoring_scenarios",
      "test_directory_scoring_verified_weights",
      "test_no_penalty_when_searching_test",
      "test_penalty_when_not_searching_test",
      "test_production_boost",
      "test_search_context_awareness",
      "test_test_file_detection"
    ],
    "src/extractors/rust/types.rs": [
      "HashMap",
      "Node",
      "RustExtractor",
      "extract_const",
      "extract_enum",
      "extract_macro",
      "extract_module",
      "extract_static",
      "extract_struct",
      "extract_trait",
      "extract_type_alias",
      "extract_union"
    ],
    "fixtures/real-world/php/helper.php": [],
    "src/tests/extractors/lua/core.rs": [
      "test_tree_traversal_basic",
      "tests"
    ],
    "src/tests/extractors/rust/extractor.rs": [
      "PathBuf",
      "RustExtractor",
      "test_rust_extractor_creation",
      "tests"
    ],
    "src/tests/extractors/typescript/relative_paths.rs": [
      "Parser",
      "Path",
      "PathBuf",
      "TypeScriptExtractor",
      "init_parser",
      "relative_path_tests",
      "test_nested_directory_uses_unix_separators",
      "test_root_level_file_has_no_directory_separator",
      "test_typescript_extractor_stores_relative_unix_paths",
      "test_windows_unc_paths_converted_to_relative"
    ],
    "fixtures/test-workspaces/tiny-primary/src/lib.rs": [
      "PrimaryUser",
      "display_name",
      "new",
      "process_primary_data"
    ],
    "src/extractors/lua/relationships.rs": [
      "HashMap",
      "extract_relationships",
      "find_enclosing_function",
      "helpers",
      "traverse_tree_for_relationships"
    ],
    "src/extractors/bash/types.rs": [
      "BOOLEAN_RE",
      "BashExtractor",
      "FLOAT_RE",
      "HashMap",
      "INTEGER_RE",
      "LazyLock",
      "Regex",
      "infer_types",
      "infer_types"
    ],
    "src/tests/integration/reference_workspace.rs": [
      "FastSearchTool",
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "Ordering",
      "Result",
      "WorkspaceRegistryService",
      "WorkspaceRegistryService",
      "atomic_cleanup_julie_dir",
      "atomic_cleanup_julie_dir",
      "extract_text_from_result",
      "extract_workspace_id",
      "get_fixture_path",
      "mark_index_ready",
      "reference_workspace_tests",
      "setup_test_workspaces",
      "test_invalid_reference_workspace_id_error",
      "test_reference_workspace_end_to_end",
      "test_reference_workspace_orphan_cleanup",
      "test_workspace_filtering"
    ],
    "src/tests/extractors/cpp/identifier_extraction.rs": [
      "CppExtractor",
      "PathBuf",
      "identifier_extraction_tests",
      "init_parser",
      "test_chained_member_access",
      "test_extract_function_calls",
      "test_extract_member_access",
      "test_file_scoped_containing_symbol",
      "test_no_duplicate_identifiers"
    ],
    "src/tools/search/text_search.rs": [
      "JulieServerHandler",
      "Result",
      "Symbol",
      "database_search_with_workspace_filter",
      "debug",
      "extract_context_lines",
      "find_intelligent_context",
      "is_useful_line",
      "matches_glob_pattern",
      "sqlite_fts_search",
      "text_search_impl"
    ],
    "src/utils/cross_language_intelligence.rs": [
      "HashMap",
      "IntelligenceConfig",
      "NamingConvention",
      "SymbolKind",
      "SymbolKindEquivalence",
      "are_equivalent",
      "debug",
      "default",
      "default",
      "generate_naming_variants",
      "get_equivalents",
      "new",
      "relaxed",
      "strict",
      "to_camel_case",
      "to_kebab_case",
      "to_pascal_case",
      "to_screaming_snake_case",
      "to_snake_case"
    ],
    "fixtures/editing/controls/refactor/ast_edge_cases_rename.ts": [
      "AccountService",
      "AccountService",
      "AccountService",
      "AccountService",
      "AccountService",
      "AccountService",
      "ExtendedUserService",
      "OtherService",
      "UserServiceType",
      "extendedMethod",
      "getService",
      "handleUser",
      "initializeUserService",
      "name",
      "processUsers",
      "userService",
      "userServiceConfig"
    ],
    "src/tests/tools/search/line_mode.rs": [
      "FastSearchTool",
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "Ordering",
      "Result",
      "TempDir",
      "Utc",
      "extract_text_from_result",
      "extract_workspace_id",
      "fs",
      "mark_index_ready",
      "search_line_mode_tests",
      "test_fast_search_line_mode_basic",
      "test_fast_search_line_mode_combined_filters",
      "test_fast_search_line_mode_file_pattern_filter",
      "test_fast_search_line_mode_handles_exclusion_queries",
      "test_fast_search_line_mode_language_filter",
      "test_fast_search_line_mode_respects_workspace_filter",
      "test_fast_search_symbols_mode_default"
    ],
    "src/cli/output.rs": [
      "OutputFormat",
      "OutputWriter",
      "Result",
      "Symbol",
      "flush",
      "new",
      "write_batch",
      "write_symbol"
    ],
    "fixtures/test-workspaces/tiny-primary/src/main.rs": [
      "calculate_sum",
      "main",
      "primary_marker_function"
    ],
    "src/tests/extractors/css/mod.rs": [
      "CSSExtractor",
      "Parser",
      "PathBuf",
      "Symbol",
      "advanced",
      "animations",
      "at_rules",
      "basic",
      "custom",
      "doc_comments",
      "extract_symbols",
      "identifier_extraction",
      "init_parser",
      "media_queries",
      "modern",
      "pseudo_elements",
      "responsive",
      "utilities"
    ],
    "fixtures/real-world/swift/main.swift": [
      "Calculator",
      "Circle",
      "Drawable",
      "Foundation",
      "Status",
      "User",
      "active",
      "add",
      "age",
      "area",
      "calculator",
      "draw",
      "draw",
      "greet",
      "inactive",
      "init",
      "isAdult",
      "main",
      "multiply",
      "name",
      "pending",
      "radius",
      "result",
      "user"
    ],
    "TREE_SITTER_WARNING.md": [],
    "src/tests/utils/exact_match_boost/mod.rs": [
      "ExactMatchBoost",
      "test_tokenize_query",
      "test_tokenize_symbol"
    ],
    "src/tests/extractors/dart/extractor.rs": [
      "DartExtractor",
      "PathBuf",
      "test_dart_extractor_creation"
    ],
    "src/embeddings/mod.rs": [
      "CodeContext",
      "EmbeddingEngine",
      "ModelManager",
      "OrtEmbeddingModel",
      "PathBuf",
      "SimilarityResult",
      "Symbol",
      "SymbolDatabase",
      "build_embedding_text",
      "cosine_similarity",
      "cross_language",
      "default",
      "dimensions",
      "embed_symbol",
      "embed_symbols_batch",
      "embed_text",
      "from_symbol",
      "get_embedding",
      "is_using_gpu",
      "model_manager",
      "model_name",
      "new",
      "new",
      "ort_model",
      "reinitialize_with_cpu_fallback",
      "remove_embeddings_for_symbols",
      "test_real_time_embeddings_marker",
      "upsert_file_embeddings",
      "vector_store"
    ],
    "src/extractors/vue/mod.rs": [
      "HashMap",
      "Tree",
      "Value",
      "VueExtractor",
      "component",
      "create_symbol_manual",
      "extract_component_doc_comment",
      "extract_identifiers",
      "extract_relationships",
      "extract_section_symbols",
      "extract_symbols",
      "helpers",
      "identifiers",
      "infer_types",
      "new",
      "parsing",
      "script",
      "style",
      "template"
    ],
    "src/database/mod.rs": [
      "HashMap",
      "LATEST_SCHEMA_VERSION",
      "SymbolDatabase",
      "bulk_operations",
      "check_and_rebuild_fts5_indexes",
      "embeddings",
      "files",
      "helpers",
      "migrations",
      "new",
      "relationships",
      "schema",
      "symbols",
      "types",
      "workspace"
    ],
    "src/utils/path_relevance.rs": [
      "Path",
      "PathRelevanceScorer",
      "calculate_score",
      "get_directory_score",
      "get_production_boost",
      "get_production_test_penalty",
      "get_test_penalty",
      "is_production_code",
      "is_test_file",
      "new"
    ],
    "src/extractors/csharp/identifiers.rs": [
      "HashMap",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/tests/tools/search/quality.rs": [
      "ExactMatchBoost",
      "FastSearchTool",
      "HashMap",
      "HashMap",
      "HashMap",
      "HashMap",
      "PathRelevanceScorer",
      "PathRelevanceScorer",
      "create_realistic_test_symbols",
      "create_test_symbols",
      "expand_query",
      "multi_word_query_tests",
      "search_integration_tests",
      "search_quality_tests",
      "test_combined_path_relevance_and_exact_match_scoring",
      "test_directory_weight_hierarchy",
      "test_multi_word_query_finds_camelcase_symbols",
      "test_multi_word_query_finds_snake_case_symbols",
      "test_multi_word_to_camelcase_conversion",
      "test_multi_word_to_snake_case_conversion",
      "test_partial_term_matching_across_symbols",
      "test_partial_word_matching",
      "test_path_relevance_scoring_integration_production_boost",
      "test_query_expansion_generates_all_variants",
      "test_search_pipeline_with_realistic_agent_queries",
      "test_search_quality_respects_test_context",
      "test_search_tool_applies_path_relevance_scoring",
      "test_zero_results_fallback_suggestions"
    ],
    "src/extractors/java/identifiers.rs": [
      "HashMap",
      "JavaExtractor",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/extractors/lua/classes.rs": [
      "LazyLock",
      "Regex",
      "SETMETATABLE_RE",
      "detect_lua_classes"
    ],
    "src/embeddings/ort_model.rs": [
      "CUDAExecutionProvider",
      "DirectMLExecutionProvider",
      "OrtEmbeddingModel",
      "Path",
      "PathBuf",
      "Tensor",
      "Tokenizer",
      "create_session_with_gpu",
      "dimensions",
      "encode_batch",
      "encode_single",
      "get_test_model_paths",
      "is_using_gpu",
      "max_length",
      "model_name",
      "new",
      "select_best_directml_device",
      "test_batch_embedding",
      "test_empty_batch",
      "test_model_initialization",
      "test_single_embedding",
      "tests",
      "warn"
    ],
    "src/tests/extractors/c/advanced.rs": [
      "test_extract_advanced_c_features",
      "tests"
    ],
    "src/tests/tools/workspace/management_token.rs": [
      "FileInfo",
      "FileInfo",
      "ProgressiveReducer",
      "TokenEstimator",
      "test_progressive_reduction_steps_applied_correctly",
      "test_recent_files_with_few_files_unchanged",
      "test_recent_files_with_many_files_applies_reduction",
      "test_workspace_list_with_few_workspaces_unchanged",
      "test_workspace_list_with_many_workspaces_applies_reduction",
      "workspace_management_token_tests"
    ],
    "src/tests/extractors/gdscript/modern.rs": [
      "SymbolKind",
      "test_extract_annotations_type_hints_generics_and_modern_gdscript_constructs",
      "tests"
    ],
    "src/tests/extractors/typescript/inference.rs": [
      "PathBuf",
      "TypeScriptExtractor",
      "test_infer_async_function",
      "test_infer_basic_types",
      "test_infer_function_return_type"
    ],
    "src/tests/extractors/gdscript/ui.rs": [
      "SymbolKind",
      "test_extract_ui_controls_and_event_handling",
      "tests"
    ],
    "src/tests/extractors/lua/tables.rs": [
      "test_table_extraction_basic"
    ],
    "src/tests/integration/watcher.rs": [
      "Duration",
      "EmbeddingEngine",
      "ExtractorManager",
      "IncrementalIndexer",
      "SymbolDatabase",
      "TempDir",
      "atomic_cleanup_julie_dir",
      "fs",
      "sleep",
      "test_blake3_change_detection_placeholder",
      "test_ignore_patterns",
      "test_language_detection_by_extension",
      "test_real_time_file_watcher_indexing",
      "test_supported_extensions"
    ],
    "src/database/symbols/bulk.rs": [
      "BATCH_SIZE",
      "bulk_store_symbols",
      "create_symbol_indexes",
      "drop_symbol_indexes",
      "params"
    ],
    "src/extractors/python/relationships.rs": [
      "HashMap",
      "extract_call_relationships",
      "extract_class_relationships",
      "extract_method_name_from_call",
      "extract_relationships",
      "find_containing_function",
      "visit_node_for_relationships"
    ],
    "src/tests/cli/codesearch.rs": [
      "Command",
      "PathBuf",
      "Result",
      "TempDir",
      "error_handling_tests",
      "get_binary_path",
      "run_scan",
      "run_update",
      "scan_tests",
      "test_scan_calculates_blake3_hash",
      "test_scan_creates_database",
      "test_scan_extracts_symbols_correctly",
      "test_scan_handles_empty_directory",
      "test_scan_indexes_all_non_binary_files",
      "test_scan_invalid_directory",
      "test_scan_readonly_db_path",
      "test_scan_stores_file_content",
      "test_update_adds_new_file",
      "test_update_detects_changes",
      "test_update_detects_unchanged_file",
      "test_update_nonexistent_file_fails",
      "update_tests"
    ],
    "fixtures/real-world/sql/postgresql-migrations.sql": [
      "apply_migration",
      "apply_migration"
    ],
    "fixtures/real-world/rust/lib.rs": [
      "add",
      "multiply"
    ],
    "src/extractors/html/scripts.rs": [
      "AttributeHandler",
      "HTMLHelpers",
      "HashMap",
      "Node",
      "ScriptStyleExtractor",
      "extract_script_element",
      "extract_style_element"
    ],
    "src/lib.rs": [
      "cli",
      "database",
      "embeddings",
      "extractors",
      "handler",
      "health",
      "language",
      "startup",
      "tests",
      "tools",
      "tracing",
      "utils",
      "watcher",
      "workspace"
    ],
    "src/tests/extractors/css/utilities.rs": [
      "SymbolKind",
      "test_extract_css_custom_properties_and_math_functions",
      "tests"
    ],
    "src/tests/extractors/rust/types.rs": [
      "rust_types_tests",
      "test_type_extraction"
    ],
    "src/tests/extractors/java/identifier_extraction.rs": [
      "JavaExtractor",
      "PathBuf",
      "identifier_extraction_tests",
      "init_parser",
      "test_chained_member_access",
      "test_extract_function_calls",
      "test_extract_member_access",
      "test_file_scoped_containing_symbol",
      "test_no_duplicate_identifiers"
    ],
    "fixtures/real-world/swift/utils.swift": [
      "Foundation",
      "String",
      "Utils",
      "calculateArea",
      "emailRegex",
      "formatDate",
      "formatter",
      "isValidEmail"
    ],
    "src/tools/exploration/mod.rs": [
      "FindLogicTool",
      "find_logic",
      "types"
    ],
    "src/extractors/powershell/documentation.rs": [
      "BaseExtractor",
      "Node",
      "extract_powershell_doc_comment",
      "get_command_documentation",
      "get_variable_documentation",
      "is_automatic_variable",
      "is_environment_variable"
    ],
    "src/extractors/zig/relationships.rs": [
      "extract_function_call_relationships",
      "extract_relationships",
      "extract_struct_relationships",
      "traverse_for_relationships",
      "traverse_struct_fields"
    ],
    "fixtures/editing/sources/broken/multi_property_object.js": [
      "Anonymous",
      "email",
      "getData",
      "name",
      "obj",
      "status"
    ],
    "docs/INTELLIGENCE_LAYER.md": [],
    "src/tools/search/query_preprocessor.rs": [
      "PreprocessedQuery",
      "QueryType",
      "Regex",
      "contains_code_pattern",
      "detect_query_type",
      "is_glob_pattern",
      "is_pure_wildcard",
      "is_simple_symbol",
      "preprocess_query",
      "process_glob_query",
      "process_pattern_query",
      "process_query",
      "process_standard_query",
      "process_symbol_query",
      "sanitize_for_fts5",
      "sanitize_glob_for_fts5",
      "sanitize_pattern_for_fts5",
      "sanitize_query",
      "sanitize_standard_for_fts5",
      "sanitize_symbol_for_fts5",
      "test_query_type_detection_integration",
      "test_sanitization_integration",
      "test_wildcard_validation_integration",
      "tests",
      "validate_query"
    ],
    "fixtures/real-world/typescript/user-service.ts": [
      "./logger",
      "Anonymous",
      "DEFAULT_ROLES",
      "Permission",
      "Permission",
      "Role",
      "Role",
      "User",
      "User",
      "UserService",
      "UserService",
      "action",
      "cache",
      "constructor",
      "createUser",
      "createdAt",
      "delay",
      "email",
      "emailRegex",
      "existingUser",
      "export",
      "fetchUserFromDatabase",
      "findUserById",
      "generateId",
      "hasPermission",
      "id",
      "id",
      "logger",
      "name",
      "name",
      "permissions",
      "resource",
      "roles",
      "saveUserToDatabase",
      "updateUser",
      "updatedUser",
      "user",
      "user",
      "validateEmail",
      "validateEmail"
    ],
    "fixtures/real-world/razor/TipOfTheDayComponent.razor": [
      "CmsService",
      "Model",
      "Model",
      "div",
      "div",
      "h5",
      "h6",
      "p",
      "string.IsNullOrEmpty"
    ],
    "src/extractors/powershell/classes.rs": [
      "Node",
      "documentation",
      "extract_class",
      "extract_class_signature",
      "extract_enum",
      "extract_enum_member",
      "extract_method",
      "extract_method_signature",
      "extract_property",
      "extract_property_signature"
    ],
    "src/extractors/python/mod.rs": [
      "HashMap",
      "PythonExtractor",
      "assignments",
      "base",
      "base_mut",
      "decorators",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbols",
      "functions",
      "helpers",
      "identifiers",
      "imports",
      "infer_type_from_signature",
      "infer_types",
      "new",
      "relationships",
      "signatures",
      "traverse_tree",
      "types"
    ],
    "src/tests/extractors/bash/mod.rs": [
      "BashExtractor",
      "BashExtractor",
      "Parser",
      "Parser",
      "PathBuf",
      "PathBuf",
      "bash_extractor_tests",
      "doc_comments",
      "extract_symbols",
      "extract_symbols_and_relationships",
      "identifier_extraction_tests",
      "init_parser",
      "init_parser",
      "test_chained_member_access",
      "test_extract_arrays_and_associative_arrays",
      "test_extract_bash_functions_and_parameters",
      "test_extract_complex_parameter_expansion",
      "test_extract_control_flow_constructs_and_environment_variables",
      "test_extract_devops_and_cross_language_command_calls",
      "test_extract_function_call_relationships",
      "test_extract_function_calls",
      "test_extract_member_access",
      "test_extract_process_substitution",
      "test_file_scoped_containing_symbol",
      "test_handle_empty_files_and_minimal_content",
      "test_handle_malformed_bash_and_extraction_errors_gracefully",
      "test_infer_variable_types_and_extract_documentation",
      "test_no_duplicate_identifiers"
    ],
    "src/extractors/html/elements.rs": [
      "AttributeHandler",
      "ElementExtractor",
      "HTMLHelpers",
      "HTMLTypes",
      "HashMap",
      "Node",
      "extract_comment",
      "extract_doctype",
      "extract_element"
    ],
    "src/tests/extractors/css/custom.rs": [
      "extract_symbols",
      "test_extract_css_variables_calc_and_modern_css_functions",
      "tests"
    ],
    "docs/README.md": [],
    "src/tests/extractors/gdscript/identifier_extraction.rs": [
      "GDScriptExtractor",
      "PathBuf",
      "identifier_extraction_tests",
      "init_parser",
      "test_gdscript_chained_member_access",
      "test_gdscript_duplicate_calls_at_different_locations",
      "test_gdscript_function_calls",
      "test_gdscript_identifiers_have_containing_symbol",
      "test_gdscript_member_access"
    ],
    "src/tests/extractors/regex/extractor.rs": [
      "PathBuf",
      "RegexExtractor",
      "test_regex_extractor_creation"
    ],
    "src/tests/extractors/sql/schema.rs": [
      "extract_symbols",
      "test_extract_schema_and_index_metadata",
      "tests"
    ],
    "src/tests/integration/workspace_isolation_smoke.rs": [
      "FastSearchTool",
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "Ordering",
      "Result",
      "WorkspaceRegistryService",
      "WorkspaceRegistryService",
      "extract_text_from_result",
      "extract_workspace_id",
      "get_fixture_path",
      "mark_index_ready",
      "test_invalid_workspace_id_returns_error",
      "test_search_never_crosses_workspaces",
      "test_workspace_id_resolution",
      "workspace_isolation_smoke_tests"
    ],
    "src/tools/navigation/reference_workspace.rs": [
      "Arc",
      "JulieServerHandler",
      "Result",
      "RwLock",
      "VectorStore",
      "compare_symbols_by_priority_and_context",
      "debug",
      "find_definitions_in_reference_workspace",
      "find_references_in_reference_workspace",
      "generate_naming_variants"
    ],
    "src/extractors/typescript/mod.rs": [
      "HashMap",
      "Tree",
      "TypeScriptExtractor",
      "base",
      "base_mut",
      "classes",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbols",
      "functions",
      "helpers",
      "identifiers",
      "imports_exports",
      "infer_types",
      "inference",
      "interfaces",
      "new",
      "relationships",
      "symbols"
    ],
    "src/extractors/typescript/imports_exports.rs": [
      "Node",
      "TypeScriptExtractor",
      "extract_export",
      "extract_import"
    ],
    "fixtures/editing/controls/line-edit/line_edit_insert_import.py": [
      "calculate_sum",
      "data",
      "logging",
      "main",
      "result",
      "total"
    ],
    "src/extractors/rust/signatures.rs": [
      "HashMap",
      "Node",
      "RustExtractor",
      "extract_associated_type",
      "extract_function_signature",
      "extract_macro_invocation",
      "extract_return_type",
      "extract_use"
    ],
    "CLAUDE.md": [],
    "src/tests/extractors/sql/doc_comments.rs": [
      "extract_symbols",
      "test_extract_block_comment_from_create_table",
      "test_extract_doc_comment_from_create_domain",
      "test_extract_doc_comment_from_create_function",
      "test_extract_doc_comment_from_create_index",
      "test_extract_doc_comment_from_create_procedure",
      "test_extract_doc_comment_from_create_sequence",
      "test_extract_doc_comment_from_create_table",
      "test_extract_doc_comment_from_create_trigger",
      "test_extract_doc_comment_from_create_type",
      "test_extract_doc_comment_from_create_view",
      "test_extract_doc_comment_from_cte",
      "test_extract_multiple_doc_comments_in_single_file",
      "test_no_doc_comment_when_missing",
      "tests"
    ],
    "fixtures/editing/sources/broken/multi_element_array.js": [
      "colors"
    ],
    "src/tests/extractors/css/advanced.rs": [
      "extract_symbols",
      "test_extract_complex_selectors_combinators_and_pseudo_elements",
      "tests"
    ],
    "fixtures/real-world/regex/validation_patterns.regex": [
      "# Complex Regular Expression Patterns Collection\n# Comprehensive regex patterns for real-world validation and parsing\n\n# ==========================================\n# EMAIL VALIDATION PATTERNS\n# ==========================================\n\n# Basic email pattern\n^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\n\n# RFC 5322 compliant email (simplified)\n^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\n\n# Email with optional display name\n^(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$\n\n# ==========================================\n# PHONE NUMBER PATTERNS\n# ==========================================\n\n# US phone number formats\n^\\+?1?[-.\\s]?\\(?([0-9]{3})\\)?[-.\\s]?([0-9]{3})[-.\\s]?([0-9]{4})$\n\n# International phone number (E.164 format)\n^\\+[1-9]\\d{1,14}$\n\n# Flexible phone number with optional country code\n^(\\+\\d{1,3}[-.\\s]?)?\\(?\\d{1,4}\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$\n\n# ==========================================\n# URL AND WEB PATTERNS\n# ==========================================\n\n# Basic URL pattern\n^https?:\\/\\/(?:[-\\w.])+(?:\\:[0-9]+)?(?:\\/(?:[\\w\\/_.])*(?:\\?(?:[\\w&=%.]*))?(?:\\#(?:[\\w.]*))?)?$\n\n# Comprehensive URL with all components\n^(https?|ftp):\\/\\/(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})+(?::(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})+)?@)?(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)*[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?)|(?:\\[(?:(?:(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,7}:)|(?:(?:[0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,5}(?::[0-9a-fA-F]{1,4}){1,2})|(?:(?:[0-9a-fA-F]{1,4}:){1,4}(?::[0-9a-fA-F]{1,4}){1,3})|(?:(?:[0-9a-fA-F]{1,4}:){1,3}(?::[0-9a-fA-F]{1,4}){1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,2}(?::[0-9a-fA-F]{1,4}){1,5})|(?:[0-9a-fA-F]{1,4}:(?:(?::[0-9a-fA-F]{1,4}){1,6}))|(?::(?:(?::[0-9a-fA-F]{1,4}){1,7}|:))|(?:fe80:(?::[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]+)|(?:::(ffff(:0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])\\.){3}(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])))\\]))(?::(?:6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9]))?(?:\\/(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*))*(?:\\?(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*(?:&(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*)*))?(?:\\#(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*)?$\n\n# Domain name validation\n^(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)*[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?$\n\n# IPv4 address\n^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\n\n# IPv6 address\n^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$|^::1$|^::$\n\n# ==========================================\n# DATE AND TIME PATTERNS\n# ==========================================\n\n# ISO 8601 date format (YYYY-MM-DD)\n^\\d{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$\n\n# ISO 8601 datetime with timezone\n^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d{3})?(?:Z|[+-]\\d{2}:\\d{2})$\n\n# Flexible date formats (MM/DD/YYYY, DD/MM/YYYY, etc.)\n^(?:(?:0?[1-9]|1[0-2])[\\/-](?:0?[1-9]|[12][0-9]|3[01])[\\/-](?:19|20)\\d{2})|(?:(?:0?[1-9]|[12][0-9]|3[01])[\\/-](?:0?[1-9]|1[0-2])[\\/-](?:19|20)\\d{2})$\n\n# Time format (12-hour with AM/PM)\n^(1[0-2]|0?[1-9]):([0-5][0-9]):([0-5][0-9])\\s?(AM|PM|am|pm)$\n\n# Time format (24-hour)\n^([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$\n\n# ==========================================\n# FINANCIAL PATTERNS\n# ==========================================\n\n# Credit card numbers (with optional spaces/dashes)\n^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3[0-9]{13}|6(?:011|5[0-9]{2})[0-9]{12})$\n\n# Bank account number (US format)\n^[0-9]{8,17}$\n\n# Currency amounts\n^\\$?[0-9]{1,3}(?:,[0-9]{3})*(?:\\.[0-9]{2})?$\n\n# Cryptocurrency wallet addresses (Bitcoin)\n^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$\n\n# Ethereum address\n^0x[a-fA-F0-9]{40}$\n\n# ==========================================\n# PASSWORD VALIDATION PATTERNS\n# ==========================================\n\n# Strong password (8+ chars, upper, lower, digit, special)\n^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\n\n# Medium password (6+ chars with mixed case and numbers)\n^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{6,}$\n\n# Password without common patterns\n^(?!.*(.)\\1{2,})(?!.*123)(?!.*abc)(?!.*password)(?!.*qwerty)[A-Za-z\\d@$!%*?&]{8,}$\n\n# ==========================================\n# DATA EXTRACTION PATTERNS\n# ==========================================\n\n# HTML tags extraction\n<([a-zA-Z][a-zA-Z0-9]*)\\b[^<>]*>.*?</\\1>\n\n# CSS selectors\n^[a-zA-Z][a-zA-Z0-9_-]*$|^\\.[a-zA-Z][a-zA-Z0-9_-]*$|^#[a-zA-Z][a-zA-Z0-9_-]*$\n\n# Extract emails from text\n\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b\n\n# Extract URLs from text\nhttps?:\\/\\/(?:[-\\w.])+(?:\\:[0-9]+)?(?:\\/(?:[\\w\\/_.])*(?:\\?(?:[\\w&=%.]*))?(?:\\#(?:[\\w.]*))?)?\n\n# Extract phone numbers from text\n(?:\\+?1[-.\\s]?)?(?:\\(?[0-9]{3}\\)?[-.\\s]?[0-9]{3}[-.\\s]?[0-9]{4})\n\n# Extract hashtags\n#[a-zA-Z0-9_]+\n\n# Extract mentions\n@[a-zA-Z0-9_]+\n\n# ==========================================\n# LOG PARSING PATTERNS\n# ==========================================\n\n# Apache/Nginx access log\n^(\\S+) \\S+ \\S+ \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+) \"([^\"]*)\" \"([^\"]*)\"$\n\n# Syslog format\n^(\\w{3}\\s+\\d{1,2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+(\\S+)\\s+([^:]+):\\s+(.*)$\n\n# JSON log extraction\n^\\{.*\\}$\n\n# Error patterns in logs\n(ERROR|error|Error|FATAL|fatal|Fatal|EXCEPTION|exception|Exception)\n\n# ==========================================\n# PROGRAMMING PATTERNS\n# ==========================================\n\n# Variable names (most languages)\n^[a-zA-Z_][a-zA-Z0-9_]*$\n\n# Function calls\n\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(\n\n# Comments (single line)\n^\\s*//.*$|^\\s*#.*$\n\n# Hexadecimal colors\n^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\n\n# Version numbers (semantic versioning)\n^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$\n\n# ==========================================\n# ADVANCED PATTERNS\n# ==========================================\n\n# Balanced parentheses (using recursion - not all regex engines support this)\n\\((?:[^()]*|\\((?:[^()]*|\\([^()]*\\))*\\))*\\)\n\n# Words with specific letter patterns\n^(?=.*a)(?=.*e)(?=.*i)(?=.*o)(?=.*u)[a-z]+$\n\n# Palindrome detection\n^([a-z])(?:(?R)|[a-z]?\\1)$\n\n# Remove extra whitespace\n\\s+\n\n# Split CamelCase\n(?<=[a-z])(?=[A-Z])|(?<=[A-Z])(?=[A-Z][a-z])\n\n# ==========================================\n# SECURITY PATTERNS\n# ==========================================\n\n# SQL injection patterns\n(\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION)\\b)|(\\b(OR|AND)\\b\\s+\\d+=\\d+)|('.*')|(--.*)|(\\/\\*.*\\*\\/)\n\n# XSS patterns\n<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>|javascript:|on\\w+\\s*=\n\n# Path traversal\n(\\.\\.\\/|\\.\\.\\\\)+\n\n# Command injection\n[;&|`$(){}[\\]\\\\]",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "$",
      "&(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*",
      "'.*'",
      "(?!<\\/script>)<[^<]*",
      "(?:&(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*)",
      "(?:(?!<\\/script>)<[^<]*)",
      "(?:(?:(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,7}:)|(?:(?:[0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,5}(?::[0-9a-fA-F]{1,4}){1,2})|(?:(?:[0-9a-fA-F]{1,4}:){1,4}(?::[0-9a-fA-F]{1,4}){1,3})|(?:(?:[0-9a-fA-F]{1,4}:){1,3}(?::[0-9a-fA-F]{1,4}){1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,2}(?::[0-9a-fA-F]{1,4}){1,5})|(?:[0-9a-fA-F]{1,4}:(?:(?::[0-9a-fA-F]{1,4}){1,6}))|(?::(?:(?::[0-9a-fA-F]{1,4}){1,7}|:))|(?:fe80:(?::[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]+)|(?:::(ffff(:0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])\\.){3}(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])))",
      "(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)*[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?)|(?:\\[(?:(?:(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,7}:)|(?:(?:[0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,5}(?::[0-9a-fA-F]{1,4}){1,2})|(?:(?:[0-9a-fA-F]{1,4}:){1,4}(?::[0-9a-fA-F]{1,4}){1,3})|(?:(?:[0-9a-fA-F]{1,4}:){1,3}(?::[0-9a-fA-F]{1,4}){1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,2}(?::[0-9a-fA-F]{1,4}){1,5})|(?:[0-9a-fA-F]{1,4}:(?:(?::[0-9a-fA-F]{1,4}){1,6}))|(?::(?:(?::[0-9a-fA-F]{1,4}){1,7}|:))|(?:fe80:(?::[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]+)|(?:::(ffff(:0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])\\.){3}(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])))\\]))",
      "(?:(?:0?[1-9]|1[0-2])[\\/-](?:0?[1-9]|[12][0-9]|3[01])[\\/-](?:19|20)\\d{2})",
      "(?:(?:0?[1-9]|[12][0-9]|3[01])[\\/-](?:0?[1-9]|1[0-2])[\\/-](?:19|20)\\d{2})",
      "(?:(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])\\.)",
      "(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.)",
      "(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.)",
      "(?:(?::[0-9a-fA-F]{1,4}){1,6})",
      "(?:(?::[0-9a-fA-F]{1,4}){1,7}|:)",
      "(?:(?:[0-9a-fA-F]{1,4}:){1,2}(?::[0-9a-fA-F]{1,4}){1,5})",
      "(?:(?:[0-9a-fA-F]{1,4}:){1,3}(?::[0-9a-fA-F]{1,4}){1,4})",
      "(?:(?:[0-9a-fA-F]{1,4}:){1,4}(?::[0-9a-fA-F]{1,4}){1,3})",
      "(?:(?:[0-9a-fA-F]{1,4}:){1,5}(?::[0-9a-fA-F]{1,4}){1,2})",
      "(?:(?:[0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4})",
      "(?:(?:[0-9a-fA-F]{1,4}:){1,7}:)",
      "(?:(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4})",
      "(?:(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,7}:)|(?:(?:[0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,5}(?::[0-9a-fA-F]{1,4}){1,2})|(?:(?:[0-9a-fA-F]{1,4}:){1,4}(?::[0-9a-fA-F]{1,4}){1,3})|(?:(?:[0-9a-fA-F]{1,4}:){1,3}(?::[0-9a-fA-F]{1,4}){1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,2}(?::[0-9a-fA-F]{1,4}){1,5})|(?:[0-9a-fA-F]{1,4}:(?:(?::[0-9a-fA-F]{1,4}){1,6}))|(?::(?:(?::[0-9a-fA-F]{1,4}){1,7}|:))|(?:fe80:(?::[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]+)|(?:::(ffff(:0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])\\.){3}(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9]))",
      "(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*(?:&(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*)*)",
      "(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*)",
      "(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})+(?::(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})+)?@)",
      "(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
      "(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)*[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?)",
      "(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)*[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?)|(?:\\[(?:(?:(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,7}:)|(?:(?:[0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,5}(?::[0-9a-fA-F]{1,4}){1,2})|(?:(?:[0-9a-fA-F]{1,4}:){1,4}(?::[0-9a-fA-F]{1,4}){1,3})|(?:(?:[0-9a-fA-F]{1,4}:){1,3}(?::[0-9a-fA-F]{1,4}){1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,2}(?::[0-9a-fA-F]{1,4}){1,5})|(?:[0-9a-fA-F]{1,4}:(?:(?::[0-9a-fA-F]{1,4}){1,6}))|(?::(?:(?::[0-9a-fA-F]{1,4}){1,7}|:))|(?:fe80:(?::[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]+)|(?:::(ffff(:0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])\\.){3}(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])))\\])",
      "(?:(?R)|[a-z]?\\1)",
      "(?:,[0-9]{3})",
      "(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))",
      "(?:011|5[0-9]{2})",
      "(?:0?[1-9]|1[0-2])",
      "(?:0?[1-9]|1[0-2])",
      "(?:0?[1-9]|1[0-2])[\\/-](?:0?[1-9]|[12][0-9]|3[01])[\\/-](?:19|20)\\d{2}",
      "(?:0?[1-9]|[12][0-9]|3[01])",
      "(?:0?[1-9]|[12][0-9]|3[01])",
      "(?:0?[1-9]|[12][0-9]|3[01])[\\/-](?:0?[1-9]|1[0-2])[\\/-](?:19|20)\\d{2}",
      "(?:0[1-9]|1[0-2])",
      "(?:0[1-9]|[12][0-9]|3[01])",
      "(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)",
      "(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)",
      "(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*",
      "(?:19|20)",
      "(?:19|20)",
      "(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])",
      "(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])",
      "(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])\\.",
      "(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)",
      "(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)",
      "(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)",
      "(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.",
      "(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.",
      "(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)",
      "(?:2[0-4]|1?[0-9])",
      "(?:2[0-4]|1?[0-9])",
      "(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3[0-9]{13}|6(?:011|5[0-9]{2})[0-9]{12})",
      "(?:6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9])",
      "(?::(?:(?::[0-9a-fA-F]{1,4}){1,7}|:))",
      "(?::(?:6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9]))",
      "(?::(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})+)",
      "(?:::(ffff(:0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])\\.){3}(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9]))",
      "(?::[0-9a-fA-F]{0,4})",
      "(?::[0-9a-fA-F]{1,4})",
      "(?::[0-9a-fA-F]{1,4})",
      "(?::[0-9a-fA-F]{1,4})",
      "(?::[0-9a-fA-F]{1,4})",
      "(?::[0-9a-fA-F]{1,4})",
      "(?::[0-9a-fA-F]{1,4})",
      "(?::[0-9a-fA-F]{1,4}){1,6}",
      "(?::[0-9a-fA-F]{1,4}){1,7}|:",
      "(?:Z|[+-]\\d{2}:\\d{2})",
      "(?:[-\\w.])",
      "(?:[-\\w.])",
      "(?:[0-9]{3})",
      "(?:[0-9a-fA-F]{1,4}:(?:(?::[0-9a-fA-F]{1,4}){1,6}))",
      "(?:[0-9a-fA-F]{1,4}:)",
      "(?:[0-9a-fA-F]{1,4}:)",
      "(?:[0-9a-fA-F]{1,4}:)",
      "(?:[0-9a-fA-F]{1,4}:)",
      "(?:[0-9a-fA-F]{1,4}:)",
      "(?:[0-9a-fA-F]{1,4}:)",
      "(?:[0-9a-fA-F]{1,4}:)",
      "(?:[0-9a-fA-F]{1,4}:)",
      "(?:[0-9a-fA-F]{1,4}:){1,2}(?::[0-9a-fA-F]{1,4}){1,5}",
      "(?:[0-9a-fA-F]{1,4}:){1,3}(?::[0-9a-fA-F]{1,4}){1,4}",
      "(?:[0-9a-fA-F]{1,4}:){1,4}(?::[0-9a-fA-F]{1,4}){1,3}",
      "(?:[0-9a-fA-F]{1,4}:){1,5}(?::[0-9a-fA-F]{1,4}){1,2}",
      "(?:[0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}",
      "(?:[0-9a-fA-F]{1,4}:){1,7}:",
      "(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}",
      "(?:[\\w&=%.]*)",
      "(?:[\\w&=%.]*)",
      "(?:[\\w.]*)",
      "(?:[\\w.]*)",
      "(?:[\\w\\/_.])",
      "(?:[\\w\\/_.])",
      "(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])",
      "(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])",
      "(?:[^()]*|\\((?:[^()]*|\\([^()]*\\))*\\))",
      "(?:[^()]*|\\([^()]*\\))",
      "(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")",
      "(?:[a-zA-Z0-9-]*[a-zA-Z0-9])",
      "(?:[a-zA-Z0-9-]*[a-zA-Z0-9])",
      "(?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])",
      "(?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])",
      "(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})",
      "(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})",
      "(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})",
      "(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})",
      "(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})",
      "(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})",
      "(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*",
      "(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*(?:&(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*)*",
      "(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})+(?::(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})+)?@",
      "(?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])",
      "(?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])",
      "(?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])",
      "(?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])",
      "(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)",
      "(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]",
      "(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)",
      "(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)",
      "(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)*[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?",
      "(?:\\#(?:[\\w.]*))",
      "(?:\\#(?:[\\w.]*))",
      "(?:\\#(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*)",
      "(?:\\(?[0-9]{3}\\)?[-.\\s]?[0-9]{3}[-.\\s]?[0-9]{4})",
      "(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))",
      "(?:\\+?1[-.\\s]?)",
      "(?:\\+?1[-.\\s]?)?(?:\\(?[0-9]{3}\\)?[-.\\s]?[0-9]{3}[-.\\s]?[0-9]{4})",
      "(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))",
      "(?:\\.[0-9]{2})",
      "(?:\\.[0-9a-zA-Z-]+)",
      "(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)",
      "(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)",
      "(?:\\.\\d{3})",
      "(?:\\/(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*))",
      "(?:\\/(?:[\\w\\/_.])*(?:\\?(?:[\\w&=%.]*))?(?:\\#(?:[\\w.]*))?)",
      "(?:\\/(?:[\\w\\/_.])*(?:\\?(?:[\\w&=%.]*))?(?:\\#(?:[\\w.]*))?)",
      "(?:\\:[0-9]+)",
      "(?:\\:[0-9]+)",
      "(?:\\?(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*(?:&(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*)*))",
      "(?:\\?(?:[\\w&=%.]*))",
      "(?:\\?(?:[\\w&=%.]*))",
      "(?:\\[(?:(?:(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,7}:)|(?:(?:[0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,5}(?::[0-9a-fA-F]{1,4}){1,2})|(?:(?:[0-9a-fA-F]{1,4}:){1,4}(?::[0-9a-fA-F]{1,4}){1,3})|(?:(?:[0-9a-fA-F]{1,4}:){1,3}(?::[0-9a-fA-F]{1,4}){1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,2}(?::[0-9a-fA-F]{1,4}){1,5})|(?:[0-9a-fA-F]{1,4}:(?:(?::[0-9a-fA-F]{1,4}){1,6}))|(?::(?:(?::[0-9a-fA-F]{1,4}){1,7}|:))|(?:fe80:(?::[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]+)|(?:::(ffff(:0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])\\.){3}(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])))\\])",
      "(?:fe80:(?::[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]+)",
      "(?<=[a-z])(?=[A-Z])|(?<=[A-Z])(?=[A-Z][a-z])",
      "(ERROR|error|Error|FATAL|fatal|Fatal|EXCEPTION|exception|Exception)",
      "(\\.\\.\\/|\\.\\.\\\\)+",
      "(\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION)\\b)|(\\b(OR|AND)\\b\\s+\\d+=\\d+)|('.*')|(--.*)|(\\/\\*.*\\*\\/)",
      ",[0-9]{3}",
      "-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*)",
      "--.*",
      ".",
      ".*",
      ".*(.)\\1{2,}",
      ".*123",
      ".*[@$!%*?&]",
      ".*[A-Z]",
      ".*[A-Z]",
      ".*[a-z]",
      ".*[a-z]",
      ".*\\d",
      ".*\\d",
      ".*a",
      ".*abc",
      ".*e",
      ".*i",
      ".*o",
      ".*password",
      ".*qwerty",
      ".*u",
      "011|5[0-9]{2}",
      "0?[1-9]|1[0-2]",
      "0?[1-9]|1[0-2]",
      "0?[1-9]|[12][0-9]|3[01]",
      "0?[1-9]|[12][0-9]|3[01]",
      "0[1-9]|1[0-2]",
      "0[1-9]|[12][0-9]|3[01]",
      "0|[1-9]\\d*",
      "0|[1-9]\\d*",
      "0|[1-9]\\d*",
      "0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*",
      "0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*",
      "12-hour with AM/PM",
      "19|20",
      "19|20",
      "1[0-2]|0?[1-9]",
      "24-hour",
      "25[0-5]|(?:2[0-4]|1?[0-9])?[0-9]",
      "25[0-5]|(?:2[0-4]|1?[0-9])?[0-9]",
      "25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?",
      "25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?",
      "25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?",
      "25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+",
      "2[0-4]|1?[0-9]",
      "2[0-4]|1?[0-9]",
      "4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3[0-9]{13}|6(?:011|5[0-9]{2})[0-9]{12}",
      "6+ chars with mixed case and numbers",
      "6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9]",
      "8+ chars, upper, lower, digit, special",
      ":(?:(?::[0-9a-fA-F]{1,4}){1,7}|:)",
      ":(?:6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9])",
      ":(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})+",
      ":0{1,4}",
      "::(ffff(:0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])\\.){3}(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])",
      ":[0-9a-fA-F]{0,4}",
      ":[0-9a-fA-F]{1,4}",
      ":[0-9a-fA-F]{1,4}",
      ":[0-9a-fA-F]{1,4}",
      ":[0-9a-fA-F]{1,4}",
      ":[0-9a-fA-F]{1,4}",
      ":[0-9a-fA-F]{1,4}",
      "<([a-zA-Z][a-zA-Z0-9]*)\\b[^<>]*>.*?</\\1>",
      "<\\/script>",
      "<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>|javascript:|on\\w+\\s*=",
      "@[a-zA-Z0-9_]+",
      "AM|PM|am|pm",
      "Bitcoin",
      "E.164 format",
      "ERROR|error|Error|FATAL|fatal|Fatal|EXCEPTION|exception|Exception",
      "MM/DD/YYYY, DD/MM/YYYY, etc.",
      "OR|AND",
      "SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION",
      "US format",
      "YYYY-MM-DD",
      "Z|[+-]\\d{2}:\\d{2}",
      "[+-]",
      "[+\\-]",
      "[-.\\s]",
      "[-.\\s]",
      "[-.\\s]",
      "[-.\\s]",
      "[-.\\s]",
      "[-.\\s]",
      "[-.\\s]",
      "[-.\\s]",
      "[-.\\s]",
      "[-\\w.]",
      "[-\\w.]",
      "[0-2]",
      "[0-2]",
      "[0-2]",
      "[0-2]",
      "[0-2]",
      "[0-3]",
      "[0-4]",
      "[0-4]",
      "[0-4]",
      "[0-4]",
      "[0-4]",
      "[0-4]",
      "[0-4]",
      "[0-4]",
      "[0-5]",
      "[0-5]",
      "[0-5]",
      "[0-5]",
      "[0-5]",
      "[0-5]",
      "[0-5]",
      "[0-5]",
      "[0-5]",
      "[0-5]",
      "[0-5]",
      "[0-5][0-9]",
      "[0-5][0-9]",
      "[0-5][0-9]",
      "[0-5][0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]",
      "[0-9]{3}",
      "[0-9]{3}",
      "[0-9]{3}",
      "[0-9]{4}",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]",
      "[0-9a-fA-F]{1,4}:",
      "[0-9a-fA-F]{1,4}:",
      "[0-9a-fA-F]{1,4}:",
      "[0-9a-fA-F]{1,4}:",
      "[0-9a-fA-F]{1,4}:",
      "[0-9a-fA-F]{1,4}:",
      "[0-9a-fA-F]{1,4}:",
      "[0-9a-fA-F]{1,4}:",
      "[0-9a-fA-F]{1,4}:(?:(?::[0-9a-fA-F]{1,4}){1,6})",
      "[0-9a-zA-Z-]",
      "[0-9a-zA-Z-]",
      "[0-9a-zA-Z-]",
      "[0-9a-zA-Z-]",
      "[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*",
      "[0-9a-zA-Z]",
      "[01]",
      "[01]",
      "[01]",
      "[01]",
      "[01]",
      "[01]",
      "[01]",
      "[01]",
      "[01]?[0-9]|2[0-3]",
      "[1-5]",
      "[1-5]",
      "[1-9]",
      "[1-9]",
      "[1-9]",
      "[1-9]",
      "[1-9]",
      "[1-9]",
      "[1-9]",
      "[1-9]",
      "[1-9]",
      "[1-9]",
      "[1-9]",
      "[1-9]",
      "[1-9]",
      "[1-9]",
      "[12]",
      "[12]",
      "[12]",
      "[13]",
      "[47]",
      "[;&|`$(){}[\\]\\\\]",
      "[;&|`$(){}[\\]\\\\]",
      "[@$!%*?&]",
      "[A-Fa-f0-9]",
      "[A-Fa-f0-9]",
      "[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3}",
      "[A-Z]",
      "[A-Z]",
      "[A-Z]",
      "[A-Z]",
      "[A-Z]",
      "[A-Z][a-z]",
      "[A-Za-z0-9.-]",
      "[A-Za-z0-9._%+-]",
      "[A-Za-z\\d@$!%*?&]",
      "[A-Za-z\\d@$!%*?&]",
      "[A-Za-z\\d@$!%*?&]",
      "[A-Z|a-z]",
      "[\\/-]",
      "[\\/-]",
      "[\\/-]",
      "[\\/-]",
      "[\\w&=%.]",
      "[\\w&=%.]",
      "[\\w&=%.]*",
      "[\\w&=%.]*",
      "[\\w.]",
      "[\\w.]",
      "[\\w.]*",
      "[\\w.]*",
      "[\\w:/]",
      "[\\w:/]+\\s[+\\-]\\d{4}",
      "[\\w\\/_.]",
      "[\\w\\/_.]",
      "[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]",
      "[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f]",
      "[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]",
      "[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f]",
      "[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f]",
      "[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f]",
      "[^\"]",
      "[^\"]",
      "[^\"]*",
      "[^\"]*",
      "[^()]",
      "[^()]",
      "[^()]",
      "[^()]*|\\((?:[^()]*|\\([^()]*\\))*\\)",
      "[^()]*|\\([^()]*\\)",
      "[^:]",
      "[^:]+",
      "[^<>]",
      "[^<]",
      "[^<]",
      "[a-fA-F0-9]",
      "[a-km-zA-HJ-NP-Z1-9]",
      "[a-zA-Z-]",
      "[a-zA-Z-]",
      "[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]",
      "[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]",
      "[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\"",
      "[a-zA-Z0-9-]",
      "[a-zA-Z0-9-]",
      "[a-zA-Z0-9-]",
      "[a-zA-Z0-9-]",
      "[a-zA-Z0-9-]",
      "[a-zA-Z0-9-]*[a-zA-Z0-9]",
      "[a-zA-Z0-9-]*[a-zA-Z0-9]",
      "[a-zA-Z0-9-]{0,61}[a-zA-Z0-9]",
      "[a-zA-Z0-9-]{0,61}[a-zA-Z0-9]",
      "[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]",
      "[a-zA-Z0-9.-]",
      "[a-zA-Z0-9._%+-]",
      "[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]",
      "[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]",
      "[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]",
      "[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]",
      "[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]",
      "[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]",
      "[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2}",
      "[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2}",
      "[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2}",
      "[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2}",
      "[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2}",
      "[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2}",
      "[a-zA-Z0-9\\-]",
      "[a-zA-Z0-9\\-]",
      "[a-zA-Z0-9\\-]",
      "[a-zA-Z0-9\\-]",
      "[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]",
      "[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]",
      "[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]",
      "[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9]",
      "[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.",
      "[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.",
      "[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.",
      "[a-zA-Z0-9_-]",
      "[a-zA-Z0-9_-]",
      "[a-zA-Z0-9_-]",
      "[a-zA-Z0-9_]",
      "[a-zA-Z0-9_]",
      "[a-zA-Z0-9_]",
      "[a-zA-Z0-9_]",
      "[a-zA-Z]",
      "[a-zA-Z]",
      "[a-zA-Z]",
      "[a-zA-Z]",
      "[a-zA-Z]",
      "[a-zA-Z][a-zA-Z0-9]*",
      "[a-zA-Z_]",
      "[a-zA-Z_]",
      "[a-zA-Z_][a-zA-Z0-9_]*",
      "[a-z]",
      "[a-z]",
      "[a-z]",
      "[a-z]",
      "[a-z]",
      "[a-z]",
      "[a-z]",
      "\\#(?:[\\w.]*)",
      "\\#(?:[\\w.]*)",
      "\\#(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*",
      "\\((?:[^()]*|\\((?:[^()]*|\\([^()]*\\))*\\))*\\)",
      "\\(?[0-9]{3}\\)?[-.\\s]?[0-9]{3}[-.\\s]?[0-9]{4}",
      "\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*)",
      "\\+?1[-.\\s]?",
      "\\+\\d{1,3}[-.\\s]?",
      "\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)",
      "\\.[0-9]{2}",
      "\\.[0-9a-zA-Z-]+",
      "\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+",
      "\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?",
      "\\.\\.\\/|\\.\\.\\\\",
      "\\.\\d{3}",
      "\\/(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*)",
      "\\/(?:[\\w\\/_.])*(?:\\?(?:[\\w&=%.]*))?(?:\\#(?:[\\w.]*))?",
      "\\/(?:[\\w\\/_.])*(?:\\?(?:[\\w&=%.]*))?(?:\\#(?:[\\w.]*))?",
      "\\/\\*.*\\*\\/",
      "\\:[0-9]+",
      "\\:[0-9]+",
      "\\?(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*(?:&(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*)*)",
      "\\?(?:[\\w&=%.]*)",
      "\\?(?:[\\w&=%.]*)",
      "\\S+",
      "\\S+",
      "\\S+",
      "\\S+",
      "\\S+",
      "\\[(?:(?:(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,7}:)|(?:(?:[0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,5}(?::[0-9a-fA-F]{1,4}){1,2})|(?:(?:[0-9a-fA-F]{1,4}:){1,4}(?::[0-9a-fA-F]{1,4}){1,3})|(?:(?:[0-9a-fA-F]{1,4}:){1,3}(?::[0-9a-fA-F]{1,4}){1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,2}(?::[0-9a-fA-F]{1,4}){1,5})|(?:[0-9a-fA-F]{1,4}:(?:(?::[0-9a-fA-F]{1,4}){1,6}))|(?::(?:(?::[0-9a-fA-F]{1,4}){1,7}|:))|(?:fe80:(?::[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]+)|(?:::(ffff(:0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])\\.){3}(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])))\\]",
      "\\b(OR|AND)\\b\\s+\\d+=\\d+",
      "\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION)\\b",
      "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
      "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b",
      "\\d+",
      "\\d{3}",
      "\\s+",
      "\\w{3}\\s+\\d{1,2}\\s+\\d{2}:\\d{2}:\\d{2}",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^",
      "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
      "^(1[0-2]|0?[1-9]):([0-5][0-9]):([0-5][0-9])\\s?(AM|PM|am|pm)$",
      "^(?!.*(.)\\1{2,})(?!.*123)(?!.*abc)(?!.*password)(?!.*qwerty)[A-Za-z\\d@$!%*?&]{8,}$",
      "^(?:(?:0?[1-9]|1[0-2])[\\/-](?:0?[1-9]|[12][0-9]|3[01])[\\/-](?:19|20)\\d{2})|(?:(?:0?[1-9]|[12][0-9]|3[01])[\\/-](?:0?[1-9]|1[0-2])[\\/-](?:19|20)\\d{2})$",
      "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
      "^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3[0-9]{13}|6(?:011|5[0-9]{2})[0-9]{12})$",
      "^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$|^::1$|^::$",
      "^(?:[a-zA-Z0-9!",
      "^(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)*[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?$",
      "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$",
      "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{6,}$",
      "^(?=.*a)(?=.*e)(?=.*i)(?=.*o)(?=.*u)[a-z]+$",
      "^([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$",
      "^([a-z])(?:(?R)|[a-z]?\\1)$",
      "^(\\+\\d{1,3}[-.\\s]?)?\\(?\\d{1,4}\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$",
      "^(\\S+) \\S+ \\S+ \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+) \"([^\"]*)\" \"([^\"]*)\"$",
      "^(\\w{3}\\s+\\d{1,2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+(\\S+)\\s+([^:]+):\\s+(.*)$",
      "^(https?|ftp):\\/\\/(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})+(?::(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})+)?@)?(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)*[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?)|(?:\\[(?:(?:(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,7}:)|(?:(?:[0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,5}(?::[0-9a-fA-F]{1,4}){1,2})|(?:(?:[0-9a-fA-F]{1,4}:){1,4}(?::[0-9a-fA-F]{1,4}){1,3})|(?:(?:[0-9a-fA-F]{1,4}:){1,3}(?::[0-9a-fA-F]{1,4}){1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,2}(?::[0-9a-fA-F]{1,4}){1,5})|(?:[0-9a-fA-F]{1,4}:(?:(?::[0-9a-fA-F]{1,4}){1,6}))|(?::(?:(?::[0-9a-fA-F]{1,4}){1,7}|:))|(?:fe80:(?::[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]+)|(?:::(ffff(:0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])\\.){3}(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])))\\]))(?::(?:6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9]))?(?:\\/(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*))*(?:\\?(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*(?:&(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]|%[0-9a-fA-F]{2})*)*))?(?:\\",
      "^0x[a-fA-F0-9]{40}$",
      "^[0-9]{8,17}$",
      "^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$",
      "^[a-zA-Z0-9.!",
      "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
      "^[a-zA-Z][a-zA-Z0-9_-]*$|^\\.[a-zA-Z][a-zA-Z0-9_-]*$|^",
      "^[a-zA-Z_][a-zA-Z0-9_]*$",
      "^\\$?[0-9]{1,3}(?:,[0-9]{3})*(?:\\.[0-9]{2})?$",
      "^\\+?1?[-.\\s]?\\(?([0-9]{3})\\)?[-.\\s]?([0-9]{3})[-.\\s]?([0-9]{4})$",
      "^\\+[1-9]\\d{1,14}$",
      "^\\d{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$",
      "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d{3})?(?:Z|[+-]\\d{2}:\\d{2})$",
      "^\\s*",
      "^\\{.*\\}$",
      "^https?:\\/\\/(?:[-\\w.])+(?:\\:[0-9]+)?(?:\\/(?:[\\w\\/_.])*(?:\\?(?:[\\w&=%.]*))?(?:\\",
      "fe80:(?::[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]+",
      "ffff(:0{1,4})?:",
      "https?:\\/\\/(?:[-\\w.])+(?:\\:[0-9]+)?(?:\\/(?:[\\w\\/_.])*(?:\\?(?:[\\w&=%.]*))?(?:\\",
      "https?|ftp",
      "most languages",
      "semantic versioning",
      "simplified",
      "single line",
      "using recursion - not all regex engines support this",
      "with optional spaces/dashes",
      "|[a-z]?\\1"
    ],
    "src/tests/extractors/java/generic_tests.rs": [
      "PathBuf",
      "generic_tests",
      "test_extract_generic_classes",
      "test_extract_generic_methods",
      "test_extract_wildcards_and_bounds"
    ],
    "src/database/symbols/queries.rs": [
      "Result",
      "SPECIAL_CHARS",
      "debug",
      "find_symbols_by_name",
      "find_symbols_by_pattern",
      "get_symbol_by_id",
      "get_symbols_by_ids",
      "get_symbols_for_file",
      "params",
      "sanitize_fts5_query"
    ],
    "src/tests/extractors/python/identifiers.rs": [
      "test_extract_identifiers_placeholder"
    ],
    "src/tests/extractors/c/preprocessor.rs": [
      "test_extract_c_preprocessor_features",
      "tests"
    ],
    "src/tools/search/query.rs": [
      "Glob",
      "LineMatchStrategy",
      "line_match_strategy",
      "line_matches",
      "matches_glob_pattern",
      "preprocess_fallback_query",
      "warn"
    ],
    "fixtures/real-world/typescript/data-repository.ts": [
      "Anonymous",
      "Anonymous",
      "Anonymous",
      "Anonymous",
      "Anonymous",
      "BaseRepository",
      "CONFIG",
      "CacheManager",
      "CacheManager",
      "DatabaseDriver",
      "DatabaseDriver",
      "Entity",
      "Entity",
      "QueryOptions",
      "QueryOptions",
      "ValidationResult",
      "ValidationResult",
      "ValidationUtils",
      "asyncRetry",
      "asyncRetry",
      "attempt",
      "buildQuery",
      "cache",
      "clear",
      "conditions",
      "constructor",
      "constructor",
      "createdAt",
      "driver",
      "errors",
      "errors",
      "export",
      "firstKey",
      "get",
      "has",
      "id",
      "isEmail",
      "isEmail",
      "isInRange",
      "isInRange",
      "isRequired",
      "isRequired",
      "isValid",
      "lastError",
      "limit",
      "maxSize",
      "offset",
      "orderBy",
      "query",
      "result",
      "set",
      "size",
      "tableName",
      "updatedAt",
      "validateEntity",
      "validateEntity",
      "where"
    ],
    "src/extractors/c/types.rs": [
      "BaseExtractor",
      "extract_alignment_attributes",
      "extract_array_specifier",
      "extract_initializer",
      "extract_return_type",
      "extract_storage_class",
      "extract_struct_attributes",
      "extract_type_qualifiers",
      "extract_underlying_type_from_declaration",
      "extract_underlying_type_from_type_definition",
      "extract_variable_type",
      "helpers"
    ],
    "src/extractors/javascript/signatures.rs": [
      "BaseExtractor",
      "Node",
      "build_class_signature",
      "build_function_signature",
      "build_method_signature",
      "build_property_signature",
      "build_variable_signature"
    ],
    "src/tests/extractors/gdscript/patterns.rs": [
      "test_extract_game_development_patterns_node_references_and_godot_specific_constructs",
      "tests"
    ],
    "src/tests/extractors/csharp/metadata.rs": [
      "PathBuf",
      "test_attribute_and_record_extraction",
      "test_delegate_and_nested_classes",
      "test_enum_extraction",
      "test_type_inference",
      "tests"
    ],
    "src/extractors/html/fallback.rs": [
      "AttributeHandler",
      "FallbackExtractor",
      "HTMLTypes",
      "HashMap",
      "Node",
      "Regex",
      "extract_basic_structure",
      "extract_elements_with_regex",
      "find_doctype"
    ],
    "src/extractors/css/mod.rs": [
      "AnimationExtractor",
      "AtRuleExtractor",
      "CSSExtractor",
      "IdentifierExtractor",
      "MediaExtractor",
      "PropertyExtractor",
      "RuleExtractor",
      "Tree",
      "animations",
      "at_rules",
      "extract_identifiers",
      "extract_symbols",
      "helpers",
      "identifiers",
      "media",
      "new",
      "properties",
      "rules",
      "visit_node"
    ],
    "src/extractors/javascript/variables.rs": [
      "HashMap",
      "Node",
      "extract_destructuring_variables",
      "extract_variable",
      "json"
    ],
    "fixtures/real-world/vue/HelloWorld.vue": [
      "HelloWorld"
    ],
    "src/extractors/swift/properties.rs": [
      "HashMap",
      "Node",
      "SwiftExtractor",
      "extract_property",
      "extract_subscript",
      "extract_variable",
      "serde_json"
    ],
    "fixtures/real-world/java/Main.java": [
      "Main",
      "acceptModel",
      "main"
    ],
    "src/tests/integration/fts5_minimal_repro.rs": [
      "FastSearchTool",
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "Ordering",
      "Result",
      "atomic_cleanup_julie_dir",
      "atomic_cleanup_julie_dir",
      "extract_text_from_result",
      "fts5_minimal_tests",
      "get_fixture_path",
      "mark_index_ready",
      "test_minimal_fts5_corruption_step1_index_only",
      "test_minimal_fts5_corruption_step2_add_reference"
    ],
    "src/extractors/typescript/classes.rs": [
      "HashMap",
      "Node",
      "TypeScriptExtractor",
      "extract_class",
      "helpers"
    ],
    "src/tests/extractors/lua/identifiers.rs": [
      "test_identifier_extraction_basic",
      "tests"
    ],
    "src/extractors/python/signatures.rs": [
      "Node",
      "PythonExtractor",
      "Visibility",
      "extract_parameters",
      "find_type_annotation",
      "has_async_keyword",
      "infer_visibility"
    ],
    "fixtures/real-world/java/Model.java": [
      "Model",
      "Model",
      "getName",
      "name"
    ],
    "src/extractors/html/mod.rs": [
      "HTMLExtractor",
      "HashMap",
      "attributes",
      "elements",
      "extract_identifiers",
      "extract_node_symbol",
      "extract_relationships",
      "extract_symbols",
      "fallback",
      "helpers",
      "identifiers",
      "infer_types",
      "new",
      "relationships",
      "scripts",
      "types",
      "visit_node",
      "visit_node_for_relationships"
    ],
    "src/embeddings/model_manager.rs": [
      "ModelManager",
      "ModelPaths",
      "cache_dir",
      "download_bge_small",
      "ensure_model_downloaded",
      "is_model_cached",
      "new",
      "tempdir",
      "test_download_bge_small",
      "test_model_manager_creation",
      "test_unsupported_model",
      "tests"
    ],
    "src/extractors/gdscript/variables.rs": [
      "HashMap",
      "Node",
      "Value",
      "extract_constant_statement",
      "extract_variable_from_statement",
      "extract_variable_statement",
      "extract_variable_type",
      "find_closest_class_name_parent"
    ],
    "src/tests/extractors/css/media_queries.rs": [
      "SymbolKind",
      "test_extract_media_queries_and_responsive_design",
      "tests"
    ],
    "src/tools/exploration/find_logic/search.rs": [
      "FindLogicTool",
      "JulieServerHandler",
      "MAX_GRAPH_ANALYSIS_CANDIDATES",
      "Result",
      "Symbol",
      "SymbolKind",
      "analyze_business_importance",
      "apply_path_intelligence",
      "calculate_domain_keyword_score",
      "debug",
      "deduplicate_and_rank",
      "find_architectural_patterns",
      "search_by_keywords",
      "semantic_business_search"
    ],
    "fixtures/real-world/ruby/lib.rb": [
      "Calculator",
      "Calculator",
      "UnknownClass",
      "add",
      "subtract"
    ],
    "src/extractors/kotlin/identifiers.rs": [
      "HashMap",
      "Node",
      "extract_identifier_from_node",
      "extract_identifiers",
      "extract_rightmost_identifier",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/tests/tools/get_symbols_target_filtering.rs": [
      "CallToolResult",
      "JulieServerHandler",
      "Result",
      "test_target_filtering_case_insensitive",
      "test_target_filtering_matches_child_methods",
      "test_target_filtering_partial_match",
      "test_target_filtering_top_level_still_works",
      "tests"
    ],
    "src/tests/tools/search_quality/dogfood_tests.rs": [
      "test_colons_in_rust_paths",
      "test_dotted_identifiers",
      "test_fts5_corruption_tests",
      "test_fts5_create_virtual_table",
      "test_fts5_snippet_function",
      "test_hyphenated_cross_language",
      "test_hyphenated_de_boost",
      "test_hyphenated_tree_sitter",
      "test_multiword_and_cascade_architecture",
      "test_multiword_and_finds_sql_ranking",
      "test_multiword_and_incremental_update",
      "test_ranking_source_over_tests",
      "test_symbol_search_sanitize_function",
      "test_symbol_search_struct",
      "test_tokenizer_consistency_hyphen",
      "test_underscore_snake_case"
    ],
    "src/tests/extractors/csharp/identifier_extraction.rs": [
      "CSharpExtractor",
      "PathBuf",
      "identifier_extraction_tests",
      "init_parser",
      "test_chained_member_access",
      "test_extract_function_calls",
      "test_extract_member_access",
      "test_file_scoped_containing_symbol",
      "test_no_duplicate_identifiers"
    ],
    "src/tests/extractors/typescript/functions.rs": [
      "PathBuf",
      "TypeScriptExtractor",
      "test_extract_async_function",
      "test_extract_function_with_jsdoc_comment",
      "test_extract_function_with_signature",
      "test_extract_function_without_jsdoc_comment"
    ],
    "src/tests/utils/file_utils.rs": [
      "PathBuf",
      "TempDir",
      "file_utils_tests",
      "fs",
      "secure_path_resolution",
      "test_secure_path_resolution_blocks_absolute_path_outside_workspace",
      "test_secure_path_resolution_blocks_relative_traversal",
      "test_secure_path_resolution_blocks_symlink_outside_workspace",
      "test_secure_path_resolution_dot_navigation",
      "test_secure_path_resolution_nested_directories",
      "test_secure_path_resolution_nonexistent_file",
      "test_secure_path_resolution_valid_absolute_path_within_workspace",
      "test_secure_path_resolution_valid_relative_path"
    ],
    "src/tools/exploration/find_logic/mod.rs": [
      "FindLogicTool",
      "HashMap",
      "JulieServerHandler",
      "MAX_GRAPH_ANALYSIS_CANDIDATES",
      "Result",
      "call_tool",
      "create_result",
      "debug",
      "default_max_results",
      "default_min_score",
      "default_true",
      "detect_architectural_layer",
      "format_optimized_results",
      "get_business_relationships",
      "search"
    ],
    "src/extractors/html/identifiers.rs": [
      "HashMap",
      "IdentifierExtractor",
      "Node",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_containing_symbol_id"
    ],
    "src/extractors/lua/functions.rs": [
      "Node",
      "extract_function_definition_statement",
      "extract_local_function_definition_statement",
      "helpers"
    ],
    "src/extractors/regex/mod.rs": [
      "HashMap",
      "RegexExtractor",
      "classes",
      "extract_identifiers",
      "extract_patterns_from_text",
      "extract_relationships",
      "extract_symbols",
      "flags",
      "groups",
      "helpers",
      "identifiers",
      "infer_types",
      "new",
      "patterns",
      "signatures",
      "visit_node"
    ],
    "src/tools/navigation/types.rs": [
      "DefinitionResult",
      "FastGotoResult",
      "FastRefsResult",
      "ReferenceResult",
      "Serialize"
    ],
    "src/tests/extractors/lua/extractor.rs": [
      "LuaExtractor",
      "PathBuf",
      "test_lua_extractor_initialization",
      "tests"
    ],
    "src/tests/core/workspace_init.rs": [
      "JulieServerHandler",
      "JulieWorkspace",
      "ManageWorkspaceTool",
      "ManageWorkspaceTool",
      "TempDir",
      "env",
      "fs",
      "setup_test_workspace",
      "test_env_var_concept",
      "test_forward_slashes_on_windows",
      "test_incremental_indexing_respects_env_var",
      "test_nonexistent_env_var_fallback",
      "test_path_canonicalization",
      "test_resolve_workspace_path_respects_env_var",
      "test_tilde_expansion_in_env_var",
      "test_workspace_detection_priority",
      "test_workspace_init_with_explicit_path"
    ],
    "src/tests/tools/get_symbols_relative_paths.rs": [
      "GetSymbolsTool",
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "Result",
      "SymbolDatabase",
      "TempDir",
      "fs",
      "test_database_stores_relative_unix_paths",
      "test_get_symbols_with_absolute_path",
      "test_get_symbols_with_relative_path"
    ],
    "fixtures/real-world/java/Utils.java": [
      "Utils",
      "printHello"
    ],
    "src/extractors/html/helpers.rs": [
      "BaseExtractor",
      "HTMLHelpers",
      "HashMap",
      "Node",
      "extract_attribute_name_value",
      "extract_attributes",
      "extract_element_text_content",
      "extract_tag_name",
      "extract_text_content"
    ],
    "src/tests/extractors/cpp/doxygen_comments.rs": [
      "test_extract_doxygen_from_class",
      "test_extract_doxygen_from_constructor",
      "test_extract_doxygen_from_destructor",
      "test_extract_doxygen_from_enum",
      "test_extract_doxygen_from_function",
      "test_extract_doxygen_from_namespace",
      "test_extract_doxygen_from_operator_overload",
      "test_extract_doxygen_from_struct",
      "test_extract_doxygen_from_union",
      "test_extract_doxygen_triple_slash_from_method",
      "test_extract_doxygen_with_template_parameters",
      "test_extract_multiple_doc_comment_lines",
      "test_no_doc_comment_when_missing",
      "tests"
    ],
    "src/language.rs": [
      "Result",
      "detect_language_from_extension",
      "get_function_node_kinds",
      "get_import_node_kinds",
      "get_symbol_name_field",
      "get_symbol_node_kinds",
      "get_tree_sitter_language"
    ],
    "src/tests/tools/get_symbols_token.rs": [
      "ContextTruncator",
      "TokenEstimator",
      "get_symbols_token_tests",
      "test_long_body_gets_truncated_with_structure_preservation",
      "test_short_body_no_truncation",
      "test_smart_read_workflow_token_benefits",
      "test_token_estimation_for_various_body_sizes",
      "test_truncation_language_agnostic",
      "test_truncation_respects_target_limit",
      "test_truncator_preserves_structure_markers"
    ],
    "src/extractors/ruby/helpers.rs": [
      "Node",
      "build_qualified_name",
      "extract_alias_name",
      "extract_method_name_from_call",
      "extract_name_from_node",
      "extract_singleton_method_name",
      "extract_singleton_method_target",
      "find_includes_and_extends",
      "find_includes_and_extends_recursive",
      "infer_symbol_kind_from_assignment",
      "is_part_of_assignment",
      "is_part_of_class_module_declaration",
      "parse_visibility"
    ],
    "src/tools/workspace/commands/registry.rs": [
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "ProgressiveReducer",
      "Result",
      "TokenEstimator",
      "WorkspaceRegistryService",
      "WorkspaceType",
      "assess_overall_health",
      "check_database_health",
      "check_embedding_health",
      "check_search_engine_health",
      "handle_add_command",
      "handle_clean_command",
      "handle_health_command",
      "handle_list_command",
      "handle_refresh_command",
      "handle_remove_command",
      "handle_stats_command",
      "ws_registry",
      "ws_registry"
    ],
    "fixtures/editing/controls/fast-edit/complex_class_validation.ts": [
      "User",
      "UserManager",
      "addUser",
      "constructor",
      "email",
      "getUserById",
      "id",
      "name",
      "users",
      "validateUser"
    ],
    "src/extractors/kotlin/mod.rs": [
      "HashMap",
      "KotlinExtractor",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbols",
      "helpers",
      "identifiers",
      "infer_types",
      "new",
      "properties",
      "relationships",
      "types",
      "visit_node",
      "visit_node_for_relationships"
    ],
    "src/tests/extractors/lua/coroutines.rs": [
      "PathBuf",
      "PathBuf",
      "test_coroutines_and_async_patterns",
      "tests"
    ],
    "src/tests/extractors/python/assignments.rs": [
      "test_extract_assignment_placeholder"
    ],
    "src/tests/extractors/regex/flags.rs": [
      "test_extract_alternation_options",
      "test_extract_backref_group_name",
      "test_extract_condition",
      "test_extract_group_number",
      "test_extract_unicode_property_name",
      "test_get_anchor_type",
      "test_get_lookaround_direction",
      "test_get_predefined_class_category",
      "test_is_positive_lookaround",
      "tests"
    ],
    "src/extractors/python/functions.rs": [
      "HashMap",
      "Node",
      "PythonExtractor",
      "determine_function_kind",
      "extract_async_function",
      "extract_function",
      "extract_lambda"
    ],
    "fixtures/real-world/cpp/graph_algorithms.cpp": [
      "Graph",
      "Graph",
      "add_edge",
      "adj_list",
      "bfs",
      "bfs_result",
      "contains_vertex",
      "current",
      "current",
      "current",
      "dfs",
      "dfs_result",
      "dijkstra",
      "directed_graph",
      "distances",
      "empty_vector",
      "get_neighbors",
      "get_shortest_path",
      "get_vertices",
      "i",
      "is_directed",
      "it",
      "it",
      "main",
      "new_distance",
      "path",
      "pq",
      "predecessors",
      "print_vector",
      "queue",
      "result",
      "result",
      "result",
      "result_stack",
      "shortest_path",
      "stack",
      "topo_order",
      "topological_sort",
      "topological_sort_util",
      "undirected_graph",
      "vertex_count",
      "vertices",
      "visited",
      "visited",
      "visited"
    ],
    "src/tests/extractors/php/mod.rs": [
      "IdentifierKind",
      "Parser",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PathBuf",
      "PhpExtractor",
      "extract_relationships",
      "extract_symbols",
      "identifier_extraction",
      "init_parser",
      "php_extractor_tests",
      "test_chained_member_access",
      "test_extract_classes_interfaces_and_their_members",
      "test_extract_function_calls",
      "test_extract_global_functions_closures_and_anonymous_functions",
      "test_extract_inheritance_and_interface_implementation_relationships",
      "test_extract_member_access",
      "test_extract_namespace_usage_and_aliasing",
      "test_extract_php8_attributes_and_annotations",
      "test_extract_phpdoc_from_class",
      "test_extract_phpdoc_from_constant",
      "test_extract_phpdoc_from_function",
      "test_extract_phpdoc_from_interface",
      "test_extract_phpdoc_from_method",
      "test_extract_phpdoc_from_property",
      "test_extract_trait_usage_and_conflicts",
      "test_extract_traits_enums_and_modern_php_features",
      "test_file_scoped_containing_symbol",
      "test_infer_types_from_php_type_declarations_and_doc_comments",
      "test_no_duplicate_identifiers",
      "test_php_dynamic_features",
      "test_php_heredoc_and_nowdoc",
      "test_php_malformed_syntax",
      "test_php_unicode_and_special_chars",
      "test_phpdoc_extraction_mixed_symbols",
      "test_symbols_without_phpdoc_have_none"
    ],
    "src/tests/extractors/typescript/extractor.rs": [
      "PathBuf",
      "SymbolKind",
      "TypeScriptExtractor",
      "test_extract_class_declarations",
      "test_extract_function_call_relationships",
      "test_extract_function_declarations",
      "test_extract_inheritance_relationships",
      "test_extract_variable_and_property_declarations",
      "test_handle_function_return_types",
      "test_infer_basic_types",
      "test_track_accurate_symbol_positions"
    ],
    ".gitignore": [],
    "src/extractors/razor/identifiers.rs": [
      "HashMap",
      "Node",
      "extract_identifier_from_node",
      "extract_identifiers",
      "find_containing_symbol_id",
      "walk_tree_for_identifiers"
    ],
    "src/tests/integration/fts5_rowid_corruption.rs": [
      "Result",
      "TempDir",
      "fs",
      "test_delete_file_record_causes_fts5_corruption",
      "test_triggers_alone_insufficient_for_external_content"
    ],
    "src/tools/trace_call_path.rs": [
      "CallPath",
      "CallPathNode",
      "CodeContext",
      "HashSet",
      "JsonSchema",
      "JulieServerHandler",
      "MatchType",
      "SemanticMatch",
      "SerializablePathNode",
      "SymbolDatabase",
      "TraceCallPathResult",
      "TraceCallPathTool",
      "build_ascii_tree",
      "calculate_max_depth",
      "call_tool",
      "collect_languages",
      "count_nodes",
      "create_result",
      "default_depth",
      "default_output_format",
      "default_upstream",
      "default_workspace",
      "find_cross_language_callees",
      "find_cross_language_callers",
      "find_semantic_cross_language_callees",
      "find_semantic_cross_language_callers",
      "format_call_trees",
      "generate_naming_variants",
      "get_cross_language_depth_limit",
      "mcp_tool",
      "node_to_serializable",
      "render_node",
      "semantic_neighbors",
      "trace_downstream",
      "trace_upstream",
      "trees_to_call_paths"
    ],
    "src/tests/tools/search/mod.rs": [
      "line_mode",
      "primary_workspace_bug",
      "quality",
      "race_condition",
      "semantic_scoring_tests",
      "test_preprocess_fallback_query_exclusion",
      "test_preprocess_fallback_query_explicit_and",
      "test_preprocess_fallback_query_explicit_or",
      "test_preprocess_fallback_query_multi_word",
      "test_preprocess_fallback_query_quoted",
      "test_preprocess_fallback_query_single_word",
      "test_preprocess_fallback_query_wildcard",
      "tools"
    ],
    "fixtures/real-world/html/popup-info-web-component.html": [],
    "fixtures/editing/controls/auto-fix/multi_property_object.js": [
      "Anonymous",
      "email",
      "getData",
      "name",
      "obj",
      "status"
    ],
    "src/extractors/powershell/imports.rs": [
      "Node",
      "Regex",
      "extract_dot_source_name",
      "extract_dot_sourcing",
      "extract_import",
      "extract_import_command",
      "extract_import_module_name",
      "extract_using_name"
    ],
    "src/tests/extractors/csharp/runtime.rs": [
      "PathBuf",
      "test_csharp_testing_patterns",
      "test_edge_cases_and_error_handling",
      "test_exception_handling_and_resource_management",
      "test_performance_testing",
      "tests"
    ],
    "src/tests/extractors/python/relationships.rs": [
      "PathBuf",
      "RelationshipKind",
      "test_extract_call_relationships",
      "test_extract_inheritance_relationships",
      "test_extract_multiple_inheritance",
      "test_extract_relationships_confidence_scores",
      "test_extract_relationships_empty_code",
      "test_extract_relationships_file_path",
      "test_extract_relationships_line_numbers",
      "test_extract_relationships_with_class_methods",
      "test_placeholder"
    ],
    "src/tests/extractors/rust/helpers.rs": [
      "test_extract_visibility_public",
      "test_is_inside_impl",
      "tests"
    ],
    "src/tests/utils/token_estimation.rs": [
      "TokenEstimator",
      "test_cjk_detection_uses_different_ratios",
      "test_current_estimate_string_uses_character_only",
      "test_empty_string_returns_zero_tokens",
      "test_english_text_uses_four_chars_per_token",
      "test_hybrid_formula_implementation",
      "test_word_based_estimation",
      "tests"
    ],
    "src/extractors/razor/directives.rs": [
      "HashMap",
      "Node",
      "extract_code_block",
      "extract_directive",
      "extract_directive_name",
      "extract_directive_value",
      "extract_expression",
      "extract_section",
      "extract_token_directive",
      "extract_variable_from_expression",
      "get_code_block_type",
      "get_directive_symbol_kind"
    ],
    "docs/RELATIVE_PATHS_CONTRACT.md": [],
    "src/extractors/zig/mod.rs": [
      "ZigExtractor",
      "error_handling",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbol_from_node",
      "extract_symbols",
      "functions",
      "helpers",
      "identifiers",
      "infer_types",
      "new",
      "relationships",
      "type_inference",
      "types",
      "variables",
      "visit_node"
    ],
    "src/tests/extractors/lua/functions.rs": [
      "test_function_extraction_basic"
    ],
    "fixtures/real-world/javascript/vue.config.js": [
      "\"Access-Control-Allow-Headers\"",
      "\"Access-Control-Allow-Methods\"",
      "\"Access-Control-Allow-Origin\"",
      "chainWebpack",
      "chainWebpack",
      "css",
      "devServer",
      "extract",
      "headers",
      "public"
    ],
    "src/extractors/gdscript/functions.rs": [
      "LIFECYCLE_PREFIXES",
      "Node",
      "determine_function_kind",
      "extract_constructor_definition",
      "extract_function_definition",
      "is_setget_function_in_symbols"
    ],
    "fixtures/real-world/csharp-advanced/DevOpsController.cs": [
      "ApproveWorkItem",
      "Cms",
      "CoA.Intranet.Server.Controllers",
      "CreateEnterpriseDataStory",
      "DenialReason",
      "DenialRequest",
      "DenyWorkItem",
      "DevOpsController",
      "GetWorkItem",
      "Interfaces",
      "Models",
      "Mvc"
    ],
    "fixtures/editing/sources/javascript/vue.config.js": [
      "\"Access-Control-Allow-Headers\"",
      "\"Access-Control-Allow-Methods\"",
      "\"Access-Control-Allow-Origin\"",
      "chainWebpack",
      "chainWebpack",
      "css",
      "devServer",
      "extract",
      "headers",
      "public"
    ],
    "src/extractors/sql/error_handling.rs": [
      "CREATE_VIEW_RE",
      "HashMap",
      "Node",
      "extract_aggregates_from_error",
      "extract_constraints_from_error",
      "extract_domains_from_error",
      "extract_functions_from_error",
      "extract_multiple_from_error_node",
      "extract_procedures_from_error",
      "extract_schemas_from_error",
      "extract_triggers_from_error",
      "extract_types_from_error",
      "extract_views_from_error",
      "routines"
    ],
    "src/cli/mod.rs": [
      "output",
      "parallel",
      "progress"
    ],
    "fixtures/real-world/vue/WelcomeItem.vue": [
      "WelcomeItem",
      "details",
      "item",
      "item"
    ],
    "src/tests/extractors/cpp/functions.rs": [
      "test_extract_functions_and_operator_overloads",
      "tests"
    ],
    "src/extractors/lua/tables.rs": [
      "HashMap",
      "Node",
      "extract_table_field_symbol",
      "extract_table_fields",
      "helpers"
    ],
    "src/tests/extractors/gdscript/resources.rs": [
      "test_extract_resource_handling_custom_resources_and_serialization_patterns",
      "tests"
    ],
    "src/tests/extractors/kotlin/mod.rs": [
      "IdentifierKind",
      "KotlinExtractor",
      "Parser",
      "PathBuf",
      "SymbolKind",
      "debug_tree_structure",
      "identifier_extraction",
      "init_parser",
      "kdoc_extraction_tests",
      "kotlin_extractor_tests",
      "test_chained_member_access",
      "test_extract_annotations_and_type_aliases",
      "test_extract_classes_and_data_classes",
      "test_extract_function_calls",
      "test_extract_functions_and_extension_functions",
      "test_extract_generics_and_variance",
      "test_extract_interfaces_and_delegation",
      "test_extract_kdoc_from_class",
      "test_extract_kdoc_from_function",
      "test_extract_kdoc_from_property",
      "test_extract_member_access",
      "test_extract_objects_and_sealed_classes",
      "test_extract_relationships",
      "test_file_scoped_containing_symbol",
      "test_infer_types",
      "test_kdoc_with_interface",
      "test_kdoc_with_object",
      "test_no_duplicate_identifiers",
      "test_no_kdoc_when_absent",
      "walk_node"
    ],
    "src/tests/extractors/java/mod.rs": [
      "extractor"
    ],
    "src/tests/extractors/lua/strings.rs": [
      "PathBuf",
      "PathBuf",
      "test_string_patterns_and_regex",
      "tests"
    ],
    "src/tests/extractors/ruby/mod.rs": [
      "IdentifierKind",
      "PathBuf",
      "RubyExtractor",
      "Tree",
      "create_extractor_and_parse",
      "create_extractor_and_parse",
      "doc_comments",
      "extractor",
      "identifier_extraction_tests",
      "ruby_extractor_tests",
      "test_chained_member_access",
      "test_extract_blocks_procs_and_lambdas",
      "test_extract_classes_modules_and_members",
      "test_extract_constants_symbols_and_variables",
      "test_extract_function_calls",
      "test_extract_inheritance_and_module_relationships",
      "test_extract_member_access",
      "test_extract_metaprogramming_and_dynamic_methods",
      "test_extract_mixins_and_module_inclusion",
      "test_file_scoped_containing_symbol",
      "test_function_signature_includes_return_statement",
      "test_infer_basic_types_from_assignments",
      "test_no_duplicate_assignment_symbols",
      "test_no_duplicate_identifiers"
    ],
    "src/tests/extractors/sql/mod.rs": [
      "Parser",
      "PathBuf",
      "SqlExtractor",
      "ddl",
      "dml",
      "doc_comments",
      "extract_symbols",
      "extract_symbols_and_relationships",
      "identifier_extraction",
      "indexes",
      "init_parser",
      "procedures",
      "relationships",
      "schema",
      "security",
      "transactions"
    ],
    "src/extractors/c/signatures.rs": [
      "BaseExtractor",
      "EnumValue",
      "StructField",
      "build_enum_signature",
      "build_function_declaration_signature",
      "build_function_signature",
      "build_struct_signature",
      "build_typedef_signature",
      "build_variable_signature",
      "extract_enum_values",
      "extract_function_parameters",
      "extract_function_parameters_from_declaration",
      "extract_parameters_from_declarator",
      "extract_struct_fields",
      "helpers",
      "types"
    ],
    "src/tests/extractors/html/mod.rs": [
      "HTMLExtractor",
      "Parser",
      "PathBuf",
      "Symbol",
      "SymbolKind",
      "doc_comments",
      "edge_cases",
      "extract_symbols",
      "forms",
      "identifier_extraction",
      "init_parser",
      "media",
      "script_style",
      "structure"
    ],
    "src/tests/fixtures/mod.rs": [
      "julie_db"
    ],
    "src/tests/integration/intelligence_tools.rs": [
      "CallToolResult",
      "JulieServerHandler",
      "Result",
      "explore_overview_tests",
      "fast_search_tests",
      "find_business_logic_tests",
      "get_minimal_context_tests",
      "integration_tests",
      "score_criticality_tests",
      "test_explore_overview_architecture_detection",
      "test_explore_overview_critical_files",
      "test_explore_overview_data_flows",
      "test_explore_overview_entry_points",
      "test_explore_overview_error_handling",
      "test_explore_overview_filter_noise",
      "test_find_business_logic_confidence_scoring",
      "test_find_business_logic_domain_detection",
      "test_find_business_logic_framework_filtering",
      "test_find_business_logic_layer_grouping",
      "test_get_minimal_context_dependency_ranking",
      "test_get_minimal_context_smart_chunking",
      "test_get_minimal_context_token_limiting",
      "test_get_minimal_context_usage_examples",
      "test_intelligence_tools_pipeline",
      "test_real_world_polyglot_analysis",
      "test_score_criticality_business_importance",
      "test_score_criticality_cross_language_usage",
      "test_score_criticality_file_scoring",
      "test_score_criticality_symbol_scoring",
      "test_score_criticality_usage_frequency",
      "test_search_case_insensitive_matching",
      "test_search_partial_case_insensitive_matching",
      "test_search_tokenization_compound_words",
      "test_search_tokenization_patterns",
      "test_trace_execution_architectural_layers",
      "test_trace_execution_confidence_scoring",
      "test_trace_execution_cross_language_flow",
      "test_trace_execution_depth_limiting",
      "test_trace_execution_semantic_connections",
      "trace_execution_tests"
    ],
    "src/extractors/python/assignments.rs": [
      "HashMap",
      "Node",
      "PythonExtractor",
      "extract_assignment",
      "extract_multiple_assignment_targets"
    ],
    "src/extractors/java/fields.rs": [
      "JavaExtractor",
      "Node",
      "extract_field",
      "helpers"
    ],
    "src/tools/workspace/indexing/mod.rs": [
      "embeddings",
      "extractor",
      "incremental",
      "index",
      "processor"
    ],
    "src/tools/workspace/indexing/processor.rs": [
      "Arc",
      "HashMap",
      "JulieServerHandler",
      "LanguageParserPool",
      "ManageWorkspaceTool",
      "Parser",
      "Result",
      "process_file_with_parser",
      "process_file_without_parser",
      "process_files_optimized"
    ],
    "src/tests/tools/refactoring/edit_symbol.rs": [
      "JulieServerHandler",
      "ManageWorkspaceTool",
      "Result",
      "TempDir",
      "fs",
      "test_edit_symbol_dry_run",
      "test_edit_symbol_extract_to_file",
      "test_edit_symbol_extract_validation_no_target",
      "test_edit_symbol_insert_after",
      "test_edit_symbol_insert_before",
      "test_edit_symbol_replace_body_basic",
      "test_edit_symbol_replace_body_validation_no_file"
    ],
    "src/extractors/java/annotations.rs": [
      "JavaExtractor",
      "Node",
      "extract_annotation",
      "helpers"
    ],
    "src/tools/workspace/indexing/embeddings.rs": [
      "BATCH_SIZE_CPU",
      "BATCH_SIZE_GPU",
      "GPU_BATCH_TIMEOUT_SECS",
      "IndexingStatus",
      "MAX_CONSECUTIVE_FAILURES",
      "MAX_TOTAL_FAILURE_RATE",
      "PathBuf",
      "SymbolDatabase",
      "build_and_save_hnsw_index",
      "generate_embeddings_from_sqlite",
      "initialize_embedding_engine"
    ],
    "src/utils/paths.rs": [
      "PathBuf",
      "test_file_outside_workspace_rejected",
      "test_linux_absolute_to_relative",
      "test_macos_absolute_to_relative",
      "test_nested_directories",
      "test_root_level_file",
      "test_round_trip_conversion",
      "test_spaces_in_paths",
      "test_to_absolute_native_handles_unix_separators",
      "test_to_absolute_native_simple",
      "test_unicode_in_paths",
      "test_windows_absolute_to_relative",
      "test_windows_path_conversion_logic",
      "tests",
      "to_absolute_native",
      "to_relative_unix_style"
    ],
    "docs/GPU_ACCELERATION_PLAN.md": [],
    "fixtures/real-world/kotlin/Main.kt": [
      "Main",
      "acceptModel",
      "main",
      "model",
      "test_repo"
    ],
    "src/embeddings/cross_language.rs": [
      "ArchitecturalPattern",
      "Result",
      "SemanticGroup",
      "SemanticGrouper",
      "Symbol",
      "calculate_structure_similarity",
      "detect_architectural_pattern",
      "extract_common_properties",
      "extract_words",
      "find_semantic_group",
      "has_name_similarity",
      "is_stop_word",
      "levenshtein_distance",
      "names_are_similar",
      "new",
      "normalize_name",
      "split_camel_case",
      "validate_semantic_group"
    ],
    "src/extractors/csharp/type_inference.rs": [
      "HashMap",
      "Symbol",
      "infer_field_type",
      "infer_method_return_type",
      "infer_property_type",
      "infer_types",
      "infer_variable_type"
    ],
    "src/extractors/lua/variables.rs": [
      "HashMap",
      "Node",
      "extract_assignment_statement",
      "extract_local_variable_declaration",
      "extract_variable_assignment",
      "helpers",
      "tables"
    ],
    "src/tests/tools/trace_call_path/mod.rs": [
      "TraceCallPathTool",
      "comprehensive",
      "cross_language_callers_found_via_naming_variant",
      "make_symbol",
      "new_features",
      "tempdir",
      "workspace_isolation"
    ],
    "src/extractors/swift/protocol.rs": [
      "HashMap",
      "Node",
      "SwiftExtractor",
      "extract_associated_type",
      "extract_protocol_function",
      "extract_protocol_property",
      "serde_json"
    ],
    "src/extractors/vue/script.rs": [
      "HashMap",
      "Value",
      "VueSection",
      "create_symbol_manual",
      "extract_script_symbols",
      "find_doc_comment_before",
      "is_doc_comment_line"
    ],
    "src/tools/fuzzy_replace.rs": [
      "EditingTransaction",
      "FuzzyReplaceResult",
      "FuzzyReplaceTool",
      "Glob",
      "JsonSchema",
      "calculate_balance",
      "calculate_similarity",
      "call_tool",
      "call_tool_multi_file",
      "call_tool_single_file",
      "default_distance",
      "default_dry_run",
      "default_threshold",
      "default_true",
      "env",
      "fs",
      "fuzzy_search_replace",
      "mcp_tool",
      "secure_path_resolution"
    ],
    "src/extractors/gdscript/helpers.rs": [
      "BaseExtractor",
      "Node",
      "extract_variable_annotations",
      "find_child_by_type",
      "get_position_key"
    ],
    "tarpaulin.toml": [],
    "src/extractors/cpp/mod.rs": [
      "CppExtractor",
      "declarations",
      "extract_from_error_node",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbol",
      "extract_symbols",
      "functions",
      "get_node_key",
      "helpers",
      "identifiers",
      "infer_types",
      "new",
      "relationships",
      "type_inference",
      "types",
      "walk_children",
      "walk_tree"
    ],
    "docs/SMART_READ_DEMO.md": [],
    "README.md": [],
    "src/extractors/ruby/mod.rs": [
      "RubyExtractor",
      "assignments",
      "calls",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbols",
      "helpers",
      "identifiers",
      "new",
      "relationships",
      "signatures",
      "symbols",
      "traverse_tree",
      "traverse_tree_with_parent"
    ],
    "src/workspace/registry.rs": [
      "EmbeddingStatus",
      "HashMap",
      "OrphanReason",
      "OrphanedIndex",
      "RegistryConfig",
      "RegistryStatistics",
      "Result",
      "WorkspaceEntry",
      "WorkspaceRegistry",
      "WorkspaceStatus",
      "WorkspaceType",
      "current_timestamp",
      "default",
      "default",
      "default",
      "default_embedding_status",
      "extend_expiration",
      "extract_workspace_name",
      "generate_workspace_id",
      "is_expired",
      "new",
      "normalize_path",
      "path_exists",
      "sanitize_name",
      "update_last_accessed"
    ],
    "src/extractors/zig/types.rs": [
      "HashMap",
      "Node",
      "extract_enum",
      "extract_enum_variant",
      "extract_error_type",
      "extract_struct",
      "extract_struct_field",
      "extract_type_alias",
      "extract_union"
    ],
    "src/tests/core/embeddings/mod.rs": [
      "SymbolDatabase",
      "TempDir",
      "create_test_db",
      "test_build_embedding_text",
      "test_code_context_creation",
      "test_cosine_similarity",
      "test_cross_language_similarity",
      "test_embedding_engine_creation",
      "test_symbol_embedding_generation",
      "test_text_embedding_generation"
    ],
    "src/extractors/razor/mod.rs": [
      "RazorExtractor",
      "Regex",
      "csharp",
      "directives",
      "extract_from_text_content",
      "extract_symbols",
      "helpers",
      "html",
      "identifiers",
      "new",
      "relationships",
      "stubs",
      "type_inference",
      "visit_node"
    ],
    "src/tests/tools/refactoring/mod.rs": [
      "ast_aware",
      "edit_symbol",
      "extract_to_file_tests",
      "import_update_tests",
      "insert_relative_tests",
      "json",
      "parse_refs_result_handles_confidence_suffix",
      "parse_refs_result_prefers_structured_content",
      "rename_symbol",
      "replace_symbol_body_tests",
      "scope_test"
    ],
    "src/tests/extractors/gdscript/scenes.rs": [
      "SymbolKind",
      "test_extract_scene_management_and_node_operations",
      "tests"
    ],
    "src/extractors/typescript/helpers.rs": [
      "Node",
      "has_modifier"
    ],
    "src/extractors/powershell/mod.rs": [
      "PowerShellExtractor",
      "Tree",
      "classes",
      "commands",
      "documentation",
      "extract_configuration",
      "extract_error_node",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbol_from_node",
      "extract_symbols",
      "functions",
      "helpers",
      "identifiers",
      "imports",
      "infer_types",
      "new",
      "relationships",
      "types",
      "variables",
      "walk_tree_for_symbols"
    ],
    "CLEANUP_SUMMARY_2025-10-25.md": [],
    "src/tests/extractors/gdscript/classes.rs": [
      "test_extract_class_definitions_inheritance_and_built_in_node_types",
      "test_extract_gdscript_doc_from_class",
      "test_extract_gdscript_doc_from_inner_class",
      "tests"
    ],
    "src/tests/extractors/java/method_tests.rs": [
      "PathBuf",
      "method_tests",
      "test_extract_abstract_methods",
      "test_extract_constructor_definitions",
      "test_extract_method_definitions",
      "test_extract_overloaded_methods"
    ],
    "src/tests/tools/search_context_lines.rs": [
      "CallToolResult",
      "JulieServerHandler",
      "Result",
      "Symbol",
      "TempDir",
      "extract_symbols_from_result",
      "fs",
      "test_context_lines_default_behavior",
      "test_context_lines_grep_default",
      "test_context_lines_zero",
      "test_context_short_not_truncated"
    ],
    "src/tools/navigation/fast_refs.rs": [
      "DefinitionResult",
      "FastRefsResult",
      "FastRefsTool",
      "JsonSchema",
      "JulieServerHandler",
      "ReferenceResult",
      "Result",
      "call_tool",
      "create_result",
      "database_find_references_in_reference",
      "debug",
      "default_limit",
      "default_true",
      "default_workspace",
      "find_references_and_definitions",
      "format_optimized_results",
      "generate_naming_variants",
      "mcp_tool",
      "reference_workspace",
      "resolve_workspace_filter",
      "semantic_matching"
    ],
    "src/extractors/gdscript/enums.rs": [
      "Node",
      "extract_enum_definition",
      "extract_enum_member",
      "find_child_by_type",
      "find_enum_parent"
    ],
    "src/tools/workspace/discovery.rs": [
      "HashSet",
      "ManageWorkspaceTool",
      "Read",
      "Result",
      "debug",
      "discover_indexable_files",
      "fs",
      "is_ignored_by_pattern",
      "is_known_dotfile",
      "is_likely_text_file",
      "is_minified_file",
      "load_julieignore",
      "should_index_file",
      "walk_directory_recursive"
    ],
    "src/tests/tools/refactoring/import_update_tests.rs": [
      "Regex",
      "Result",
      "test_import_update_avoids_partial_matches",
      "test_import_update_does_not_affect_module_path",
      "test_import_update_logic",
      "test_import_update_multiple_named_imports",
      "test_import_update_named_import_only",
      "test_import_update_python_from_import",
      "test_import_update_rust_use_statement"
    ],
    "src/extractors/csharp/mod.rs": [
      "CSharpExtractor",
      "HashMap",
      "Tree",
      "extract_identifiers",
      "extract_relationships",
      "extract_symbol",
      "extract_symbols",
      "helpers",
      "identifiers",
      "infer_types",
      "members",
      "new",
      "operators",
      "relationships",
      "type_inference",
      "types",
      "walk_tree"
    ],
    "src/tests/extractors/css/animations.rs": [
      "SymbolKind",
      "test_extract_css_animations_keyframes_and_transitions",
      "tests"
    ],
    "src/tests/tools/trace_call_path/comprehensive.rs": [
      "TraceCallPathTool",
      "create_test_tool",
      "generate_naming_variants",
      "test_context_file_filtering",
      "test_default_parameters",
      "test_direction_values",
      "test_max_depth_range",
      "test_naming_variant_generation_go",
      "test_naming_variant_generation_python",
      "test_naming_variant_generation_typescript",
      "test_naming_variants_multiple_words",
      "test_naming_variants_preserve_underscores",
      "test_parameter_validation_max_depth",
      "test_workspace_filtering"
    ],
    "src/extractors/javascript/mod.rs": [
      "JavaScriptExtractor",
      "Tree",
      "assignments",
      "base",
      "extract_relationships",
      "extract_symbols",
      "functions",
      "helpers",
      "identifiers",
      "imports",
      "new",
      "relationships",
      "signatures",
      "types",
      "variables",
      "visibility",
      "visit_node"
    ],
    "fixtures/real-world/ruby/variables.rb": [
      "$global_config",
      "$global_counter",
      "$global_counter",
      "@@instance_count",
      "@@instance_count",
      "@@instance_count",
      "@@instance_count",
      "@data",
      "@data",
      "@data_containers",
      "@data_containers",
      "@data_containers",
      "@data_containers",
      "@internal_status",
      "@internal_status",
      "@internal_status",
      "@internal_status",
      "@metadata",
      "@status",
      "@status",
      "@status",
      "@status",
      "@tracked_items",
      "@tracked_items",
      "@tracked_items",
      "@tracked_items",
      "DataContainer",
      "DataContainer",
      "DataContainer",
      "DataContainer",
      "DataContainer",
      "PROCESSING_MODES",
      "ProcessingHelper",
      "ProcessingHelper",
      "ProcessingHelper",
      "StatusTracker",
      "StatusTracker",
      "StatusTracker",
      "Time",
      "Time",
      "UnknownClass",
      "UnknownClass",
      "UnknownClass",
      "UnknownModule",
      "VariableInteractionTest",
      "VariableInteractionTest",
      "VariableInteractionTest",
      "add_container",
      "add_item",
      "container",
      "container.status",
      "container.status",
      "container.status",
      "create_processor",
      "dataclass_instance",
      "dataclass_instance.status",
      "demonstrate_variable_usage",
      "find_by_status",
      "get_instance_count",
      "get_metadata_info",
      "get_status_summary",
      "info",
      "info",
      "initialize",
      "initialize",
      "initialize",
      "interaction_test",
      "item.status",
      "item.status",
      "log_status_change",
      "models.rb",
      "old_status",
      "process_all_containers",
      "process_data",
      "processor",
      "result",
      "second_dataclass",
      "status",
      "statuses",
      "tracker",
      "update_all_status",
      "update_status"
    ],
    "src/extractors/csharp/types.rs": [
      "HashMap",
      "Node",
      "extract_class",
      "extract_enum",
      "extract_enum_member",
      "extract_interface",
      "extract_namespace",
      "extract_record",
      "extract_struct",
      "extract_using",
      "helpers"
    ],
    "fixtures/real-world/kotlin/Utils.kt": [
      "Utils",
      "printHello",
      "test_repo"
    ],
    "src/tests/tools/editing/fuzzy_replace.rs": [
      "FuzzyReplaceTool",
      "JulieServerHandler",
      "JulieServerHandler",
      "JulieServerHandler",
      "JulieServerHandler",
      "Result",
      "TempDir",
      "TempDir",
      "create_tool",
      "fs",
      "fs",
      "multi_file_tests",
      "security_tests",
      "test_calculate_balance_balanced",
      "test_calculate_balance_in_strings",
      "test_calculate_balance_mixed",
      "test_calculate_balance_unbalanced_braces",
      "test_calculate_balance_unbalanced_close",
      "test_calculate_similarity_different_lengths",
      "test_calculate_similarity_empty_strings",
      "test_calculate_similarity_identical",
      "test_calculate_similarity_insertion",
      "test_calculate_similarity_one_char_diff",
      "test_fuzzy_replace_multi_file_basic_glob",
      "test_fuzzy_replace_multi_file_dry_run",
      "test_fuzzy_replace_multi_file_no_matches",
      "test_fuzzy_replace_multi_file_results_aggregation",
      "test_fuzzy_replace_path_traversal_prevention_absolute_path",
      "test_fuzzy_replace_path_traversal_prevention_relative_traversal",
      "test_fuzzy_replace_performance_mod_rs",
      "test_fuzzy_replace_secure_path_resolution_valid_paths",
      "test_fuzzy_replace_single_file_still_works",
      "test_fuzzy_replace_validation_requires_exactly_one",
      "test_fuzzy_search_replace_empty_content",
      "test_fuzzy_search_replace_exact_match",
      "test_fuzzy_search_replace_multiple_matches",
      "test_fuzzy_search_replace_no_matches",
      "test_fuzzy_search_replace_pattern_longer_than_content",
      "test_fuzzy_search_replace_threshold_filtering",
      "test_fuzzy_search_replace_utf8_safety",
      "test_fuzzy_search_replace_with_typo",
      "test_validation_both_parameters_provided",
      "test_validation_neither_parameter_provided"
    ],
    "src/tools/search/hybrid_search.rs": [
      "HashMap",
      "JulieServerHandler",
      "Result",
      "Symbol",
      "debug",
      "hybrid_search_impl"
    ],
    "src/tools/workspace/parser_pool.rs": [
      "HashMap",
      "LanguageParserPool",
      "Result",
      "debug",
      "get_parser",
      "get_tree_sitter_language_static",
      "new"
    ],
    "src/extractors/csharp/relationships.rs": [
      "Tree",
      "extract_inheritance_relationships",
      "extract_relationships",
      "visit_relationships"
    ],
    "src/tests/utils/cross_language_intelligence.rs": [
      "SymbolKind",
      "test_camel_case_conversion",
      "test_generate_naming_variants",
      "test_get_equivalents",
      "test_intelligence_config_presets",
      "test_kebab_case_conversion",
      "test_pascal_case_conversion",
      "test_screaming_snake_case_conversion",
      "test_snake_case_conversion",
      "test_symbol_kind_equivalence",
      "tests"
    ],
    "src/tests/tools/smart_read.rs": [
      "GetSymbolsTool",
      "JulieServerHandler",
      "Result",
      "test_ast_boundary_extraction",
      "test_backward_compatibility",
      "test_body_extraction_modes",
      "test_smart_read_token_savings",
      "test_target_filter_includes_children",
      "test_target_filtering",
      "tests"
    ],
    "src/extractors/java/relationships.rs": [
      "HashMap",
      "JavaExtractor",
      "Node",
      "extract_inheritance_relationships",
      "find_type_symbol",
      "helpers",
      "serde_json"
    ],
    "src/tests/extractors/cpp/testing.rs": [
      "test_extract_google_test_catch2_and_boost_test_patterns",
      "tests"
    ],
    "fixtures/real-world/php/index.php": [],
    "UTF8_AUDIT.md": [],
    "src/tests/cli/parallel.rs": [
      "tempdir",
      "test_bulk_extraction_no_runtime_panic",
      "test_discover_files",
      "test_extract_file"
    ],
    "src/tests/extractors/css/basic.rs": [
      "SymbolKind",
      "extract_symbols",
      "test_extract_basic_selectors_properties_and_values",
      "tests"
    ],
    "src/tests/utils/progressive_reduction.rs": [
      "ProgressiveReducer",
      "test_calculate_count_with_verified_formula",
      "test_new_has_verified_reduction_steps",
      "test_reduce_applies_progressive_steps",
      "test_reduce_preserves_order",
      "test_reduce_uses_smallest_step_when_needed",
      "test_reduce_when_items_already_within_limit",
      "tests"
    ],
    "src/tools/navigation/mod.rs": [
      "FastGotoTool",
      "FastRefsTool",
      "fast_goto",
      "fast_refs",
      "reference_workspace",
      "resolution",
      "semantic_matching",
      "types"
    ],
    "src/tools/refactoring/rename.rs": [
      "CallToolResult",
      "DiffMatchPatch",
      "EditingTransaction",
      "FastRefsTool",
      "HashMap",
      "JsonValue",
      "JulieServerHandler",
      "Regex",
      "Result",
      "SmartRefactorTool",
      "debug",
      "handle_rename_symbol",
      "parse_refs_result",
      "update_import_statements_in_files",
      "update_imports_in_file"
    ],
    "src/tests/extractors/css/identifier_extraction.rs": [
      "CSSExtractor",
      "PathBuf",
      "identifier_extraction_tests",
      "init_parser",
      "test_css_chained_member_access",
      "test_css_duplicate_calls_at_different_locations",
      "test_css_function_calls",
      "test_css_identifiers_have_containing_symbol",
      "test_css_member_access"
    ],
    "src/extractors/powershell/relationships.rs": [
      "Node",
      "extract_command_relationships",
      "extract_inheritance_relationships",
      "walk_tree_for_relationships"
    ],
    "fixtures/real-world/typescript/user-dashboard.tsx": [
      "./user-service",
      "UserDashboardProps",
      "UserDashboardProps",
      "UserStats",
      "UserStats",
      "[error, setError]",
      "[formData, setFormData]",
      "[isEditing, setIsEditing]",
      "[loading, setLoading]",
      "[stats, setStats]",
      "[user, setUser]",
      "activeProjects",
      "error",
      "error",
      "handleSubmit",
      "handleUpdateProfile",
      "hasAdminPermissions",
      "hasAdminPermissions",
      "lastLoginDate",
      "loadUserData",
      "onUserUpdate",
      "react",
      "roleNames",
      "setFormData",
      "setIsEditing",
      "totalLogins",
      "updatedUser",
      "user",
      "user",
      "userData",
      "userId",
      "userService",
      "userStats"
    ],
    "src/extractors/ruby/relationships.rs": [
      "Node",
      "extract_inheritance_relationship",
      "extract_module_inclusion_relationships",
      "extract_relationships",
      "extract_relationships_from_node",
      "process_include_extend_call"
    ],
    "src/tests/extractors/sql/security.rs": [
      "SymbolKind",
      "test_extract_security_permissions_and_access_control",
      "tests"
    ],
    "src/extractors/javascript/types.rs": [
      "HashMap",
      "Node",
      "extract_class",
      "extract_export",
      "extract_exported_name",
      "extract_property",
      "json"
    ]
  }
}