# Complex Regular Expression Patterns Collection
# Comprehensive regex patterns for real-world validation and parsing

# ==========================================
# EMAIL VALIDATION PATTERNS
# ==========================================

# Basic email pattern
^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$

# RFC 5322 compliant email (simplified)
^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$

# Email with optional display name
^(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$

# ==========================================
# PHONE NUMBER PATTERNS
# ==========================================

# US phone number formats
^\+?1?[-.\s]?\(?([0-9]{3})\)?[-.\s]?([0-9]{3})[-.\s]?([0-9]{4})$

# International phone number (E.164 format)
^\+[1-9]\d{1,14}$

# Flexible phone number with optional country code
^(\+\d{1,3}[-.\s]?)?\(?\d{1,4}\)?[-.\s]?\d{1,4}[-.\s]?\d{1,9}$

# ==========================================
# URL AND WEB PATTERNS
# ==========================================

# Basic URL pattern
^https?:\/\/(?:[-\w.])+(?:\:[0-9]+)?(?:\/(?:[\w\/_.])*(?:\?(?:[\w&=%.]*))?(?:\#(?:[\w.]*))?)?$

# Comprehensive URL with all components
^(https?|ftp):\/\/(?:(?:[a-zA-Z0-9\$\-\_\.\+\!\*\'\(\)\,]|%[0-9a-fA-F]{2})+(?::(?:[a-zA-Z0-9\$\-\_\.\+\!\*\'\(\)\,]|%[0-9a-fA-F]{2})+)?@)?(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)*[a-zA-Z0-9](?:[a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?)|(?:\[(?:(?:(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,7}:)|(?:(?:[0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,5}(?::[0-9a-fA-F]{1,4}){1,2})|(?:(?:[0-9a-fA-F]{1,4}:){1,4}(?::[0-9a-fA-F]{1,4}){1,3})|(?:(?:[0-9a-fA-F]{1,4}:){1,3}(?::[0-9a-fA-F]{1,4}){1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,2}(?::[0-9a-fA-F]{1,4}){1,5})|(?:[0-9a-fA-F]{1,4}:(?:(?::[0-9a-fA-F]{1,4}){1,6}))|(?::(?:(?::[0-9a-fA-F]{1,4}){1,7}|:))|(?:fe80:(?::[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]+)|(?:::(ffff(:0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1?[0-9])?[0-9])))\]))(?::(?:6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9]))?(?:\/(?:(?:[a-zA-Z0-9\$\-\_\.\+\!\*\'\(\)\,]|%[0-9a-fA-F]{2})*))*(?:\?(?:(?:[a-zA-Z0-9\$\-\_\.\+\!\*\'\(\)\,]|%[0-9a-fA-F]{2})*(?:&(?:[a-zA-Z0-9\$\-\_\.\+\!\*\'\(\)\,]|%[0-9a-fA-F]{2})*)*))?(?:\#(?:[a-zA-Z0-9\$\-\_\.\+\!\*\'\(\)\,]|%[0-9a-fA-F]{2})*)?$

# Domain name validation
^(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)*[a-zA-Z0-9](?:[a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?$

# IPv4 address
^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$

# IPv6 address
^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$|^::1$|^::$

# ==========================================
# DATE AND TIME PATTERNS
# ==========================================

# ISO 8601 date format (YYYY-MM-DD)
^\d{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$

# ISO 8601 datetime with timezone
^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:\.\d{3})?(?:Z|[+-]\d{2}:\d{2})$

# Flexible date formats (MM/DD/YYYY, DD/MM/YYYY, etc.)
^(?:(?:0?[1-9]|1[0-2])[\/-](?:0?[1-9]|[12][0-9]|3[01])[\/-](?:19|20)\d{2})|(?:(?:0?[1-9]|[12][0-9]|3[01])[\/-](?:0?[1-9]|1[0-2])[\/-](?:19|20)\d{2})$

# Time format (12-hour with AM/PM)
^(1[0-2]|0?[1-9]):([0-5][0-9]):([0-5][0-9])\s?(AM|PM|am|pm)$

# Time format (24-hour)
^([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$

# ==========================================
# FINANCIAL PATTERNS
# ==========================================

# Credit card numbers (with optional spaces/dashes)
^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3[0-9]{13}|6(?:011|5[0-9]{2})[0-9]{12})$

# Bank account number (US format)
^[0-9]{8,17}$

# Currency amounts
^\$?[0-9]{1,3}(?:,[0-9]{3})*(?:\.[0-9]{2})?$

# Cryptocurrency wallet addresses (Bitcoin)
^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$

# Ethereum address
^0x[a-fA-F0-9]{40}$

# ==========================================
# PASSWORD VALIDATION PATTERNS
# ==========================================

# Strong password (8+ chars, upper, lower, digit, special)
^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$

# Medium password (6+ chars with mixed case and numbers)
^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Za-z\d@$!%*?&]{6,}$

# Password without common patterns
^(?!.*(.)\1{2,})(?!.*123)(?!.*abc)(?!.*password)(?!.*qwerty)[A-Za-z\d@$!%*?&]{8,}$

# ==========================================
# DATA EXTRACTION PATTERNS
# ==========================================

# HTML tags extraction
<([a-zA-Z][a-zA-Z0-9]*)\b[^<>]*>.*?</\1>

# CSS selectors
^[a-zA-Z][a-zA-Z0-9_-]*$|^\.[a-zA-Z][a-zA-Z0-9_-]*$|^#[a-zA-Z][a-zA-Z0-9_-]*$

# Extract emails from text
\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b

# Extract URLs from text
https?:\/\/(?:[-\w.])+(?:\:[0-9]+)?(?:\/(?:[\w\/_.])*(?:\?(?:[\w&=%.]*))?(?:\#(?:[\w.]*))?)?

# Extract phone numbers from text
(?:\+?1[-.\s]?)?(?:\(?[0-9]{3}\)?[-.\s]?[0-9]{3}[-.\s]?[0-9]{4})

# Extract hashtags
#[a-zA-Z0-9_]+

# Extract mentions
@[a-zA-Z0-9_]+

# ==========================================
# LOG PARSING PATTERNS
# ==========================================

# Apache/Nginx access log
^(\S+) \S+ \S+ \[([\w:/]+\s[+\-]\d{4})\] "(\S+) (\S+) (\S+)" (\d{3}) (\d+) "([^"]*)" "([^"]*)"$

# Syslog format
^(\w{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2})\s+(\S+)\s+([^:]+):\s+(.*)$

# JSON log extraction
^\{.*\}$

# Error patterns in logs
(ERROR|error|Error|FATAL|fatal|Fatal|EXCEPTION|exception|Exception)

# ==========================================
# PROGRAMMING PATTERNS
# ==========================================

# Variable names (most languages)
^[a-zA-Z_][a-zA-Z0-9_]*$

# Function calls
\b([a-zA-Z_][a-zA-Z0-9_]*)\s*\(

# Comments (single line)
^\s*//.*$|^\s*#.*$

# Hexadecimal colors
^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$

# Version numbers (semantic versioning)
^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$

# ==========================================
# ADVANCED PATTERNS
# ==========================================

# Balanced parentheses (using recursion - not all regex engines support this)
\((?:[^()]*|\((?:[^()]*|\([^()]*\))*\))*\)

# Words with specific letter patterns
^(?=.*a)(?=.*e)(?=.*i)(?=.*o)(?=.*u)[a-z]+$

# Palindrome detection
^([a-z])(?:(?R)|[a-z]?\1)$

# Remove extra whitespace
\s+

# Split CamelCase
(?<=[a-z])(?=[A-Z])|(?<=[A-Z])(?=[A-Z][a-z])

# ==========================================
# SECURITY PATTERNS
# ==========================================

# SQL injection patterns
(\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION)\b)|(\b(OR|AND)\b\s+\d+=\d+)|('.*')|(--.*)|(\/\*.*\*\/)

# XSS patterns
<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>|javascript:|on\w+\s*=

# Path traversal
(\.\.\/|\.\.\\)+

# Command injection
[;&|`$(){}[\]\\]